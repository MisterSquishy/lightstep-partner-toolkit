/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./tracer.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_BATCH_OBSERVER = exports.NOOP_SUM_OBSERVER_METRIC = exports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC = exports.NOOP_VALUE_OBSERVER_METRIC = exports.NOOP_BOUND_BASE_OBSERVER = exports.NOOP_VALUE_RECORDER_METRIC = exports.NOOP_BOUND_VALUE_RECORDER = exports.NOOP_COUNTER_METRIC = exports.NOOP_BOUND_COUNTER = exports.NOOP_METER = exports.NoopBoundBaseObserver = exports.NoopBoundValueRecorder = exports.NoopBoundCounter = exports.NoopBatchObserver = exports.NoopBaseObserverMetric = exports.NoopValueRecorderMetric = exports.NoopCounterMetric = exports.NoopMetric = exports.NoopMeter = void 0;\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * Returns constant noop value recorder.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createValueRecorder = function (_name, _options) {\n        return exports.NOOP_VALUE_RECORDER_METRIC;\n    };\n    /**\n     * Returns a constant noop counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return exports.NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop UpDownCounter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return exports.NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns constant noop value observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    NoopMeter.prototype.createValueObserver = function (_name, _options, _callback) {\n        return exports.NOOP_VALUE_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop sum observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the sum observer callback\n     */\n    NoopMeter.prototype.createSumObserver = function (_name, _options, _callback) {\n        return exports.NOOP_SUM_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop up down sum observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the up down sum observer callback\n     */\n    NoopMeter.prototype.createUpDownSumObserver = function (_name, _options, _callback) {\n        return exports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop batch observer.\n     * @param name the name of the metric.\n     * @param callback the batch observer callback\n     */\n    NoopMeter.prototype.createBatchObserver = function (_callback) {\n        return exports.NOOP_BATCH_OBSERVER;\n    };\n    return NoopMeter;\n}());\nexports.NoopMeter = NoopMeter;\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric(instrument) {\n        this._instrument = instrument;\n    }\n    /**\n     * Returns a Bound Instrument associated with specified Labels.\n     * It is recommended to keep a reference to the Bound Instrument instead of\n     * always calling this method for every operations.\n     * @param labels key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    NoopMetric.prototype.bind = function (_labels) {\n        return this._instrument;\n    };\n    /**\n     * Removes the Binding from the metric, if it is present.\n     * @param labels key-values pairs that are associated with a specific metric.\n     */\n    NoopMetric.prototype.unbind = function (_labels) {\n        return;\n    };\n    /**\n     * Clears all timeseries from the Metric.\n     */\n    NoopMetric.prototype.clear = function () {\n        return;\n    };\n    return NoopMetric;\n}());\nexports.NoopMetric = NoopMetric;\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (value, labels) {\n        this.bind(labels).add(value);\n    };\n    return NoopCounterMetric;\n}(NoopMetric));\nexports.NoopCounterMetric = NoopCounterMetric;\nvar NoopValueRecorderMetric = /** @class */ (function (_super) {\n    __extends(NoopValueRecorderMetric, _super);\n    function NoopValueRecorderMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopValueRecorderMetric.prototype.record = function (value, labels) {\n        this.bind(labels).record(value);\n    };\n    return NoopValueRecorderMetric;\n}(NoopMetric));\nexports.NoopValueRecorderMetric = NoopValueRecorderMetric;\nvar NoopBaseObserverMetric = /** @class */ (function (_super) {\n    __extends(NoopBaseObserverMetric, _super);\n    function NoopBaseObserverMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopBaseObserverMetric.prototype.observation = function () {\n        return {\n            observer: this,\n            value: 0,\n        };\n    };\n    return NoopBaseObserverMetric;\n}(NoopMetric));\nexports.NoopBaseObserverMetric = NoopBaseObserverMetric;\nvar NoopBatchObserver = /** @class */ (function () {\n    function NoopBatchObserver() {\n    }\n    return NoopBatchObserver;\n}());\nexports.NoopBatchObserver = NoopBatchObserver;\nvar NoopBoundCounter = /** @class */ (function () {\n    function NoopBoundCounter() {\n    }\n    NoopBoundCounter.prototype.add = function (_value) {\n        return;\n    };\n    return NoopBoundCounter;\n}());\nexports.NoopBoundCounter = NoopBoundCounter;\nvar NoopBoundValueRecorder = /** @class */ (function () {\n    function NoopBoundValueRecorder() {\n    }\n    NoopBoundValueRecorder.prototype.record = function (_value, _baggage, _spanContext) {\n        return;\n    };\n    return NoopBoundValueRecorder;\n}());\nexports.NoopBoundValueRecorder = NoopBoundValueRecorder;\nvar NoopBoundBaseObserver = /** @class */ (function () {\n    function NoopBoundBaseObserver() {\n    }\n    NoopBoundBaseObserver.prototype.update = function (_value) { };\n    return NoopBoundBaseObserver;\n}());\nexports.NoopBoundBaseObserver = NoopBoundBaseObserver;\nexports.NOOP_METER = new NoopMeter();\nexports.NOOP_BOUND_COUNTER = new NoopBoundCounter();\nexports.NOOP_COUNTER_METRIC = new NoopCounterMetric(exports.NOOP_BOUND_COUNTER);\nexports.NOOP_BOUND_VALUE_RECORDER = new NoopBoundValueRecorder();\nexports.NOOP_VALUE_RECORDER_METRIC = new NoopValueRecorderMetric(exports.NOOP_BOUND_VALUE_RECORDER);\nexports.NOOP_BOUND_BASE_OBSERVER = new NoopBoundBaseObserver();\nexports.NOOP_VALUE_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_SUM_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_BATCH_OBSERVER = new NoopBatchObserver();\n//# sourceMappingURL=NoopMeter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_METER_PROVIDER = exports.NoopMeterProvider = void 0;\nvar NoopMeter_1 = __webpack_require__(/*! ./NoopMeter */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\");\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version) {\n        return NoopMeter_1.NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexports.NoopMeterProvider = NoopMeterProvider;\nexports.NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL05vb3BNZXRlclByb3ZpZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy9Ob29wTWV0ZXJQcm92aWRlci5qcz83N2FjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTk9PUF9NRVRFUl9QUk9WSURFUiA9IGV4cG9ydHMuTm9vcE1ldGVyUHJvdmlkZXIgPSB2b2lkIDA7XG52YXIgTm9vcE1ldGVyXzEgPSByZXF1aXJlKFwiLi9Ob29wTWV0ZXJcIik7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgTWV0ZXJQcm92aWRlcn0gd2hpY2ggcmV0dXJucyBhbiBpbXBvdGVudCBNZXRlclxuICogZm9yIGFsbCBjYWxscyB0byBgZ2V0TWV0ZXJgXG4gKi9cbnZhciBOb29wTWV0ZXJQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wTWV0ZXJQcm92aWRlcigpIHtcbiAgICB9XG4gICAgTm9vcE1ldGVyUHJvdmlkZXIucHJvdG90eXBlLmdldE1ldGVyID0gZnVuY3Rpb24gKF9uYW1lLCBfdmVyc2lvbikge1xuICAgICAgICByZXR1cm4gTm9vcE1ldGVyXzEuTk9PUF9NRVRFUjtcbiAgICB9O1xuICAgIHJldHVybiBOb29wTWV0ZXJQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLk5vb3BNZXRlclByb3ZpZGVyID0gTm9vcE1ldGVyUHJvdmlkZXI7XG5leHBvcnRzLk5PT1BfTUVURVJfUFJPVklERVIgPSBuZXcgTm9vcE1ldGVyUHJvdmlkZXIoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BNZXRlclByb3ZpZGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = exports.makeGetter = exports._global = exports.GLOBAL_METRICS_API_KEY = void 0;\nvar platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js\");\nexports.GLOBAL_METRICS_API_KEY = Symbol.for('io.opentelemetry.js.api.metrics');\nexports._global = platform_1._globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nfunction makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\nexports.makeGetter = makeGetter;\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = 3;\n//# sourceMappingURL=global-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9nbG9iYWwtdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9nbG9iYWwtdXRpbHMuanM/NjU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OID0gZXhwb3J0cy5tYWtlR2V0dGVyID0gZXhwb3J0cy5fZ2xvYmFsID0gZXhwb3J0cy5HTE9CQUxfTUVUUklDU19BUElfS0VZID0gdm9pZCAwO1xudmFyIHBsYXRmb3JtXzEgPSByZXF1aXJlKFwiLi4vcGxhdGZvcm1cIik7XG5leHBvcnRzLkdMT0JBTF9NRVRSSUNTX0FQSV9LRVkgPSBTeW1ib2wuZm9yKCdpby5vcGVudGVsZW1ldHJ5LmpzLmFwaS5tZXRyaWNzJyk7XG5leHBvcnRzLl9nbG9iYWwgPSBwbGF0Zm9ybV8xLl9nbG9iYWxUaGlzO1xuLyoqXG4gKiBNYWtlIGEgZnVuY3Rpb24gd2hpY2ggYWNjZXB0cyBhIHZlcnNpb24gaW50ZWdlciBhbmQgcmV0dXJucyB0aGUgaW5zdGFuY2Ugb2YgYW4gQVBJIGlmIHRoZSB2ZXJzaW9uXG4gKiBpcyBjb21wYXRpYmxlLCBvciBhIGZhbGxiYWNrIHZlcnNpb24gKHVzdWFsbHkgTk9PUCkgaWYgaXQgaXMgbm90LlxuICpcbiAqIEBwYXJhbSByZXF1aXJlZFZlcnNpb24gQmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdmVyc2lvbiB3aGljaCBpcyByZXF1aXJlZCB0byByZXR1cm4gdGhlIGluc3RhbmNlXG4gKiBAcGFyYW0gaW5zdGFuY2UgSW5zdGFuY2Ugd2hpY2ggc2hvdWxkIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIGNvbXBhdGlibGVcbiAqIEBwYXJhbSBmYWxsYmFjayBGYWxsYmFjayBpbnN0YW5jZSwgdXN1YWxseSBOT09QLCB3aGljaCB3aWxsIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIG5vdCBjb21wYXRpYmxlXG4gKi9cbmZ1bmN0aW9uIG1ha2VHZXR0ZXIocmVxdWlyZWRWZXJzaW9uLCBpbnN0YW5jZSwgZmFsbGJhY2spIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHZlcnNpb24gPT09IHJlcXVpcmVkVmVyc2lvbiA/IGluc3RhbmNlIDogZmFsbGJhY2s7XG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZUdldHRlciA9IG1ha2VHZXR0ZXI7XG4vKipcbiAqIEEgbnVtYmVyIHdoaWNoIHNob3VsZCBiZSBpbmNyZW1lbnRlZCBlYWNoIHRpbWUgYSBiYWNrd2FyZHMgaW5jb21wYXRpYmxlXG4gKiBjaGFuZ2UgaXMgbWFkZSB0byB0aGUgQVBJLiBUaGlzIG51bWJlciBpcyB1c2VkIHdoZW4gYW4gQVBJIHBhY2thZ2VcbiAqIGF0dGVtcHRzIHRvIGFjY2VzcyB0aGUgZ2xvYmFsIEFQSSB0byBlbnN1cmUgaXQgaXMgZ2V0dGluZyBhIGNvbXBhdGlibGVcbiAqIHZlcnNpb24uIElmIHRoZSBnbG9iYWwgQVBJIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIEFQSSBwYWNrYWdlXG4gKiBhdHRlbXB0aW5nIHRvIGdldCBpdCwgYSBOT09QIEFQSSBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIHJldHVybmVkLlxuICovXG5leHBvcnRzLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OID0gMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricsAPI = void 0;\nvar NoopMeterProvider_1 = __webpack_require__(/*! ../NoopMeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\");\nvar global_utils_1 = __webpack_require__(/*! ./global-utils */ \"./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter. Returns the initialized global meter provider.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        if (global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY]) {\n            // global meter provider has already been set\n            return this.getMeterProvider();\n        }\n        global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY] = global_utils_1.makeGetter(global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION, provider, NoopMeterProvider_1.NOOP_METER_PROVIDER);\n        return provider;\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(global_utils_1._global, global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NoopMeterProvider_1.NOOP_METER_PROVIDER);\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version) {\n        return this.getMeterProvider().getMeter(name, version);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        delete global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY];\n    };\n    return MetricsAPI;\n}());\nexports.MetricsAPI = MetricsAPI;\n//# sourceMappingURL=metrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9tZXRyaWNzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy9hcGkvbWV0cmljcy5qcz8zZmUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWV0cmljc0FQSSA9IHZvaWQgMDtcbnZhciBOb29wTWV0ZXJQcm92aWRlcl8xID0gcmVxdWlyZShcIi4uL05vb3BNZXRlclByb3ZpZGVyXCIpO1xudmFyIGdsb2JhbF91dGlsc18xID0gcmVxdWlyZShcIi4vZ2xvYmFsLXV0aWxzXCIpO1xuLyoqXG4gKiBTaW5nbGV0b24gb2JqZWN0IHdoaWNoIHJlcHJlc2VudHMgdGhlIGVudHJ5IHBvaW50IHRvIHRoZSBPcGVuVGVsZW1ldHJ5IE1ldHJpY3MgQVBJXG4gKi9cbnZhciBNZXRyaWNzQVBJID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKiBFbXB0eSBwcml2YXRlIGNvbnN0cnVjdG9yIHByZXZlbnRzIGVuZCB1c2VycyBmcm9tIGNvbnN0cnVjdGluZyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgQVBJICovXG4gICAgZnVuY3Rpb24gTWV0cmljc0FQSSgpIHtcbiAgICB9XG4gICAgLyoqIEdldCB0aGUgc2luZ2xldG9uIGluc3RhbmNlIG9mIHRoZSBNZXRyaWNzIEFQSSAqL1xuICAgIE1ldHJpY3NBUEkuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IE1ldHJpY3NBUEkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgZ2xvYmFsIG1ldGVyLiBSZXR1cm5zIHRoZSBpbml0aWFsaXplZCBnbG9iYWwgbWV0ZXIgcHJvdmlkZXIuXG4gICAgICovXG4gICAgTWV0cmljc0FQSS5wcm90b3R5cGUuc2V0R2xvYmFsTWV0ZXJQcm92aWRlciA9IGZ1bmN0aW9uIChwcm92aWRlcikge1xuICAgICAgICBpZiAoZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfTUVUUklDU19BUElfS0VZXSkge1xuICAgICAgICAgICAgLy8gZ2xvYmFsIG1ldGVyIHByb3ZpZGVyIGhhcyBhbHJlYWR5IGJlZW4gc2V0XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRNZXRlclByb3ZpZGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfTUVUUklDU19BUElfS0VZXSA9IGdsb2JhbF91dGlsc18xLm1ha2VHZXR0ZXIoZ2xvYmFsX3V0aWxzXzEuQVBJX0JBQ0tXQVJEU19DT01QQVRJQklMSVRZX1ZFUlNJT04sIHByb3ZpZGVyLCBOb29wTWV0ZXJQcm92aWRlcl8xLk5PT1BfTUVURVJfUFJPVklERVIpO1xuICAgICAgICByZXR1cm4gcHJvdmlkZXI7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBnbG9iYWwgbWV0ZXIgcHJvdmlkZXIuXG4gICAgICovXG4gICAgTWV0cmljc0FQSS5wcm90b3R5cGUuZ2V0TWV0ZXJQcm92aWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuICgoX2IgPSAoX2EgPSBnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsW2dsb2JhbF91dGlsc18xLkdMT0JBTF9NRVRSSUNTX0FQSV9LRVldKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsLCBnbG9iYWxfdXRpbHNfMS5BUElfQkFDS1dBUkRTX0NPTVBBVElCSUxJVFlfVkVSU0lPTikpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IE5vb3BNZXRlclByb3ZpZGVyXzEuTk9PUF9NRVRFUl9QUk9WSURFUik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbWV0ZXIgZnJvbSB0aGUgZ2xvYmFsIG1ldGVyIHByb3ZpZGVyLlxuICAgICAqL1xuICAgIE1ldHJpY3NBUEkucHJvdG90eXBlLmdldE1ldGVyID0gZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TWV0ZXJQcm92aWRlcigpLmdldE1ldGVyKG5hbWUsIHZlcnNpb24pO1xuICAgIH07XG4gICAgLyoqIFJlbW92ZSB0aGUgZ2xvYmFsIG1ldGVyIHByb3ZpZGVyICovXG4gICAgTWV0cmljc0FQSS5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVsZXRlIGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX01FVFJJQ1NfQVBJX0tFWV07XG4gICAgfTtcbiAgICByZXR1cm4gTWV0cmljc0FQSTtcbn0oKSk7XG5leHBvcnRzLk1ldHJpY3NBUEkgPSBNZXRyaWNzQVBJO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.metrics = void 0;\n__exportStar(__webpack_require__(/*! ./NoopMeter */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./NoopMeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/BatchObserverResult */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/BoundInstrument */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Meter */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/MeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Metric */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Observation */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/ObserverResult */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js\"), exports);\nvar metrics_1 = __webpack_require__(/*! ./api/metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js\");\n/** Entrypoint for metrics API */\nexports.metrics = metrics_1.MetricsAPI.getInstance();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy9pbmRleC5qcz82Y2U0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWV0cmljcyA9IHZvaWQgMDtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Ob29wTWV0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL05vb3BNZXRlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9CYXRjaE9ic2VydmVyUmVzdWx0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9Cb3VuZEluc3RydW1lbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzL01ldGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9NZXRlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9NZXRyaWNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzL09ic2VydmF0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9PYnNlcnZlclJlc3VsdFwiKSwgZXhwb3J0cyk7XG52YXIgbWV0cmljc18xID0gcmVxdWlyZShcIi4vYXBpL21ldHJpY3NcIik7XG4vKiogRW50cnlwb2ludCBmb3IgbWV0cmljcyBBUEkgKi9cbmV4cG9ydHMubWV0cmljcyA9IG1ldHJpY3NfMS5NZXRyaWNzQVBJLmdldEluc3RhbmNlKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._globalThis = void 0;\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexports._globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvZ2xvYmFsVGhpcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9nbG9iYWxUaGlzLmpzPzRmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5fZ2xvYmFsVGhpcyA9IHZvaWQgMDtcbi8qKiBvbmx5IGdsb2JhbHMgdGhhdCBjb21tb24gdG8gbm9kZSBhbmQgYnJvd3NlcnMgYXJlIGFsbG93ZWQgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBub2RlL25vLXVuc3VwcG9ydGVkLWZlYXR1cmVzL2VzLWJ1aWx0aW5zLCBuby11bmRlZlxuZXhwb3J0cy5fZ2xvYmFsVGhpcyA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JyA/IGdsb2JhbFRoaXMgOiB3aW5kb3c7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxUaGlzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanM/ODIzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2xvYmFsVGhpc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=BatchObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JhdGNoT2JzZXJ2ZXJSZXN1bHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JhdGNoT2JzZXJ2ZXJSZXN1bHQuanM/OWZmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXRjaE9ic2VydmVyUmVzdWx0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=BoundInstrument.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JvdW5kSW5zdHJ1bWVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvdHlwZXMvQm91bmRJbnN0cnVtZW50LmpzP2M0MDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Qm91bmRJbnN0cnVtZW50LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Meter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy9NZXRlci5qcz8zMzA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1ldGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldGVyUHJvdmlkZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldGVyUHJvdmlkZXIuanM/OTQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXRlclByb3ZpZGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueType = void 0;\n/** The Type of value. It describes how the data is reported. */\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n//# sourceMappingURL=Metric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldHJpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvdHlwZXMvTWV0cmljLmpzPzBiYmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WYWx1ZVR5cGUgPSB2b2lkIDA7XG4vKiogVGhlIFR5cGUgb2YgdmFsdWUuIEl0IGRlc2NyaWJlcyBob3cgdGhlIGRhdGEgaXMgcmVwb3J0ZWQuICovXG52YXIgVmFsdWVUeXBlO1xuKGZ1bmN0aW9uIChWYWx1ZVR5cGUpIHtcbiAgICBWYWx1ZVR5cGVbVmFsdWVUeXBlW1wiSU5UXCJdID0gMF0gPSBcIklOVFwiO1xuICAgIFZhbHVlVHlwZVtWYWx1ZVR5cGVbXCJET1VCTEVcIl0gPSAxXSA9IFwiRE9VQkxFXCI7XG59KShWYWx1ZVR5cGUgPSBleHBvcnRzLlZhbHVlVHlwZSB8fCAoZXhwb3J0cy5WYWx1ZVR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWV0cmljLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Observation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL09ic2VydmF0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy9PYnNlcnZhdGlvbi5qcz8wY2Y4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9ic2VydmF0aW9uLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL09ic2VydmVyUmVzdWx0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy9PYnNlcnZlclJlc3VsdC5qcz85ZjZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9ic2VydmVyUmVzdWx0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/context.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextAPI = void 0;\nvar context_base_1 = __webpack_require__(/*! @opentelemetry/context-base */ \"./node_modules/@opentelemetry/context-base/build/src/index.js\");\nvar global_utils_1 = __webpack_require__(/*! ./global-utils */ \"./node_modules/@opentelemetry/api/build/src/api/global-utils.js\");\nvar NOOP_CONTEXT_MANAGER = new context_base_1.NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager. Returns the initialized context manager\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        if (global_utils_1._global[global_utils_1.GLOBAL_CONTEXT_MANAGER_API_KEY]) {\n            // global context manager has already been set\n            return this._getContextManager();\n        }\n        global_utils_1._global[global_utils_1.GLOBAL_CONTEXT_MANAGER_API_KEY] = global_utils_1.makeGetter(global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION, contextManager, NOOP_CONTEXT_MANAGER);\n        return contextManager;\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     */\n    ContextAPI.prototype.with = function (context, fn) {\n        return this._getContextManager().with(context, fn);\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param target function or event emitter to bind\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     */\n    ContextAPI.prototype.bind = function (target, context) {\n        if (context === void 0) { context = this.active(); }\n        return this._getContextManager().bind(target, context);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        var _a, _b;\n        return ((_b = (_a = global_utils_1._global[global_utils_1.GLOBAL_CONTEXT_MANAGER_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(global_utils_1._global, global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NOOP_CONTEXT_MANAGER);\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        delete global_utils_1._global[global_utils_1.GLOBAL_CONTEXT_MANAGER_API_KEY];\n    };\n    return ContextAPI;\n}());\nexports.ContextAPI = ContextAPI;\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvY29udGV4dC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2FwaS9jb250ZXh0LmpzP2IzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250ZXh0QVBJID0gdm9pZCAwO1xudmFyIGNvbnRleHRfYmFzZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvbnRleHQtYmFzZVwiKTtcbnZhciBnbG9iYWxfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2dsb2JhbC11dGlsc1wiKTtcbnZhciBOT09QX0NPTlRFWFRfTUFOQUdFUiA9IG5ldyBjb250ZXh0X2Jhc2VfMS5Ob29wQ29udGV4dE1hbmFnZXIoKTtcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB3aGljaCByZXByZXNlbnRzIHRoZSBlbnRyeSBwb2ludCB0byB0aGUgT3BlblRlbGVtZXRyeSBDb250ZXh0IEFQSVxuICovXG52YXIgQ29udGV4dEFQSSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKiogRW1wdHkgcHJpdmF0ZSBjb25zdHJ1Y3RvciBwcmV2ZW50cyBlbmQgdXNlcnMgZnJvbSBjb25zdHJ1Y3RpbmcgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIEFQSSAqL1xuICAgIGZ1bmN0aW9uIENvbnRleHRBUEkoKSB7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgQ29udGV4dCBBUEkgKi9cbiAgICBDb250ZXh0QVBJLmdldEluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBDb250ZXh0QVBJKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGNvbnRleHQgbWFuYWdlci4gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY29udGV4dCBtYW5hZ2VyXG4gICAgICovXG4gICAgQ29udGV4dEFQSS5wcm90b3R5cGUuc2V0R2xvYmFsQ29udGV4dE1hbmFnZXIgPSBmdW5jdGlvbiAoY29udGV4dE1hbmFnZXIpIHtcbiAgICAgICAgaWYgKGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX0NPTlRFWFRfTUFOQUdFUl9BUElfS0VZXSkge1xuICAgICAgICAgICAgLy8gZ2xvYmFsIGNvbnRleHQgbWFuYWdlciBoYXMgYWxyZWFkeSBiZWVuIHNldFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dldENvbnRleHRNYW5hZ2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfQ09OVEVYVF9NQU5BR0VSX0FQSV9LRVldID0gZ2xvYmFsX3V0aWxzXzEubWFrZUdldHRlcihnbG9iYWxfdXRpbHNfMS5BUElfQkFDS1dBUkRTX0NPTVBBVElCSUxJVFlfVkVSU0lPTiwgY29udGV4dE1hbmFnZXIsIE5PT1BfQ09OVEVYVF9NQU5BR0VSKTtcbiAgICAgICAgcmV0dXJuIGNvbnRleHRNYW5hZ2VyO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBjdXJyZW50bHkgYWN0aXZlIGNvbnRleHRcbiAgICAgKi9cbiAgICBDb250ZXh0QVBJLnByb3RvdHlwZS5hY3RpdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRDb250ZXh0TWFuYWdlcigpLmFjdGl2ZSgpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGZ1bmN0aW9uIHdpdGggYW4gYWN0aXZlIGNvbnRleHRcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gYmUgYWN0aXZlIGR1cmluZyBmdW5jdGlvbiBleGVjdXRpb25cbiAgICAgKiBAcGFyYW0gZm4gZnVuY3Rpb24gdG8gZXhlY3V0ZSBpbiBhIGNvbnRleHRcbiAgICAgKi9cbiAgICBDb250ZXh0QVBJLnByb3RvdHlwZS53aXRoID0gZnVuY3Rpb24gKGNvbnRleHQsIGZuKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRDb250ZXh0TWFuYWdlcigpLndpdGgoY29udGV4dCwgZm4pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQmluZCBhIGNvbnRleHQgdG8gYSB0YXJnZXQgZnVuY3Rpb24gb3IgZXZlbnQgZW1pdHRlclxuICAgICAqXG4gICAgICogQHBhcmFtIHRhcmdldCBmdW5jdGlvbiBvciBldmVudCBlbWl0dGVyIHRvIGJpbmRcbiAgICAgKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIGJpbmQgdG8gdGhlIGV2ZW50IGVtaXR0ZXIgb3IgZnVuY3Rpb24uIERlZmF1bHRzIHRvIHRoZSBjdXJyZW50bHkgYWN0aXZlIGNvbnRleHRcbiAgICAgKi9cbiAgICBDb250ZXh0QVBJLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKHRhcmdldCwgY29udGV4dCkge1xuICAgICAgICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7IGNvbnRleHQgPSB0aGlzLmFjdGl2ZSgpOyB9XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRDb250ZXh0TWFuYWdlcigpLmJpbmQodGFyZ2V0LCBjb250ZXh0KTtcbiAgICB9O1xuICAgIENvbnRleHRBUEkucHJvdG90eXBlLl9nZXRDb250ZXh0TWFuYWdlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuICgoX2IgPSAoX2EgPSBnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsW2dsb2JhbF91dGlsc18xLkdMT0JBTF9DT05URVhUX01BTkFHRVJfQVBJX0tFWV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGdsb2JhbF91dGlsc18xLl9nbG9iYWwsIGdsb2JhbF91dGlsc18xLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogTk9PUF9DT05URVhUX01BTkFHRVIpO1xuICAgIH07XG4gICAgLyoqIERpc2FibGUgYW5kIHJlbW92ZSB0aGUgZ2xvYmFsIGNvbnRleHQgbWFuYWdlciAqL1xuICAgIENvbnRleHRBUEkucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2dldENvbnRleHRNYW5hZ2VyKCkuZGlzYWJsZSgpO1xuICAgICAgICBkZWxldGUgZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfQ09OVEVYVF9NQU5BR0VSX0FQSV9LRVldO1xuICAgIH07XG4gICAgcmV0dXJuIENvbnRleHRBUEk7XG59KCkpO1xuZXhwb3J0cy5Db250ZXh0QVBJID0gQ29udGV4dEFQSTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/global-utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/global-utils.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = exports.makeGetter = exports._global = exports.GLOBAL_TRACE_API_KEY = exports.GLOBAL_PROPAGATION_API_KEY = exports.GLOBAL_CONTEXT_MANAGER_API_KEY = void 0;\nvar platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api/build/src/platform/browser/index.js\");\nexports.GLOBAL_CONTEXT_MANAGER_API_KEY = Symbol.for('io.opentelemetry.js.api.context');\nexports.GLOBAL_PROPAGATION_API_KEY = Symbol.for('io.opentelemetry.js.api.propagation');\nexports.GLOBAL_TRACE_API_KEY = Symbol.for('io.opentelemetry.js.api.trace');\nexports._global = platform_1._globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nfunction makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\nexports.makeGetter = makeGetter;\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = 4;\n//# sourceMappingURL=global-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvZ2xvYmFsLXV0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvYXBpL2dsb2JhbC11dGlscy5qcz9kMDdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQVBJX0JBQ0tXQVJEU19DT01QQVRJQklMSVRZX1ZFUlNJT04gPSBleHBvcnRzLm1ha2VHZXR0ZXIgPSBleHBvcnRzLl9nbG9iYWwgPSBleHBvcnRzLkdMT0JBTF9UUkFDRV9BUElfS0VZID0gZXhwb3J0cy5HTE9CQUxfUFJPUEFHQVRJT05fQVBJX0tFWSA9IGV4cG9ydHMuR0xPQkFMX0NPTlRFWFRfTUFOQUdFUl9BUElfS0VZID0gdm9pZCAwO1xudmFyIHBsYXRmb3JtXzEgPSByZXF1aXJlKFwiLi4vcGxhdGZvcm1cIik7XG5leHBvcnRzLkdMT0JBTF9DT05URVhUX01BTkFHRVJfQVBJX0tFWSA9IFN5bWJvbC5mb3IoJ2lvLm9wZW50ZWxlbWV0cnkuanMuYXBpLmNvbnRleHQnKTtcbmV4cG9ydHMuR0xPQkFMX1BST1BBR0FUSU9OX0FQSV9LRVkgPSBTeW1ib2wuZm9yKCdpby5vcGVudGVsZW1ldHJ5LmpzLmFwaS5wcm9wYWdhdGlvbicpO1xuZXhwb3J0cy5HTE9CQUxfVFJBQ0VfQVBJX0tFWSA9IFN5bWJvbC5mb3IoJ2lvLm9wZW50ZWxlbWV0cnkuanMuYXBpLnRyYWNlJyk7XG5leHBvcnRzLl9nbG9iYWwgPSBwbGF0Zm9ybV8xLl9nbG9iYWxUaGlzO1xuLyoqXG4gKiBNYWtlIGEgZnVuY3Rpb24gd2hpY2ggYWNjZXB0cyBhIHZlcnNpb24gaW50ZWdlciBhbmQgcmV0dXJucyB0aGUgaW5zdGFuY2Ugb2YgYW4gQVBJIGlmIHRoZSB2ZXJzaW9uXG4gKiBpcyBjb21wYXRpYmxlLCBvciBhIGZhbGxiYWNrIHZlcnNpb24gKHVzdWFsbHkgTk9PUCkgaWYgaXQgaXMgbm90LlxuICpcbiAqIEBwYXJhbSByZXF1aXJlZFZlcnNpb24gQmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdmVyc2lvbiB3aGljaCBpcyByZXF1aXJlZCB0byByZXR1cm4gdGhlIGluc3RhbmNlXG4gKiBAcGFyYW0gaW5zdGFuY2UgSW5zdGFuY2Ugd2hpY2ggc2hvdWxkIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIGNvbXBhdGlibGVcbiAqIEBwYXJhbSBmYWxsYmFjayBGYWxsYmFjayBpbnN0YW5jZSwgdXN1YWxseSBOT09QLCB3aGljaCB3aWxsIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIG5vdCBjb21wYXRpYmxlXG4gKi9cbmZ1bmN0aW9uIG1ha2VHZXR0ZXIocmVxdWlyZWRWZXJzaW9uLCBpbnN0YW5jZSwgZmFsbGJhY2spIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHZlcnNpb24gPT09IHJlcXVpcmVkVmVyc2lvbiA/IGluc3RhbmNlIDogZmFsbGJhY2s7XG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZUdldHRlciA9IG1ha2VHZXR0ZXI7XG4vKipcbiAqIEEgbnVtYmVyIHdoaWNoIHNob3VsZCBiZSBpbmNyZW1lbnRlZCBlYWNoIHRpbWUgYSBiYWNrd2FyZHMgaW5jb21wYXRpYmxlXG4gKiBjaGFuZ2UgaXMgbWFkZSB0byB0aGUgQVBJLiBUaGlzIG51bWJlciBpcyB1c2VkIHdoZW4gYW4gQVBJIHBhY2thZ2VcbiAqIGF0dGVtcHRzIHRvIGFjY2VzcyB0aGUgZ2xvYmFsIEFQSSB0byBlbnN1cmUgaXQgaXMgZ2V0dGluZyBhIGNvbXBhdGlibGVcbiAqIHZlcnNpb24uIElmIHRoZSBnbG9iYWwgQVBJIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIEFQSSBwYWNrYWdlXG4gKiBhdHRlbXB0aW5nIHRvIGdldCBpdCwgYSBOT09QIEFQSSBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIHJldHVybmVkLlxuICovXG5leHBvcnRzLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OID0gNDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/global-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/propagation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/propagation.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropagationAPI = void 0;\nvar NoopTextMapPropagator_1 = __webpack_require__(/*! ../context/propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/context/propagation/NoopTextMapPropagator.js\");\nvar TextMapPropagator_1 = __webpack_require__(/*! ../context/propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/context/propagation/TextMapPropagator.js\");\nvar global_utils_1 = __webpack_require__(/*! ./global-utils */ \"./node_modules/@opentelemetry/api/build/src/api/global-utils.js\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator. Returns the initialized propagator\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        if (global_utils_1._global[global_utils_1.GLOBAL_PROPAGATION_API_KEY]) {\n            // global propagator has already been set\n            return this._getGlobalPropagator();\n        }\n        global_utils_1._global[global_utils_1.GLOBAL_PROPAGATION_API_KEY] = global_utils_1.makeGetter(global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION, propagator, NoopTextMapPropagator_1.NOOP_TEXT_MAP_PROPAGATOR);\n        return propagator;\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = TextMapPropagator_1.defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = TextMapPropagator_1.defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        delete global_utils_1._global[global_utils_1.GLOBAL_PROPAGATION_API_KEY];\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        var _a, _b;\n        return ((_b = (_a = global_utils_1._global[global_utils_1.GLOBAL_PROPAGATION_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(global_utils_1._global, global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NoopTextMapPropagator_1.NOOP_TEXT_MAP_PROPAGATOR);\n    };\n    return PropagationAPI;\n}());\nexports.PropagationAPI = PropagationAPI;\n//# sourceMappingURL=propagation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvcHJvcGFnYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvcHJvcGFnYXRpb24uanM/N2ZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb3BhZ2F0aW9uQVBJID0gdm9pZCAwO1xudmFyIE5vb3BUZXh0TWFwUHJvcGFnYXRvcl8xID0gcmVxdWlyZShcIi4uL2NvbnRleHQvcHJvcGFnYXRpb24vTm9vcFRleHRNYXBQcm9wYWdhdG9yXCIpO1xudmFyIFRleHRNYXBQcm9wYWdhdG9yXzEgPSByZXF1aXJlKFwiLi4vY29udGV4dC9wcm9wYWdhdGlvbi9UZXh0TWFwUHJvcGFnYXRvclwiKTtcbnZhciBnbG9iYWxfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2dsb2JhbC11dGlsc1wiKTtcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB3aGljaCByZXByZXNlbnRzIHRoZSBlbnRyeSBwb2ludCB0byB0aGUgT3BlblRlbGVtZXRyeSBQcm9wYWdhdGlvbiBBUElcbiAqL1xudmFyIFByb3BhZ2F0aW9uQVBJID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKiBFbXB0eSBwcml2YXRlIGNvbnN0cnVjdG9yIHByZXZlbnRzIGVuZCB1c2VycyBmcm9tIGNvbnN0cnVjdGluZyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgQVBJICovXG4gICAgZnVuY3Rpb24gUHJvcGFnYXRpb25BUEkoKSB7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgUHJvcGFnYXRvciBBUEkgKi9cbiAgICBQcm9wYWdhdGlvbkFQSS5nZXRJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgUHJvcGFnYXRpb25BUEkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgcHJvcGFnYXRvci4gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgcHJvcGFnYXRvclxuICAgICAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5zZXRHbG9iYWxQcm9wYWdhdG9yID0gZnVuY3Rpb24gKHByb3BhZ2F0b3IpIHtcbiAgICAgICAgaWYgKGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX1BST1BBR0FUSU9OX0FQSV9LRVldKSB7XG4gICAgICAgICAgICAvLyBnbG9iYWwgcHJvcGFnYXRvciBoYXMgYWxyZWFkeSBiZWVuIHNldFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dldEdsb2JhbFByb3BhZ2F0b3IoKTtcbiAgICAgICAgfVxuICAgICAgICBnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsW2dsb2JhbF91dGlsc18xLkdMT0JBTF9QUk9QQUdBVElPTl9BUElfS0VZXSA9IGdsb2JhbF91dGlsc18xLm1ha2VHZXR0ZXIoZ2xvYmFsX3V0aWxzXzEuQVBJX0JBQ0tXQVJEU19DT01QQVRJQklMSVRZX1ZFUlNJT04sIHByb3BhZ2F0b3IsIE5vb3BUZXh0TWFwUHJvcGFnYXRvcl8xLk5PT1BfVEVYVF9NQVBfUFJPUEFHQVRPUik7XG4gICAgICAgIHJldHVybiBwcm9wYWdhdG9yO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSW5qZWN0IGNvbnRleHQgaW50byBhIGNhcnJpZXIgdG8gYmUgcHJvcGFnYXRlZCBpbnRlci1wcm9jZXNzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29udGV4dCBDb250ZXh0IGNhcnJ5aW5nIHRyYWNpbmcgZGF0YSB0byBpbmplY3RcbiAgICAgKiBAcGFyYW0gY2FycmllciBjYXJyaWVyIHRvIGluamVjdCBjb250ZXh0IGludG9cbiAgICAgKiBAcGFyYW0gc2V0dGVyIEZ1bmN0aW9uIHVzZWQgdG8gc2V0IHZhbHVlcyBvbiB0aGUgY2FycmllclxuICAgICAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5pbmplY3QgPSBmdW5jdGlvbiAoY29udGV4dCwgY2Fycmllciwgc2V0dGVyKSB7XG4gICAgICAgIGlmIChzZXR0ZXIgPT09IHZvaWQgMCkgeyBzZXR0ZXIgPSBUZXh0TWFwUHJvcGFnYXRvcl8xLmRlZmF1bHRUZXh0TWFwU2V0dGVyOyB9XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRHbG9iYWxQcm9wYWdhdG9yKCkuaW5qZWN0KGNvbnRleHQsIGNhcnJpZXIsIHNldHRlcik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBFeHRyYWN0IGNvbnRleHQgZnJvbSBhIGNhcnJpZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0IENvbnRleHQgd2hpY2ggdGhlIG5ld2x5IGNyZWF0ZWQgY29udGV4dCB3aWxsIGluaGVyaXQgZnJvbVxuICAgICAqIEBwYXJhbSBjYXJyaWVyIENhcnJpZXIgdG8gZXh0cmFjdCBjb250ZXh0IGZyb21cbiAgICAgKiBAcGFyYW0gZ2V0dGVyIEZ1bmN0aW9uIHVzZWQgdG8gZXh0cmFjdCBrZXlzIGZyb20gYSBjYXJyaWVyXG4gICAgICovXG4gICAgUHJvcGFnYXRpb25BUEkucHJvdG90eXBlLmV4dHJhY3QgPSBmdW5jdGlvbiAoY29udGV4dCwgY2FycmllciwgZ2V0dGVyKSB7XG4gICAgICAgIGlmIChnZXR0ZXIgPT09IHZvaWQgMCkgeyBnZXR0ZXIgPSBUZXh0TWFwUHJvcGFnYXRvcl8xLmRlZmF1bHRUZXh0TWFwR2V0dGVyOyB9XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRHbG9iYWxQcm9wYWdhdG9yKCkuZXh0cmFjdChjb250ZXh0LCBjYXJyaWVyLCBnZXR0ZXIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGEgbGlzdCBvZiBhbGwgZmllbGRzIHdoaWNoIG1heSBiZSB1c2VkIGJ5IHRoZSBwcm9wYWdhdG9yLlxuICAgICAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5maWVsZHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRHbG9iYWxQcm9wYWdhdG9yKCkuZmllbGRzKCk7XG4gICAgfTtcbiAgICAvKiogUmVtb3ZlIHRoZSBnbG9iYWwgcHJvcGFnYXRvciAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkZWxldGUgZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfUFJPUEFHQVRJT05fQVBJX0tFWV07XG4gICAgfTtcbiAgICBQcm9wYWdhdGlvbkFQSS5wcm90b3R5cGUuX2dldEdsb2JhbFByb3BhZ2F0b3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHJldHVybiAoKF9iID0gKF9hID0gZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfUFJPUEFHQVRJT05fQVBJX0tFWV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGdsb2JhbF91dGlsc18xLl9nbG9iYWwsIGdsb2JhbF91dGlsc18xLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogTm9vcFRleHRNYXBQcm9wYWdhdG9yXzEuTk9PUF9URVhUX01BUF9QUk9QQUdBVE9SKTtcbiAgICB9O1xuICAgIHJldHVybiBQcm9wYWdhdGlvbkFQSTtcbn0oKSk7XG5leHBvcnRzLlByb3BhZ2F0aW9uQVBJID0gUHJvcGFnYXRpb25BUEk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9wYWdhdGlvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/propagation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/trace.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/trace.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceAPI = void 0;\nvar NoopTracerProvider_1 = __webpack_require__(/*! ../trace/NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\");\nvar ProxyTracerProvider_1 = __webpack_require__(/*! ../trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\");\nvar spancontext_utils_1 = __webpack_require__(/*! ../trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\nvar global_utils_1 = __webpack_require__(/*! ./global-utils */ \"./node_modules/@opentelemetry/api/build/src/api/global-utils.js\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n        this.isSpanContextValid = spancontext_utils_1.isSpanContextValid;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer. Returns the initialized global tracer provider\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        if (global_utils_1._global[global_utils_1.GLOBAL_TRACE_API_KEY]) {\n            // global tracer provider has already been set\n            return this.getTracerProvider();\n        }\n        this._proxyTracerProvider.setDelegate(provider);\n        global_utils_1._global[global_utils_1.GLOBAL_TRACE_API_KEY] = global_utils_1.makeGetter(global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION, this._proxyTracerProvider, NoopTracerProvider_1.NOOP_TRACER_PROVIDER);\n        return this.getTracerProvider();\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = global_utils_1._global[global_utils_1.GLOBAL_TRACE_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(global_utils_1._global, global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : this._proxyTracerProvider);\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        delete global_utils_1._global[global_utils_1.GLOBAL_TRACE_API_KEY];\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexports.TraceAPI = TraceAPI;\n//# sourceMappingURL=trace.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvdHJhY2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvdHJhY2UuanM/MjgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlQVBJID0gdm9pZCAwO1xudmFyIE5vb3BUcmFjZXJQcm92aWRlcl8xID0gcmVxdWlyZShcIi4uL3RyYWNlL05vb3BUcmFjZXJQcm92aWRlclwiKTtcbnZhciBQcm94eVRyYWNlclByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi4vdHJhY2UvUHJveHlUcmFjZXJQcm92aWRlclwiKTtcbnZhciBzcGFuY29udGV4dF91dGlsc18xID0gcmVxdWlyZShcIi4uL3RyYWNlL3NwYW5jb250ZXh0LXV0aWxzXCIpO1xudmFyIGdsb2JhbF91dGlsc18xID0gcmVxdWlyZShcIi4vZ2xvYmFsLXV0aWxzXCIpO1xuLyoqXG4gKiBTaW5nbGV0b24gb2JqZWN0IHdoaWNoIHJlcHJlc2VudHMgdGhlIGVudHJ5IHBvaW50IHRvIHRoZSBPcGVuVGVsZW1ldHJ5IFRyYWNpbmcgQVBJXG4gKi9cbnZhciBUcmFjZUFQSSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKiogRW1wdHkgcHJpdmF0ZSBjb25zdHJ1Y3RvciBwcmV2ZW50cyBlbmQgdXNlcnMgZnJvbSBjb25zdHJ1Y3RpbmcgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIEFQSSAqL1xuICAgIGZ1bmN0aW9uIFRyYWNlQVBJKCkge1xuICAgICAgICB0aGlzLl9wcm94eVRyYWNlclByb3ZpZGVyID0gbmV3IFByb3h5VHJhY2VyUHJvdmlkZXJfMS5Qcm94eVRyYWNlclByb3ZpZGVyKCk7XG4gICAgICAgIHRoaXMuaXNTcGFuQ29udGV4dFZhbGlkID0gc3BhbmNvbnRleHRfdXRpbHNfMS5pc1NwYW5Db250ZXh0VmFsaWQ7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgVHJhY2UgQVBJICovXG4gICAgVHJhY2VBUEkuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IFRyYWNlQVBJKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGdsb2JhbCB0cmFjZXIuIFJldHVybnMgdGhlIGluaXRpYWxpemVkIGdsb2JhbCB0cmFjZXIgcHJvdmlkZXJcbiAgICAgKi9cbiAgICBUcmFjZUFQSS5wcm90b3R5cGUuc2V0R2xvYmFsVHJhY2VyUHJvdmlkZXIgPSBmdW5jdGlvbiAocHJvdmlkZXIpIHtcbiAgICAgICAgaWYgKGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX1RSQUNFX0FQSV9LRVldKSB7XG4gICAgICAgICAgICAvLyBnbG9iYWwgdHJhY2VyIHByb3ZpZGVyIGhhcyBhbHJlYWR5IGJlZW4gc2V0XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRUcmFjZXJQcm92aWRlcigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Byb3h5VHJhY2VyUHJvdmlkZXIuc2V0RGVsZWdhdGUocHJvdmlkZXIpO1xuICAgICAgICBnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsW2dsb2JhbF91dGlsc18xLkdMT0JBTF9UUkFDRV9BUElfS0VZXSA9IGdsb2JhbF91dGlsc18xLm1ha2VHZXR0ZXIoZ2xvYmFsX3V0aWxzXzEuQVBJX0JBQ0tXQVJEU19DT01QQVRJQklMSVRZX1ZFUlNJT04sIHRoaXMuX3Byb3h5VHJhY2VyUHJvdmlkZXIsIE5vb3BUcmFjZXJQcm92aWRlcl8xLk5PT1BfVFJBQ0VSX1BST1ZJREVSKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VHJhY2VyUHJvdmlkZXIoKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGdsb2JhbCB0cmFjZXIgcHJvdmlkZXIuXG4gICAgICovXG4gICAgVHJhY2VBUEkucHJvdG90eXBlLmdldFRyYWNlclByb3ZpZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gKChfYiA9IChfYSA9IGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX1RSQUNFX0FQSV9LRVldKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsLCBnbG9iYWxfdXRpbHNfMS5BUElfQkFDS1dBUkRTX0NPTVBBVElCSUxJVFlfVkVSU0lPTikpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHRoaXMuX3Byb3h5VHJhY2VyUHJvdmlkZXIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHRyYWNlciBmcm9tIHRoZSBnbG9iYWwgdHJhY2VyIHByb3ZpZGVyLlxuICAgICAqL1xuICAgIFRyYWNlQVBJLnByb3RvdHlwZS5nZXRUcmFjZXIgPSBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbikge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRUcmFjZXJQcm92aWRlcigpLmdldFRyYWNlcihuYW1lLCB2ZXJzaW9uKTtcbiAgICB9O1xuICAgIC8qKiBSZW1vdmUgdGhlIGdsb2JhbCB0cmFjZXIgcHJvdmlkZXIgKi9cbiAgICBUcmFjZUFQSS5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVsZXRlIGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX1RSQUNFX0FQSV9LRVldO1xuICAgICAgICB0aGlzLl9wcm94eVRyYWNlclByb3ZpZGVyID0gbmV3IFByb3h5VHJhY2VyUHJvdmlkZXJfMS5Qcm94eVRyYWNlclByb3ZpZGVyKCk7XG4gICAgfTtcbiAgICByZXR1cm4gVHJhY2VBUEk7XG59KCkpO1xuZXhwb3J0cy5UcmFjZUFQSSA9IFRyYWNlQVBJO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2UuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/trace.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Baggage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0JhZ2dhZ2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0JhZ2dhZ2UuanM/MTI4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYWdnYWdlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/EntryValue.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/EntryValue.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryTtl = void 0;\n/**\n * EntryTtl is an integer that represents number of hops an entry can propagate.\n *\n * For now, ONLY special values (0 and -1) are supported.\n */\nvar EntryTtl;\n(function (EntryTtl) {\n    /**\n     * NO_PROPAGATION is considered to have local context and is used within the\n     * process it created.\n     */\n    EntryTtl[EntryTtl[\"NO_PROPAGATION\"] = 0] = \"NO_PROPAGATION\";\n    /** UNLIMITED_PROPAGATION can propagate unlimited hops. */\n    EntryTtl[EntryTtl[\"UNLIMITED_PROPAGATION\"] = -1] = \"UNLIMITED_PROPAGATION\";\n})(EntryTtl = exports.EntryTtl || (exports.EntryTtl = {}));\n//# sourceMappingURL=EntryValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0VudHJ5VmFsdWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0VudHJ5VmFsdWUuanM/Y2M0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW50cnlUdGwgPSB2b2lkIDA7XG4vKipcbiAqIEVudHJ5VHRsIGlzIGFuIGludGVnZXIgdGhhdCByZXByZXNlbnRzIG51bWJlciBvZiBob3BzIGFuIGVudHJ5IGNhbiBwcm9wYWdhdGUuXG4gKlxuICogRm9yIG5vdywgT05MWSBzcGVjaWFsIHZhbHVlcyAoMCBhbmQgLTEpIGFyZSBzdXBwb3J0ZWQuXG4gKi9cbnZhciBFbnRyeVR0bDtcbihmdW5jdGlvbiAoRW50cnlUdGwpIHtcbiAgICAvKipcbiAgICAgKiBOT19QUk9QQUdBVElPTiBpcyBjb25zaWRlcmVkIHRvIGhhdmUgbG9jYWwgY29udGV4dCBhbmQgaXMgdXNlZCB3aXRoaW4gdGhlXG4gICAgICogcHJvY2VzcyBpdCBjcmVhdGVkLlxuICAgICAqL1xuICAgIEVudHJ5VHRsW0VudHJ5VHRsW1wiTk9fUFJPUEFHQVRJT05cIl0gPSAwXSA9IFwiTk9fUFJPUEFHQVRJT05cIjtcbiAgICAvKiogVU5MSU1JVEVEX1BST1BBR0FUSU9OIGNhbiBwcm9wYWdhdGUgdW5saW1pdGVkIGhvcHMuICovXG4gICAgRW50cnlUdGxbRW50cnlUdGxbXCJVTkxJTUlURURfUFJPUEFHQVRJT05cIl0gPSAtMV0gPSBcIlVOTElNSVRFRF9QUk9QQUdBVElPTlwiO1xufSkoRW50cnlUdGwgPSBleHBvcnRzLkVudHJ5VHRsIHx8IChleHBvcnRzLkVudHJ5VHRsID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVudHJ5VmFsdWUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/EntryValue.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/common/Exception.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/common/Exception.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Exception.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vRXhjZXB0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvY29tbW9uL0V4Y2VwdGlvbi5qcz80NTNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4Y2VwdGlvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/common/Exception.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/common/Logger.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/common/Logger.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vTG9nZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvY29tbW9uL0xvZ2dlci5qcz9iN2YxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvZ2dlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/common/Logger.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/common/Time.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/common/Time.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vVGltZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2NvbW1vbi9UaW1lLmpzP2U0NTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/common/Time.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/context.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/context.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setBaggage = exports.getBaggage = exports.isInstrumentationSuppressed = exports.unsuppressInstrumentation = exports.suppressInstrumentation = exports.getSpanContext = exports.setSpanContext = exports.setSpan = exports.getSpan = void 0;\nvar context_base_1 = __webpack_require__(/*! @opentelemetry/context-base */ \"./node_modules/@opentelemetry/context-base/build/src/index.js\");\nvar __1 = __webpack_require__(/*! ../ */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * span key\n */\nvar SPAN_KEY = context_base_1.createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Shared key for indicating if instrumentation should be suppressed beyond\n * this current scope.\n */\nvar SUPPRESS_INSTRUMENTATION_KEY = context_base_1.createContextKey('OpenTelemetry Context Key SUPPRESS_INSTRUMENTATION');\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = context_base_1.createContextKey('OpenTelemetry Baggage Key');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nfunction getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\nexports.getSpan = getSpan;\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nfunction setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\nexports.setSpan = setSpan;\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return setSpan(context, new __1.NoopSpan(spanContext));\n}\nexports.setSpanContext = setSpanContext;\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nfunction getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.context();\n}\nexports.getSpanContext = getSpanContext;\n/**\n * Sets value on context to indicate that instrumentation should\n * be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction suppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, true);\n}\nexports.suppressInstrumentation = suppressInstrumentation;\n/**\n * Sets value on context to indicate that instrumentation should\n * no-longer be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction unsuppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, false);\n}\nexports.unsuppressInstrumentation = unsuppressInstrumentation;\n/**\n * Return current suppress instrumentation value for the given context,\n * if it exists.\n *\n * @param context context check for the suppress instrumentation value.\n */\nfunction isInstrumentationSuppressed(context) {\n    return Boolean(context.getValue(SUPPRESS_INSTRUMENTATION_KEY));\n}\nexports.isInstrumentationSuppressed = isInstrumentationSuppressed;\n/**\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nfunction getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\nexports.getBaggage = getBaggage;\n/**\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nfunction setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\nexports.setBaggage = setBaggage;\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L2NvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L2NvbnRleHQuanM/MTkyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldEJhZ2dhZ2UgPSBleHBvcnRzLmdldEJhZ2dhZ2UgPSBleHBvcnRzLmlzSW5zdHJ1bWVudGF0aW9uU3VwcHJlc3NlZCA9IGV4cG9ydHMudW5zdXBwcmVzc0luc3RydW1lbnRhdGlvbiA9IGV4cG9ydHMuc3VwcHJlc3NJbnN0cnVtZW50YXRpb24gPSBleHBvcnRzLmdldFNwYW5Db250ZXh0ID0gZXhwb3J0cy5zZXRTcGFuQ29udGV4dCA9IGV4cG9ydHMuc2V0U3BhbiA9IGV4cG9ydHMuZ2V0U3BhbiA9IHZvaWQgMDtcbnZhciBjb250ZXh0X2Jhc2VfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb250ZXh0LWJhc2VcIik7XG52YXIgX18xID0gcmVxdWlyZShcIi4uL1wiKTtcbi8qKlxuICogc3BhbiBrZXlcbiAqL1xudmFyIFNQQU5fS0VZID0gY29udGV4dF9iYXNlXzEuY3JlYXRlQ29udGV4dEtleSgnT3BlblRlbGVtZXRyeSBDb250ZXh0IEtleSBTUEFOJyk7XG4vKipcbiAqIFNoYXJlZCBrZXkgZm9yIGluZGljYXRpbmcgaWYgaW5zdHJ1bWVudGF0aW9uIHNob3VsZCBiZSBzdXBwcmVzc2VkIGJleW9uZFxuICogdGhpcyBjdXJyZW50IHNjb3BlLlxuICovXG52YXIgU1VQUFJFU1NfSU5TVFJVTUVOVEFUSU9OX0tFWSA9IGNvbnRleHRfYmFzZV8xLmNyZWF0ZUNvbnRleHRLZXkoJ09wZW5UZWxlbWV0cnkgQ29udGV4dCBLZXkgU1VQUFJFU1NfSU5TVFJVTUVOVEFUSU9OJyk7XG4vKipcbiAqIEJhZ2dhZ2Uga2V5XG4gKi9cbnZhciBCQUdHQUdFX0tFWSA9IGNvbnRleHRfYmFzZV8xLmNyZWF0ZUNvbnRleHRLZXkoJ09wZW5UZWxlbWV0cnkgQmFnZ2FnZSBLZXknKTtcbi8qKlxuICogUmV0dXJuIHRoZSBzcGFuIGlmIG9uZSBleGlzdHNcbiAqXG4gKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIGdldCBzcGFuIGZyb21cbiAqL1xuZnVuY3Rpb24gZ2V0U3Bhbihjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQuZ2V0VmFsdWUoU1BBTl9LRVkpIHx8IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuZ2V0U3BhbiA9IGdldFNwYW47XG4vKipcbiAqIFNldCB0aGUgc3BhbiBvbiBhIGNvbnRleHRcbiAqXG4gKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIHVzZSBhcyBwYXJlbnRcbiAqIEBwYXJhbSBzcGFuIHNwYW4gdG8gc2V0IGFjdGl2ZVxuICovXG5mdW5jdGlvbiBzZXRTcGFuKGNvbnRleHQsIHNwYW4pIHtcbiAgICByZXR1cm4gY29udGV4dC5zZXRWYWx1ZShTUEFOX0tFWSwgc3Bhbik7XG59XG5leHBvcnRzLnNldFNwYW4gPSBzZXRTcGFuO1xuLyoqXG4gKiBXcmFwIHNwYW4gY29udGV4dCBpbiBhIE5vb3BTcGFuIGFuZCBzZXQgYXMgc3BhbiBpbiBhIG5ld1xuICogY29udGV4dFxuICpcbiAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gc2V0IGFjdGl2ZSBzcGFuIG9uXG4gKiBAcGFyYW0gc3BhbkNvbnRleHQgc3BhbiBjb250ZXh0IHRvIGJlIHdyYXBwZWRcbiAqL1xuZnVuY3Rpb24gc2V0U3BhbkNvbnRleHQoY29udGV4dCwgc3BhbkNvbnRleHQpIHtcbiAgICByZXR1cm4gc2V0U3Bhbihjb250ZXh0LCBuZXcgX18xLk5vb3BTcGFuKHNwYW5Db250ZXh0KSk7XG59XG5leHBvcnRzLnNldFNwYW5Db250ZXh0ID0gc2V0U3BhbkNvbnRleHQ7XG4vKipcbiAqIEdldCB0aGUgc3BhbiBjb250ZXh0IG9mIHRoZSBzcGFuIGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIGdldCB2YWx1ZXMgZnJvbVxuICovXG5mdW5jdGlvbiBnZXRTcGFuQ29udGV4dChjb250ZXh0KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoX2EgPSBnZXRTcGFuKGNvbnRleHQpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY29udGV4dCgpO1xufVxuZXhwb3J0cy5nZXRTcGFuQ29udGV4dCA9IGdldFNwYW5Db250ZXh0O1xuLyoqXG4gKiBTZXRzIHZhbHVlIG9uIGNvbnRleHQgdG8gaW5kaWNhdGUgdGhhdCBpbnN0cnVtZW50YXRpb24gc2hvdWxkXG4gKiBiZSBzdXBwcmVzc2VkIGJleW9uZCB0aGlzIGN1cnJlbnQgc2NvcGUuXG4gKlxuICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZXQgdGhlIHN1cHByZXNzIGluc3RydW1lbnRhdGlvbiB2YWx1ZSBvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcHJlc3NJbnN0cnVtZW50YXRpb24oY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnNldFZhbHVlKFNVUFBSRVNTX0lOU1RSVU1FTlRBVElPTl9LRVksIHRydWUpO1xufVxuZXhwb3J0cy5zdXBwcmVzc0luc3RydW1lbnRhdGlvbiA9IHN1cHByZXNzSW5zdHJ1bWVudGF0aW9uO1xuLyoqXG4gKiBTZXRzIHZhbHVlIG9uIGNvbnRleHQgdG8gaW5kaWNhdGUgdGhhdCBpbnN0cnVtZW50YXRpb24gc2hvdWxkXG4gKiBuby1sb25nZXIgYmUgc3VwcHJlc3NlZCBiZXlvbmQgdGhpcyBjdXJyZW50IHNjb3BlLlxuICpcbiAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gc2V0IHRoZSBzdXBwcmVzcyBpbnN0cnVtZW50YXRpb24gdmFsdWUgb24uXG4gKi9cbmZ1bmN0aW9uIHVuc3VwcHJlc3NJbnN0cnVtZW50YXRpb24oY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnNldFZhbHVlKFNVUFBSRVNTX0lOU1RSVU1FTlRBVElPTl9LRVksIGZhbHNlKTtcbn1cbmV4cG9ydHMudW5zdXBwcmVzc0luc3RydW1lbnRhdGlvbiA9IHVuc3VwcHJlc3NJbnN0cnVtZW50YXRpb247XG4vKipcbiAqIFJldHVybiBjdXJyZW50IHN1cHByZXNzIGluc3RydW1lbnRhdGlvbiB2YWx1ZSBmb3IgdGhlIGdpdmVuIGNvbnRleHQsXG4gKiBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIGNvbnRleHQgY29udGV4dCBjaGVjayBmb3IgdGhlIHN1cHByZXNzIGluc3RydW1lbnRhdGlvbiB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaXNJbnN0cnVtZW50YXRpb25TdXBwcmVzc2VkKGNvbnRleHQpIHtcbiAgICByZXR1cm4gQm9vbGVhbihjb250ZXh0LmdldFZhbHVlKFNVUFBSRVNTX0lOU1RSVU1FTlRBVElPTl9LRVkpKTtcbn1cbmV4cG9ydHMuaXNJbnN0cnVtZW50YXRpb25TdXBwcmVzc2VkID0gaXNJbnN0cnVtZW50YXRpb25TdXBwcmVzc2VkO1xuLyoqXG4gKiBAcGFyYW0ge0NvbnRleHR9IENvbnRleHQgdGhhdCBtYW5hZ2UgYWxsIGNvbnRleHQgdmFsdWVzXG4gKiBAcmV0dXJucyB7QmFnZ2FnZX0gRXh0cmFjdGVkIGJhZ2dhZ2UgZnJvbSB0aGUgY29udGV4dFxuICovXG5mdW5jdGlvbiBnZXRCYWdnYWdlKGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5nZXRWYWx1ZShCQUdHQUdFX0tFWSkgfHwgdW5kZWZpbmVkO1xufVxuZXhwb3J0cy5nZXRCYWdnYWdlID0gZ2V0QmFnZ2FnZTtcbi8qKlxuICogQHBhcmFtIHtDb250ZXh0fSBDb250ZXh0IHRoYXQgbWFuYWdlIGFsbCBjb250ZXh0IHZhbHVlc1xuICogQHBhcmFtIHtCYWdnYWdlfSBiYWdnYWdlIHRoYXQgd2lsbCBiZSBzZXQgaW4gdGhlIGFjdHVhbCBjb250ZXh0XG4gKi9cbmZ1bmN0aW9uIHNldEJhZ2dhZ2UoY29udGV4dCwgYmFnZ2FnZSkge1xuICAgIHJldHVybiBjb250ZXh0LnNldFZhbHVlKEJBR0dBR0VfS0VZLCBiYWdnYWdlKTtcbn1cbmV4cG9ydHMuc2V0QmFnZ2FnZSA9IHNldEJhZ2dhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/propagation/NoopTextMapPropagator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/propagation/NoopTextMapPropagator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TEXT_MAP_PROPAGATOR = exports.NoopTextMapPropagator = void 0;\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexports.NoopTextMapPropagator = NoopTextMapPropagator;\nexports.NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n//# sourceMappingURL=NoopTextMapPropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L3Byb3BhZ2F0aW9uL05vb3BUZXh0TWFwUHJvcGFnYXRvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2NvbnRleHQvcHJvcGFnYXRpb24vTm9vcFRleHRNYXBQcm9wYWdhdG9yLmpzP2MxYTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OT09QX1RFWFRfTUFQX1BST1BBR0FUT1IgPSBleHBvcnRzLk5vb3BUZXh0TWFwUHJvcGFnYXRvciA9IHZvaWQgMDtcbi8qKlxuICogTm8tb3AgaW1wbGVtZW50YXRpb25zIG9mIHtAbGluayBUZXh0TWFwUHJvcGFnYXRvcn0uXG4gKi9cbnZhciBOb29wVGV4dE1hcFByb3BhZ2F0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9vcFRleHRNYXBQcm9wYWdhdG9yKCkge1xuICAgIH1cbiAgICAvKiogTm9vcCBpbmplY3QgZnVuY3Rpb24gZG9lcyBub3RoaW5nICovXG4gICAgTm9vcFRleHRNYXBQcm9wYWdhdG9yLnByb3RvdHlwZS5pbmplY3QgPSBmdW5jdGlvbiAoX2NvbnRleHQsIF9jYXJyaWVyKSB7IH07XG4gICAgLyoqIE5vb3AgZXh0cmFjdCBmdW5jdGlvbiBkb2VzIG5vdGhpbmcgYW5kIHJldHVybnMgdGhlIGlucHV0IGNvbnRleHQgKi9cbiAgICBOb29wVGV4dE1hcFByb3BhZ2F0b3IucHJvdG90eXBlLmV4dHJhY3QgPSBmdW5jdGlvbiAoY29udGV4dCwgX2NhcnJpZXIpIHtcbiAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgfTtcbiAgICBOb29wVGV4dE1hcFByb3BhZ2F0b3IucHJvdG90eXBlLmZpZWxkcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH07XG4gICAgcmV0dXJuIE5vb3BUZXh0TWFwUHJvcGFnYXRvcjtcbn0oKSk7XG5leHBvcnRzLk5vb3BUZXh0TWFwUHJvcGFnYXRvciA9IE5vb3BUZXh0TWFwUHJvcGFnYXRvcjtcbmV4cG9ydHMuTk9PUF9URVhUX01BUF9QUk9QQUdBVE9SID0gbmV3IE5vb3BUZXh0TWFwUHJvcGFnYXRvcigpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9vcFRleHRNYXBQcm9wYWdhdG9yLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/propagation/NoopTextMapPropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/propagation/TextMapPropagator.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/propagation/TextMapPropagator.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultTextMapSetter = exports.defaultTextMapGetter = void 0;\nexports.defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexports.defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L3Byb3BhZ2F0aW9uL1RleHRNYXBQcm9wYWdhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9UZXh0TWFwUHJvcGFnYXRvci5qcz9jM2QxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdFRleHRNYXBTZXR0ZXIgPSBleHBvcnRzLmRlZmF1bHRUZXh0TWFwR2V0dGVyID0gdm9pZCAwO1xuZXhwb3J0cy5kZWZhdWx0VGV4dE1hcEdldHRlciA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uIChjYXJyaWVyLCBrZXkpIHtcbiAgICAgICAgaWYgKGNhcnJpZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FycmllcltrZXldO1xuICAgIH0sXG4gICAga2V5czogZnVuY3Rpb24gKGNhcnJpZXIpIHtcbiAgICAgICAgaWYgKGNhcnJpZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhjYXJyaWVyKTtcbiAgICB9LFxufTtcbmV4cG9ydHMuZGVmYXVsdFRleHRNYXBTZXR0ZXIgPSB7XG4gICAgc2V0OiBmdW5jdGlvbiAoY2Fycmllciwga2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAoY2FycmllciA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY2FycmllcltrZXldID0gdmFsdWU7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UZXh0TWFwUHJvcGFnYXRvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/propagation/TextMapPropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.propagation = exports.trace = exports.context = void 0;\n__exportStar(__webpack_require__(/*! ./common/Exception */ \"./node_modules/@opentelemetry/api/build/src/common/Exception.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/Logger */ \"./node_modules/@opentelemetry/api/build/src/common/Logger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/Time */ \"./node_modules/@opentelemetry/api/build/src/common/Time.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/context */ \"./node_modules/@opentelemetry/api/build/src/context/context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/context/propagation/TextMapPropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/context/propagation/NoopTextMapPropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./baggage/Baggage */ \"./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./baggage/EntryValue */ \"./node_modules/@opentelemetry/api/build/src/baggage/EntryValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/attributes */ \"./node_modules/@opentelemetry/api/build/src/trace/attributes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/Event */ \"./node_modules/@opentelemetry/api/build/src/trace/Event.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/link_context */ \"./node_modules/@opentelemetry/api/build/src/trace/link_context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/link */ \"./node_modules/@opentelemetry/api/build/src/trace/link.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopLogger */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopLogger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopSpan */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/ProxyTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/Sampler */ \"./node_modules/@opentelemetry/api/build/src/trace/Sampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/SamplingResult */ \"./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span_context */ \"./node_modules/@opentelemetry/api/build/src/trace/span_context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span_kind */ \"./node_modules/@opentelemetry/api/build/src/trace/span_kind.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span */ \"./node_modules/@opentelemetry/api/build/src/trace/span.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/SpanOptions */ \"./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/status */ \"./node_modules/@opentelemetry/api/build/src/trace/status.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/TimedEvent */ \"./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/trace_flags */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/trace_state */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_state.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/tracer_provider */ \"./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/tracer */ \"./node_modules/@opentelemetry/api/build/src/trace/tracer.js\"), exports);\nvar spancontext_utils_1 = __webpack_require__(/*! ./trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\nObject.defineProperty(exports, \"INVALID_SPANID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPANID; } });\nObject.defineProperty(exports, \"INVALID_TRACEID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_TRACEID; } });\nObject.defineProperty(exports, \"INVALID_SPAN_CONTEXT\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPAN_CONTEXT; } });\nObject.defineProperty(exports, \"isSpanContextValid\", { enumerable: true, get: function () { return spancontext_utils_1.isSpanContextValid; } });\nObject.defineProperty(exports, \"isValidTraceId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidTraceId; } });\nObject.defineProperty(exports, \"isValidSpanId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidSpanId; } });\nvar context_base_1 = __webpack_require__(/*! @opentelemetry/context-base */ \"./node_modules/@opentelemetry/context-base/build/src/index.js\");\nObject.defineProperty(exports, \"ROOT_CONTEXT\", { enumerable: true, get: function () { return context_base_1.ROOT_CONTEXT; } });\nObject.defineProperty(exports, \"createContextKey\", { enumerable: true, get: function () { return context_base_1.createContextKey; } });\nvar context_1 = __webpack_require__(/*! ./api/context */ \"./node_modules/@opentelemetry/api/build/src/api/context.js\");\n/** Entrypoint for context API */\nexports.context = context_1.ContextAPI.getInstance();\nvar trace_1 = __webpack_require__(/*! ./api/trace */ \"./node_modules/@opentelemetry/api/build/src/api/trace.js\");\n/** Entrypoint for trace API */\nexports.trace = trace_1.TraceAPI.getInstance();\nvar propagation_1 = __webpack_require__(/*! ./api/propagation */ \"./node_modules/@opentelemetry/api/build/src/api/propagation.js\");\n/** Entrypoint for propagation API */\nexports.propagation = propagation_1.PropagationAPI.getInstance();\nexports.default = {\n    trace: exports.trace,\n    context: exports.context,\n    propagation: exports.propagation,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2luZGV4LmpzP2QwMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wcm9wYWdhdGlvbiA9IGV4cG9ydHMudHJhY2UgPSBleHBvcnRzLmNvbnRleHQgPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29tbW9uL0V4Y2VwdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29tbW9uL0xvZ2dlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29tbW9uL1RpbWVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRleHQvY29udGV4dFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi9UZXh0TWFwUHJvcGFnYXRvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi9Ob29wVGV4dE1hcFByb3BhZ2F0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2JhZ2dhZ2UvQmFnZ2FnZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYmFnZ2FnZS9FbnRyeVZhbHVlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9hdHRyaWJ1dGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9FdmVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvbGlua19jb250ZXh0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9saW5rXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Ob29wTG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Ob29wU3BhblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvTm9vcFRyYWNlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvTm9vcFRyYWNlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Qcm94eVRyYWNlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvUHJveHlUcmFjZXJQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvU2FtcGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvU2FtcGxpbmdSZXN1bHRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3NwYW5fY29udGV4dFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2Uvc3Bhbl9raW5kXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zcGFuXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9TcGFuT3B0aW9uc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2Uvc3RhdHVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9UaW1lZEV2ZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS90cmFjZV9mbGFnc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvdHJhY2Vfc3RhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3RyYWNlcl9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvdHJhY2VyXCIpLCBleHBvcnRzKTtcbnZhciBzcGFuY29udGV4dF91dGlsc18xID0gcmVxdWlyZShcIi4vdHJhY2Uvc3BhbmNvbnRleHQtdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJTlZBTElEX1NQQU5JRFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5JTlZBTElEX1NQQU5JRDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIklOVkFMSURfVFJBQ0VJRFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5JTlZBTElEX1RSQUNFSUQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJTlZBTElEX1NQQU5fQ09OVEVYVFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5JTlZBTElEX1NQQU5fQ09OVEVYVDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzU3BhbkNvbnRleHRWYWxpZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5pc1NwYW5Db250ZXh0VmFsaWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1ZhbGlkVHJhY2VJZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5pc1ZhbGlkVHJhY2VJZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzVmFsaWRTcGFuSWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNwYW5jb250ZXh0X3V0aWxzXzEuaXNWYWxpZFNwYW5JZDsgfSB9KTtcbnZhciBjb250ZXh0X2Jhc2VfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb250ZXh0LWJhc2VcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJST09UX0NPTlRFWFRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnRleHRfYmFzZV8xLlJPT1RfQ09OVEVYVDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUNvbnRleHRLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnRleHRfYmFzZV8xLmNyZWF0ZUNvbnRleHRLZXk7IH0gfSk7XG52YXIgY29udGV4dF8xID0gcmVxdWlyZShcIi4vYXBpL2NvbnRleHRcIik7XG4vKiogRW50cnlwb2ludCBmb3IgY29udGV4dCBBUEkgKi9cbmV4cG9ydHMuY29udGV4dCA9IGNvbnRleHRfMS5Db250ZXh0QVBJLmdldEluc3RhbmNlKCk7XG52YXIgdHJhY2VfMSA9IHJlcXVpcmUoXCIuL2FwaS90cmFjZVwiKTtcbi8qKiBFbnRyeXBvaW50IGZvciB0cmFjZSBBUEkgKi9cbmV4cG9ydHMudHJhY2UgPSB0cmFjZV8xLlRyYWNlQVBJLmdldEluc3RhbmNlKCk7XG52YXIgcHJvcGFnYXRpb25fMSA9IHJlcXVpcmUoXCIuL2FwaS9wcm9wYWdhdGlvblwiKTtcbi8qKiBFbnRyeXBvaW50IGZvciBwcm9wYWdhdGlvbiBBUEkgKi9cbmV4cG9ydHMucHJvcGFnYXRpb24gPSBwcm9wYWdhdGlvbl8xLlByb3BhZ2F0aW9uQVBJLmdldEluc3RhbmNlKCk7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgdHJhY2U6IGV4cG9ydHMudHJhY2UsXG4gICAgY29udGV4dDogZXhwb3J0cy5jb250ZXh0LFxuICAgIHByb3BhZ2F0aW9uOiBleHBvcnRzLnByb3BhZ2F0aW9uLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._globalThis = void 0;\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexports._globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2dsb2JhbFRoaXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2dsb2JhbFRoaXMuanM/YTgwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLl9nbG9iYWxUaGlzID0gdm9pZCAwO1xuLyoqIG9ubHkgZ2xvYmFscyB0aGF0IGNvbW1vbiB0byBub2RlIGFuZCBicm93c2VycyBhcmUgYWxsb3dlZCAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vZGUvbm8tdW5zdXBwb3J0ZWQtZmVhdHVyZXMvZXMtYnVpbHRpbnMsIG5vLXVuZGVmXG5leHBvcnRzLl9nbG9iYWxUaGlzID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnID8gZ2xvYmFsVGhpcyA6IHdpbmRvdztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbFRoaXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/platform/browser/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/platform/browser/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz8zMzk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nbG9iYWxUaGlzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/Event.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/Event.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9FdmVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL0V2ZW50LmpzPzcyZjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/Event.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopLogger.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopLogger.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopLogger = void 0;\n/** No-op implementation of Logger */\nvar NoopLogger = /** @class */ (function () {\n    function NoopLogger() {\n    }\n    // By default does nothing\n    NoopLogger.prototype.debug = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.error = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.warn = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.info = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    return NoopLogger;\n}());\nexports.NoopLogger = NoopLogger;\n//# sourceMappingURL=NoopLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wTG9nZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvTm9vcExvZ2dlci5qcz9hM2FhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTm9vcExvZ2dlciA9IHZvaWQgMDtcbi8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiBMb2dnZXIgKi9cbnZhciBOb29wTG9nZ2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5vb3BMb2dnZXIoKSB7XG4gICAgfVxuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgTm9vcExvZ2dlci5wcm90b3R5cGUuZGVidWcgPSBmdW5jdGlvbiAoX21lc3NhZ2UpIHtcbiAgICAgICAgdmFyIF9hcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBfYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBOb29wTG9nZ2VyLnByb3RvdHlwZS5lcnJvciA9IGZ1bmN0aW9uIChfbWVzc2FnZSkge1xuICAgICAgICB2YXIgX2FyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIF9hcmdzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BMb2dnZXIucHJvdG90eXBlLndhcm4gPSBmdW5jdGlvbiAoX21lc3NhZ2UpIHtcbiAgICAgICAgdmFyIF9hcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBfYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBOb29wTG9nZ2VyLnByb3RvdHlwZS5pbmZvID0gZnVuY3Rpb24gKF9tZXNzYWdlKSB7XG4gICAgICAgIHZhciBfYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgX2FyZ3NbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBOb29wTG9nZ2VyO1xufSgpKTtcbmV4cG9ydHMuTm9vcExvZ2dlciA9IE5vb3BMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wTG9nZ2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopLogger.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_SPAN = exports.NoopSpan = void 0;\nvar spancontext_utils_1 = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NoopSpan = /** @class */ (function () {\n    function NoopSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = spancontext_utils_1.INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NoopSpan.prototype.context = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for noopSpan.\n    NoopSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NoopSpan.prototype.recordException = function (_exception, _time) { };\n    return NoopSpan;\n}());\nexports.NoopSpan = NoopSpan;\nexports.NOOP_SPAN = new NoopSpan();\n//# sourceMappingURL=NoopSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wU3Bhbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL05vb3BTcGFuLmpzPzRhOWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OT09QX1NQQU4gPSBleHBvcnRzLk5vb3BTcGFuID0gdm9pZCAwO1xudmFyIHNwYW5jb250ZXh0X3V0aWxzXzEgPSByZXF1aXJlKFwiLi9zcGFuY29udGV4dC11dGlsc1wiKTtcbi8qKlxuICogVGhlIE5vb3BTcGFuIGlzIHRoZSBkZWZhdWx0IHtAbGluayBTcGFufSB0aGF0IGlzIHVzZWQgd2hlbiBubyBTcGFuXG4gKiBpbXBsZW1lbnRhdGlvbiBpcyBhdmFpbGFibGUuIEFsbCBvcGVyYXRpb25zIGFyZSBuby1vcCBpbmNsdWRpbmcgY29udGV4dFxuICogcHJvcGFnYXRpb24uXG4gKi9cbnZhciBOb29wU3BhbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wU3Bhbihfc3BhbkNvbnRleHQpIHtcbiAgICAgICAgaWYgKF9zcGFuQ29udGV4dCA9PT0gdm9pZCAwKSB7IF9zcGFuQ29udGV4dCA9IHNwYW5jb250ZXh0X3V0aWxzXzEuSU5WQUxJRF9TUEFOX0NPTlRFWFQ7IH1cbiAgICAgICAgdGhpcy5fc3BhbkNvbnRleHQgPSBfc3BhbkNvbnRleHQ7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYSBTcGFuQ29udGV4dC5cbiAgICBOb29wU3Bhbi5wcm90b3R5cGUuY29udGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NwYW5Db250ZXh0O1xuICAgIH07XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBOb29wU3Bhbi5wcm90b3R5cGUuc2V0QXR0cmlidXRlID0gZnVuY3Rpb24gKF9rZXksIF92YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLnNldEF0dHJpYnV0ZXMgPSBmdW5jdGlvbiAoX2F0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5hZGRFdmVudCA9IGZ1bmN0aW9uIChfbmFtZSwgX2F0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5zZXRTdGF0dXMgPSBmdW5jdGlvbiAoX3N0YXR1cykge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLnVwZGF0ZU5hbWUgPSBmdW5jdGlvbiAoX25hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoX2VuZFRpbWUpIHsgfTtcbiAgICAvLyBpc1JlY29yZGluZyBhbHdheXMgcmV0dXJucyBmYWxzZSBmb3Igbm9vcFNwYW4uXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLmlzUmVjb3JkaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5yZWNvcmRFeGNlcHRpb24gPSBmdW5jdGlvbiAoX2V4Y2VwdGlvbiwgX3RpbWUpIHsgfTtcbiAgICByZXR1cm4gTm9vcFNwYW47XG59KCkpO1xuZXhwb3J0cy5Ob29wU3BhbiA9IE5vb3BTcGFuO1xuZXhwb3J0cy5OT09QX1NQQU4gPSBuZXcgTm9vcFNwYW4oKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BTcGFuLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER = exports.NoopTracer = void 0;\nvar NoopSpan_1 = __webpack_require__(/*! ./NoopSpan */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\");\nvar spancontext_utils_1 = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\nvar context_1 = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/src/context/context.js\");\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return NoopSpan_1.NOOP_SPAN;\n        }\n        var parentFromContext = context && context_1.getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            spancontext_utils_1.isSpanContextValid(parentFromContext)) {\n            return new NoopSpan_1.NoopSpan(parentFromContext);\n        }\n        else {\n            return NoopSpan_1.NOOP_SPAN;\n        }\n    };\n    return NoopTracer;\n}());\nexports.NoopTracer = NoopTracer;\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\nexports.NOOP_TRACER = new NoopTracer();\n//# sourceMappingURL=NoopTracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wVHJhY2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvTm9vcFRyYWNlci5qcz9lMTY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTk9PUF9UUkFDRVIgPSBleHBvcnRzLk5vb3BUcmFjZXIgPSB2b2lkIDA7XG52YXIgTm9vcFNwYW5fMSA9IHJlcXVpcmUoXCIuL05vb3BTcGFuXCIpO1xudmFyIHNwYW5jb250ZXh0X3V0aWxzXzEgPSByZXF1aXJlKFwiLi9zcGFuY29udGV4dC11dGlsc1wiKTtcbnZhciBjb250ZXh0XzEgPSByZXF1aXJlKFwiLi4vY29udGV4dC9jb250ZXh0XCIpO1xuLyoqXG4gKiBOby1vcCBpbXBsZW1lbnRhdGlvbnMgb2Yge0BsaW5rIFRyYWNlcn0uXG4gKi9cbnZhciBOb29wVHJhY2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5vb3BUcmFjZXIoKSB7XG4gICAgfVxuICAgIC8vIHN0YXJ0U3BhbiBzdGFydHMgYSBub29wIHNwYW4uXG4gICAgTm9vcFRyYWNlci5wcm90b3R5cGUuc3RhcnRTcGFuID0gZnVuY3Rpb24gKG5hbWUsIG9wdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIHJvb3QgPSBCb29sZWFuKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5yb290KTtcbiAgICAgICAgaWYgKHJvb3QpIHtcbiAgICAgICAgICAgIHJldHVybiBOb29wU3Bhbl8xLk5PT1BfU1BBTjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGFyZW50RnJvbUNvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHRfMS5nZXRTcGFuQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgaWYgKGlzU3BhbkNvbnRleHQocGFyZW50RnJvbUNvbnRleHQpICYmXG4gICAgICAgICAgICBzcGFuY29udGV4dF91dGlsc18xLmlzU3BhbkNvbnRleHRWYWxpZChwYXJlbnRGcm9tQ29udGV4dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTm9vcFNwYW5fMS5Ob29wU3BhbihwYXJlbnRGcm9tQ29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gTm9vcFNwYW5fMS5OT09QX1NQQU47XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBOb29wVHJhY2VyO1xufSgpKTtcbmV4cG9ydHMuTm9vcFRyYWNlciA9IE5vb3BUcmFjZXI7XG5mdW5jdGlvbiBpc1NwYW5Db250ZXh0KHNwYW5Db250ZXh0KSB7XG4gICAgcmV0dXJuICh0eXBlb2Ygc3BhbkNvbnRleHQgPT09ICdvYmplY3QnICYmXG4gICAgICAgIHR5cGVvZiBzcGFuQ29udGV4dFsnc3BhbklkJ10gPT09ICdzdHJpbmcnICYmXG4gICAgICAgIHR5cGVvZiBzcGFuQ29udGV4dFsndHJhY2VJZCddID09PSAnc3RyaW5nJyAmJlxuICAgICAgICB0eXBlb2Ygc3BhbkNvbnRleHRbJ3RyYWNlRmxhZ3MnXSA9PT0gJ251bWJlcicpO1xufVxuZXhwb3J0cy5OT09QX1RSQUNFUiA9IG5ldyBOb29wVHJhY2VyKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wVHJhY2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER_PROVIDER = exports.NoopTracerProvider = void 0;\nvar NoopTracer_1 = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\");\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return NoopTracer_1.NOOP_TRACER;\n    };\n    return NoopTracerProvider;\n}());\nexports.NoopTracerProvider = NoopTracerProvider;\nexports.NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n//# sourceMappingURL=NoopTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wVHJhY2VyUHJvdmlkZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wVHJhY2VyUHJvdmlkZXIuanM/YjYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5PT1BfVFJBQ0VSX1BST1ZJREVSID0gZXhwb3J0cy5Ob29wVHJhY2VyUHJvdmlkZXIgPSB2b2lkIDA7XG52YXIgTm9vcFRyYWNlcl8xID0gcmVxdWlyZShcIi4vTm9vcFRyYWNlclwiKTtcbi8qKlxuICogQW4gaW1wbGVtZW50YXRpb24gb2YgdGhlIHtAbGluayBUcmFjZXJQcm92aWRlcn0gd2hpY2ggcmV0dXJucyBhbiBpbXBvdGVudFxuICogVHJhY2VyIGZvciBhbGwgY2FsbHMgdG8gYGdldFRyYWNlcmAuXG4gKlxuICogQWxsIG9wZXJhdGlvbnMgYXJlIG5vLW9wLlxuICovXG52YXIgTm9vcFRyYWNlclByb3ZpZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5vb3BUcmFjZXJQcm92aWRlcigpIHtcbiAgICB9XG4gICAgTm9vcFRyYWNlclByb3ZpZGVyLnByb3RvdHlwZS5nZXRUcmFjZXIgPSBmdW5jdGlvbiAoX25hbWUsIF92ZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiBOb29wVHJhY2VyXzEuTk9PUF9UUkFDRVI7XG4gICAgfTtcbiAgICByZXR1cm4gTm9vcFRyYWNlclByb3ZpZGVyO1xufSgpKTtcbmV4cG9ydHMuTm9vcFRyYWNlclByb3ZpZGVyID0gTm9vcFRyYWNlclByb3ZpZGVyO1xuZXhwb3J0cy5OT09QX1RSQUNFUl9QUk9WSURFUiA9IG5ldyBOb29wVHJhY2VyUHJvdmlkZXIoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BUcmFjZXJQcm92aWRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracer = void 0;\nvar NoopTracer_1 = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\");\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NoopTracer_1.NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexports.ProxyTracer = ProxyTracer;\n//# sourceMappingURL=ProxyTracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Qcm94eVRyYWNlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL1Byb3h5VHJhY2VyLmpzPzk5ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcm94eVRyYWNlciA9IHZvaWQgMDtcbnZhciBOb29wVHJhY2VyXzEgPSByZXF1aXJlKFwiLi9Ob29wVHJhY2VyXCIpO1xuLyoqXG4gKiBQcm94eSB0cmFjZXIgcHJvdmlkZWQgYnkgdGhlIHByb3h5IHRyYWNlciBwcm92aWRlclxuICovXG52YXIgUHJveHlUcmFjZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUHJveHlUcmFjZXIoX3Byb3ZpZGVyLCBuYW1lLCB2ZXJzaW9uKSB7XG4gICAgICAgIHRoaXMuX3Byb3ZpZGVyID0gX3Byb3ZpZGVyO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIH1cbiAgICBQcm94eVRyYWNlci5wcm90b3R5cGUuc3RhcnRTcGFuID0gZnVuY3Rpb24gKG5hbWUsIG9wdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFRyYWNlcigpLnN0YXJ0U3BhbihuYW1lLCBvcHRpb25zLCBjb250ZXh0KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRyeSB0byBnZXQgYSB0cmFjZXIgZnJvbSB0aGUgcHJveHkgdHJhY2VyIHByb3ZpZGVyLlxuICAgICAqIElmIHRoZSBwcm94eSB0cmFjZXIgcHJvdmlkZXIgaGFzIG5vIGRlbGVnYXRlLCByZXR1cm4gYSBub29wIHRyYWNlci5cbiAgICAgKi9cbiAgICBQcm94eVRyYWNlci5wcm90b3R5cGUuX2dldFRyYWNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2RlbGVnYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVsZWdhdGU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRyYWNlciA9IHRoaXMuX3Byb3ZpZGVyLmdldERlbGVnYXRlVHJhY2VyKHRoaXMubmFtZSwgdGhpcy52ZXJzaW9uKTtcbiAgICAgICAgaWYgKCF0cmFjZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBOb29wVHJhY2VyXzEuTk9PUF9UUkFDRVI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZGVsZWdhdGUgPSB0cmFjZXI7XG4gICAgICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZTtcbiAgICB9O1xuICAgIHJldHVybiBQcm94eVRyYWNlcjtcbn0oKSk7XG5leHBvcnRzLlByb3h5VHJhY2VyID0gUHJveHlUcmFjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm94eVRyYWNlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracerProvider = void 0;\nvar ProxyTracer_1 = __webpack_require__(/*! ./ProxyTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\");\nvar NoopTracerProvider_1 = __webpack_require__(/*! ./NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\");\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new ProxyTracer_1.ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NoopTracerProvider_1.NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\nexports.ProxyTracerProvider = ProxyTracerProvider;\n//# sourceMappingURL=ProxyTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Qcm94eVRyYWNlclByb3ZpZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvUHJveHlUcmFjZXJQcm92aWRlci5qcz9iMTIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJveHlUcmFjZXJQcm92aWRlciA9IHZvaWQgMDtcbnZhciBQcm94eVRyYWNlcl8xID0gcmVxdWlyZShcIi4vUHJveHlUcmFjZXJcIik7XG52YXIgTm9vcFRyYWNlclByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9Ob29wVHJhY2VyUHJvdmlkZXJcIik7XG4vKipcbiAqIFRyYWNlciBwcm92aWRlciB3aGljaCBwcm92aWRlcyB7QGxpbmsgUHJveHlUcmFjZXJ9cy5cbiAqXG4gKiBCZWZvcmUgYSBkZWxlZ2F0ZSBpcyBzZXQsIHRyYWNlcnMgcHJvdmlkZWQgYXJlIE5vT3AuXG4gKiAgIFdoZW4gYSBkZWxlZ2F0ZSBpcyBzZXQsIHRyYWNlcyBhcmUgcHJvdmlkZWQgZnJvbSB0aGUgZGVsZWdhdGUuXG4gKiAgIFdoZW4gYSBkZWxlZ2F0ZSBpcyBzZXQgYWZ0ZXIgdHJhY2VycyBoYXZlIGFscmVhZHkgYmVlbiBwcm92aWRlZCxcbiAqICAgYWxsIHRyYWNlcnMgYWxyZWFkeSBwcm92aWRlZCB3aWxsIHVzZSB0aGUgcHJvdmlkZWQgZGVsZWdhdGUgaW1wbGVtZW50YXRpb24uXG4gKi9cbnZhciBQcm94eVRyYWNlclByb3ZpZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFByb3h5VHJhY2VyUHJvdmlkZXIoKSB7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIHtAbGluayBQcm94eVRyYWNlcn1cbiAgICAgKi9cbiAgICBQcm94eVRyYWNlclByb3ZpZGVyLnByb3RvdHlwZS5nZXRUcmFjZXIgPSBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbikge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoKF9hID0gdGhpcy5nZXREZWxlZ2F0ZVRyYWNlcihuYW1lLCB2ZXJzaW9uKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbmV3IFByb3h5VHJhY2VyXzEuUHJveHlUcmFjZXIodGhpcywgbmFtZSwgdmVyc2lvbikpO1xuICAgIH07XG4gICAgUHJveHlUcmFjZXJQcm92aWRlci5wcm90b3R5cGUuZ2V0RGVsZWdhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2RlbGVnYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBOb29wVHJhY2VyUHJvdmlkZXJfMS5OT09QX1RSQUNFUl9QUk9WSURFUjtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgZGVsZWdhdGUgdHJhY2VyIHByb3ZpZGVyXG4gICAgICovXG4gICAgUHJveHlUcmFjZXJQcm92aWRlci5wcm90b3R5cGUuc2V0RGVsZWdhdGUgPSBmdW5jdGlvbiAoZGVsZWdhdGUpIHtcbiAgICAgICAgdGhpcy5fZGVsZWdhdGUgPSBkZWxlZ2F0ZTtcbiAgICB9O1xuICAgIFByb3h5VHJhY2VyUHJvdmlkZXIucHJvdG90eXBlLmdldERlbGVnYXRlVHJhY2VyID0gZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24pIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fZGVsZWdhdGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nZXRUcmFjZXIobmFtZSwgdmVyc2lvbik7XG4gICAgfTtcbiAgICByZXR1cm4gUHJveHlUcmFjZXJQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLlByb3h5VHJhY2VyUHJvdmlkZXIgPSBQcm94eVRyYWNlclByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJveHlUcmFjZXJQcm92aWRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/Sampler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/Sampler.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Sampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TYW1wbGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvU2FtcGxlci5qcz9hOTFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNhbXBsZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/Sampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SamplingDecision = void 0;\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision = exports.SamplingDecision || (exports.SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TYW1wbGluZ1Jlc3VsdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL1NhbXBsaW5nUmVzdWx0LmpzP2RjNjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TYW1wbGluZ0RlY2lzaW9uID0gdm9pZCAwO1xuLyoqXG4gKiBBIHNhbXBsaW5nIGRlY2lzaW9uIHRoYXQgZGV0ZXJtaW5lcyBob3cgYSB7QGxpbmsgU3Bhbn0gd2lsbCBiZSByZWNvcmRlZFxuICogYW5kIGNvbGxlY3RlZC5cbiAqL1xudmFyIFNhbXBsaW5nRGVjaXNpb247XG4oZnVuY3Rpb24gKFNhbXBsaW5nRGVjaXNpb24pIHtcbiAgICAvKipcbiAgICAgKiBgU3Bhbi5pc1JlY29yZGluZygpID09PSBmYWxzZWAsIHNwYW4gd2lsbCBub3QgYmUgcmVjb3JkZWQgYW5kIGFsbCBldmVudHNcbiAgICAgKiBhbmQgYXR0cmlidXRlcyB3aWxsIGJlIGRyb3BwZWQuXG4gICAgICovXG4gICAgU2FtcGxpbmdEZWNpc2lvbltTYW1wbGluZ0RlY2lzaW9uW1wiTk9UX1JFQ09SRFwiXSA9IDBdID0gXCJOT1RfUkVDT1JEXCI7XG4gICAgLyoqXG4gICAgICogYFNwYW4uaXNSZWNvcmRpbmcoKSA9PT0gdHJ1ZWAsIGJ1dCBgU2FtcGxlZGAgZmxhZyBpbiB7QGxpbmsgVHJhY2VGbGFnc31cbiAgICAgKiBNVVNUIE5PVCBiZSBzZXQuXG4gICAgICovXG4gICAgU2FtcGxpbmdEZWNpc2lvbltTYW1wbGluZ0RlY2lzaW9uW1wiUkVDT1JEXCJdID0gMV0gPSBcIlJFQ09SRFwiO1xuICAgIC8qKlxuICAgICAqIGBTcGFuLmlzUmVjb3JkaW5nKCkgPT09IHRydWVgIEFORCBgU2FtcGxlZGAgZmxhZyBpbiB7QGxpbmsgVHJhY2VGbGFnc31cbiAgICAgKiBNVVNUIGJlIHNldC5cbiAgICAgKi9cbiAgICBTYW1wbGluZ0RlY2lzaW9uW1NhbXBsaW5nRGVjaXNpb25bXCJSRUNPUkRfQU5EX1NBTVBMRURcIl0gPSAyXSA9IFwiUkVDT1JEX0FORF9TQU1QTEVEXCI7XG59KShTYW1wbGluZ0RlY2lzaW9uID0gZXhwb3J0cy5TYW1wbGluZ0RlY2lzaW9uIHx8IChleHBvcnRzLlNhbXBsaW5nRGVjaXNpb24gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2FtcGxpbmdSZXN1bHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TcGFuT3B0aW9ucy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL1NwYW5PcHRpb25zLmpzP2QzMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3Bhbk9wdGlvbnMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=TimedEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9UaW1lZEV2ZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvVGltZWRFdmVudC5qcz9iNDk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRpbWVkRXZlbnQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/attributes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/attributes.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9hdHRyaWJ1dGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvYXR0cmlidXRlcy5qcz8zOWUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF0dHJpYnV0ZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/attributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/link.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/link.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9saW5rLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvbGluay5qcz85MzJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmsuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/link.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/link_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/link_context.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link_context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9saW5rX2NvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9saW5rX2NvbnRleHQuanM/NWQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rX2NvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/link_context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2Uvc3Bhbi5qcz82ODZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW4uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span_context.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span_context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2NvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2NvbnRleHQuanM/NjU2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFuX2NvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span_context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span_kind.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span_kind.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanKind = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2tpbmQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2tpbmQuanM/NzRlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BhbktpbmQgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIFNwYW5LaW5kO1xuKGZ1bmN0aW9uIChTcGFuS2luZCkge1xuICAgIC8qKiBEZWZhdWx0IHZhbHVlLiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3BhbiBpcyB1c2VkIGludGVybmFsbHkuICovXG4gICAgU3BhbktpbmRbU3BhbktpbmRbXCJJTlRFUk5BTFwiXSA9IDBdID0gXCJJTlRFUk5BTFwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IHRoZSBzcGFuIGNvdmVycyBzZXJ2ZXItc2lkZSBoYW5kbGluZyBvZiBhbiBSUEMgb3Igb3RoZXJcbiAgICAgKiByZW1vdGUgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBTcGFuS2luZFtTcGFuS2luZFtcIlNFUlZFUlwiXSA9IDFdID0gXCJTRVJWRVJcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3BhbiBjb3ZlcnMgdGhlIGNsaWVudC1zaWRlIHdyYXBwZXIgYXJvdW5kIGFuIFJQQyBvclxuICAgICAqIG90aGVyIHJlbW90ZSByZXF1ZXN0LlxuICAgICAqL1xuICAgIFNwYW5LaW5kW1NwYW5LaW5kW1wiQ0xJRU5UXCJdID0gMl0gPSBcIkNMSUVOVFwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IHRoZSBzcGFuIGRlc2NyaWJlcyBwcm9kdWNlciBzZW5kaW5nIGEgbWVzc2FnZSB0byBhXG4gICAgICogYnJva2VyLiBVbmxpa2UgY2xpZW50IGFuZCBzZXJ2ZXIsIHRoZXJlIGlzIG5vIGRpcmVjdCBjcml0aWNhbCBwYXRoIGxhdGVuY3lcbiAgICAgKiByZWxhdGlvbnNoaXAgYmV0d2VlbiBwcm9kdWNlciBhbmQgY29uc3VtZXIgc3BhbnMuXG4gICAgICovXG4gICAgU3BhbktpbmRbU3BhbktpbmRbXCJQUk9EVUNFUlwiXSA9IDNdID0gXCJQUk9EVUNFUlwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IHRoZSBzcGFuIGRlc2NyaWJlcyBjb25zdW1lciByZWNlaXZpbmcgYSBtZXNzYWdlIGZyb20gYVxuICAgICAqIGJyb2tlci4gVW5saWtlIGNsaWVudCBhbmQgc2VydmVyLCB0aGVyZSBpcyBubyBkaXJlY3QgY3JpdGljYWwgcGF0aCBsYXRlbmN5XG4gICAgICogcmVsYXRpb25zaGlwIGJldHdlZW4gcHJvZHVjZXIgYW5kIGNvbnN1bWVyIHNwYW5zLlxuICAgICAqL1xuICAgIFNwYW5LaW5kW1NwYW5LaW5kW1wiQ09OU1VNRVJcIl0gPSA0XSA9IFwiQ09OU1VNRVJcIjtcbn0pKFNwYW5LaW5kID0gZXhwb3J0cy5TcGFuS2luZCB8fCAoZXhwb3J0cy5TcGFuS2luZCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFuX2tpbmQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span_kind.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSpanContextValid = exports.isValidSpanId = exports.isValidTraceId = exports.INVALID_SPAN_CONTEXT = exports.INVALID_TRACEID = exports.INVALID_SPANID = void 0;\nvar trace_flags_1 = __webpack_require__(/*! ./trace_flags */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\");\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexports.INVALID_SPANID = '0000000000000000';\nexports.INVALID_TRACEID = '00000000000000000000000000000000';\nexports.INVALID_SPAN_CONTEXT = {\n    traceId: exports.INVALID_TRACEID,\n    spanId: exports.INVALID_SPANID,\n    traceFlags: trace_flags_1.TraceFlags.NONE,\n};\nfunction isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== exports.INVALID_TRACEID;\n}\nexports.isValidTraceId = isValidTraceId;\nfunction isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== exports.INVALID_SPANID;\n}\nexports.isValidSpanId = isValidSpanId;\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nfunction isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\nexports.isSpanContextValid = isSpanContextValid;\n//# sourceMappingURL=spancontext-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuY29udGV4dC11dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL3NwYW5jb250ZXh0LXV0aWxzLmpzPzllOWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzU3BhbkNvbnRleHRWYWxpZCA9IGV4cG9ydHMuaXNWYWxpZFNwYW5JZCA9IGV4cG9ydHMuaXNWYWxpZFRyYWNlSWQgPSBleHBvcnRzLklOVkFMSURfU1BBTl9DT05URVhUID0gZXhwb3J0cy5JTlZBTElEX1RSQUNFSUQgPSBleHBvcnRzLklOVkFMSURfU1BBTklEID0gdm9pZCAwO1xudmFyIHRyYWNlX2ZsYWdzXzEgPSByZXF1aXJlKFwiLi90cmFjZV9mbGFnc1wiKTtcbnZhciBWQUxJRF9UUkFDRUlEX1JFR0VYID0gL14oWzAtOWEtZl17MzJ9KSQvaTtcbnZhciBWQUxJRF9TUEFOSURfUkVHRVggPSAvXlswLTlhLWZdezE2fSQvaTtcbmV4cG9ydHMuSU5WQUxJRF9TUEFOSUQgPSAnMDAwMDAwMDAwMDAwMDAwMCc7XG5leHBvcnRzLklOVkFMSURfVFJBQ0VJRCA9ICcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCc7XG5leHBvcnRzLklOVkFMSURfU1BBTl9DT05URVhUID0ge1xuICAgIHRyYWNlSWQ6IGV4cG9ydHMuSU5WQUxJRF9UUkFDRUlELFxuICAgIHNwYW5JZDogZXhwb3J0cy5JTlZBTElEX1NQQU5JRCxcbiAgICB0cmFjZUZsYWdzOiB0cmFjZV9mbGFnc18xLlRyYWNlRmxhZ3MuTk9ORSxcbn07XG5mdW5jdGlvbiBpc1ZhbGlkVHJhY2VJZCh0cmFjZUlkKSB7XG4gICAgcmV0dXJuIFZBTElEX1RSQUNFSURfUkVHRVgudGVzdCh0cmFjZUlkKSAmJiB0cmFjZUlkICE9PSBleHBvcnRzLklOVkFMSURfVFJBQ0VJRDtcbn1cbmV4cG9ydHMuaXNWYWxpZFRyYWNlSWQgPSBpc1ZhbGlkVHJhY2VJZDtcbmZ1bmN0aW9uIGlzVmFsaWRTcGFuSWQoc3BhbklkKSB7XG4gICAgcmV0dXJuIFZBTElEX1NQQU5JRF9SRUdFWC50ZXN0KHNwYW5JZCkgJiYgc3BhbklkICE9PSBleHBvcnRzLklOVkFMSURfU1BBTklEO1xufVxuZXhwb3J0cy5pc1ZhbGlkU3BhbklkID0gaXNWYWxpZFNwYW5JZDtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMge0BsaW5rIFNwYW5Db250ZXh0fSBpcyB2YWxpZC5cbiAqIEByZXR1cm4gdHJ1ZSBpZiB0aGlzIHtAbGluayBTcGFuQ29udGV4dH0gaXMgdmFsaWQuXG4gKi9cbmZ1bmN0aW9uIGlzU3BhbkNvbnRleHRWYWxpZChzcGFuQ29udGV4dCkge1xuICAgIHJldHVybiAoaXNWYWxpZFRyYWNlSWQoc3BhbkNvbnRleHQudHJhY2VJZCkgJiYgaXNWYWxpZFNwYW5JZChzcGFuQ29udGV4dC5zcGFuSWQpKTtcbn1cbmV4cG9ydHMuaXNTcGFuQ29udGV4dFZhbGlkID0gaXNTcGFuQ29udGV4dFZhbGlkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhbmNvbnRleHQtdXRpbHMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/status.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/status.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusCode = void 0;\n/**\n * An enumeration of status codes.\n */\nvar StatusCode;\n(function (StatusCode) {\n    /**\n     * The default status.\n     */\n    StatusCode[StatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    StatusCode[StatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    StatusCode[StatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(StatusCode = exports.StatusCode || (exports.StatusCode = {}));\n//# sourceMappingURL=status.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zdGF0dXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zdGF0dXMuanM/NjY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RhdHVzQ29kZSA9IHZvaWQgMDtcbi8qKlxuICogQW4gZW51bWVyYXRpb24gb2Ygc3RhdHVzIGNvZGVzLlxuICovXG52YXIgU3RhdHVzQ29kZTtcbihmdW5jdGlvbiAoU3RhdHVzQ29kZSkge1xuICAgIC8qKlxuICAgICAqIFRoZSBkZWZhdWx0IHN0YXR1cy5cbiAgICAgKi9cbiAgICBTdGF0dXNDb2RlW1N0YXR1c0NvZGVbXCJVTlNFVFwiXSA9IDBdID0gXCJVTlNFVFwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBvcGVyYXRpb24gaGFzIGJlZW4gdmFsaWRhdGVkIGJ5IGFuIEFwcGxpY2F0aW9uIGRldmVsb3BlciBvclxuICAgICAqIE9wZXJhdG9yIHRvIGhhdmUgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS5cbiAgICAgKi9cbiAgICBTdGF0dXNDb2RlW1N0YXR1c0NvZGVbXCJPS1wiXSA9IDFdID0gXCJPS1wiO1xuICAgIC8qKlxuICAgICAqIFRoZSBvcGVyYXRpb24gY29udGFpbnMgYW4gZXJyb3IuXG4gICAgICovXG4gICAgU3RhdHVzQ29kZVtTdGF0dXNDb2RlW1wiRVJST1JcIl0gPSAyXSA9IFwiRVJST1JcIjtcbn0pKFN0YXR1c0NvZGUgPSBleHBvcnRzLlN0YXR1c0NvZGUgfHwgKGV4cG9ydHMuU3RhdHVzQ29kZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0dXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/status.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceFlags = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags = exports.TraceFlags || (exports.TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZV9mbGFncy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL3RyYWNlX2ZsYWdzLmpzPzcyYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlRmxhZ3MgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIFRyYWNlRmxhZ3M7XG4oZnVuY3Rpb24gKFRyYWNlRmxhZ3MpIHtcbiAgICAvKiogUmVwcmVzZW50cyBubyBmbGFnIHNldC4gKi9cbiAgICBUcmFjZUZsYWdzW1RyYWNlRmxhZ3NbXCJOT05FXCJdID0gMF0gPSBcIk5PTkVcIjtcbiAgICAvKiogQml0IHRvIHJlcHJlc2VudCB3aGV0aGVyIHRyYWNlIGlzIHNhbXBsZWQgaW4gdHJhY2UgZmxhZ3MuICovXG4gICAgVHJhY2VGbGFnc1tUcmFjZUZsYWdzW1wiU0FNUExFRFwiXSA9IDFdID0gXCJTQU1QTEVEXCI7XG59KShUcmFjZUZsYWdzID0gZXhwb3J0cy5UcmFjZUZsYWdzIHx8IChleHBvcnRzLlRyYWNlRmxhZ3MgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2VfZmxhZ3MuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/trace_state.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/trace_state.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace_state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZV9zdGF0ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL3RyYWNlX3N0YXRlLmpzPzVjOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2Vfc3RhdGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/trace_state.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/tracer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/tracer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXIuanM/M2I0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/tracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXJfcHJvdmlkZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXJfcHJvdmlkZXIuanM/YTAyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjZXJfcHJvdmlkZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-base/build/src/NoopContextManager.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-base/build/src/NoopContextManager.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopContextManager = void 0;\nvar context_1 = __webpack_require__(/*! ./context */ \"./node_modules/@opentelemetry/context-base/build/src/context.js\");\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return context_1.ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn) {\n        return fn();\n    };\n    NoopContextManager.prototype.bind = function (target, _context) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexports.NoopContextManager = NoopContextManager;\n//# sourceMappingURL=NoopContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1iYXNlL2J1aWxkL3NyYy9Ob29wQ29udGV4dE1hbmFnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1iYXNlL2J1aWxkL3NyYy9Ob29wQ29udGV4dE1hbmFnZXIuanM/OWU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vb3BDb250ZXh0TWFuYWdlciA9IHZvaWQgMDtcbnZhciBjb250ZXh0XzEgPSByZXF1aXJlKFwiLi9jb250ZXh0XCIpO1xudmFyIE5vb3BDb250ZXh0TWFuYWdlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wQ29udGV4dE1hbmFnZXIoKSB7XG4gICAgfVxuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUuYWN0aXZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gY29udGV4dF8xLlJPT1RfQ09OVEVYVDtcbiAgICB9O1xuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUud2l0aCA9IGZ1bmN0aW9uIChfY29udGV4dCwgZm4pIHtcbiAgICAgICAgcmV0dXJuIGZuKCk7XG4gICAgfTtcbiAgICBOb29wQ29udGV4dE1hbmFnZXIucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAodGFyZ2V0LCBfY29udGV4dCkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH07XG4gICAgTm9vcENvbnRleHRNYW5hZ2VyLnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG4gICAgTm9vcENvbnRleHRNYW5hZ2VyLnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIHJldHVybiBOb29wQ29udGV4dE1hbmFnZXI7XG59KCkpO1xuZXhwb3J0cy5Ob29wQ29udGV4dE1hbmFnZXIgPSBOb29wQ29udGV4dE1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wQ29udGV4dE1hbmFnZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-base/build/src/NoopContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-base/build/src/context.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-base/build/src/context.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createContextKey = exports.ROOT_CONTEXT = exports.BaseContext = void 0;\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        this._currentContext = parentContext ? new Map(parentContext) : new Map();\n    }\n    /**\n     * Get a value from the context.\n     *\n     * @param key key which identifies a context value\n     */\n    BaseContext.prototype.getValue = function (key) {\n        return this._currentContext.get(key);\n    };\n    /**\n     * Create a new context which inherits from this context and has\n     * the given key set to the given value.\n     *\n     * @param key context key for which to set the value\n     * @param value value to set for the given key\n     */\n    BaseContext.prototype.setValue = function (key, value) {\n        var context = new BaseContext(this._currentContext);\n        context._currentContext.set(key, value);\n        return context;\n    };\n    /**\n     * Return a new context which inherits from this context but does\n     * not contain a value for the given key.\n     *\n     * @param key context key for which to clear a value\n     */\n    BaseContext.prototype.deleteValue = function (key) {\n        var context = new BaseContext(this._currentContext);\n        context._currentContext.delete(key);\n        return context;\n    };\n    return BaseContext;\n}());\nexports.BaseContext = BaseContext;\n/** The root context is used as the default parent context when there is no active context */\nexports.ROOT_CONTEXT = new BaseContext();\n/** Get a key to uniquely identify a context value */\nfunction createContextKey(description) {\n    return Symbol.for(description);\n}\nexports.createContextKey = createContextKey;\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1iYXNlL2J1aWxkL3NyYy9jb250ZXh0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvbnRleHQtYmFzZS9idWlsZC9zcmMvY29udGV4dC5qcz9iZDk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQ29udGV4dEtleSA9IGV4cG9ydHMuUk9PVF9DT05URVhUID0gZXhwb3J0cy5CYXNlQ29udGV4dCA9IHZvaWQgMDtcbnZhciBCYXNlQ29udGV4dCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBuZXcgY29udGV4dCB3aGljaCBpbmhlcml0cyB2YWx1ZXMgZnJvbSBhbiBvcHRpb25hbCBwYXJlbnQgY29udGV4dC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJlbnRDb250ZXh0IGEgY29udGV4dCBmcm9tIHdoaWNoIHRvIGluaGVyaXQgdmFsdWVzXG4gICAgICovXG4gICAgZnVuY3Rpb24gQmFzZUNvbnRleHQocGFyZW50Q29udGV4dCkge1xuICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IHBhcmVudENvbnRleHQgPyBuZXcgTWFwKHBhcmVudENvbnRleHQpIDogbmV3IE1hcCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSB2YWx1ZSBmcm9tIHRoZSBjb250ZXh0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSBrZXkgd2hpY2ggaWRlbnRpZmllcyBhIGNvbnRleHQgdmFsdWVcbiAgICAgKi9cbiAgICBCYXNlQ29udGV4dC5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jdXJyZW50Q29udGV4dC5nZXQoa2V5KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBjb250ZXh0IHdoaWNoIGluaGVyaXRzIGZyb20gdGhpcyBjb250ZXh0IGFuZCBoYXNcbiAgICAgKiB0aGUgZ2l2ZW4ga2V5IHNldCB0byB0aGUgZ2l2ZW4gdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5IGNvbnRleHQga2V5IGZvciB3aGljaCB0byBzZXQgdGhlIHZhbHVlXG4gICAgICogQHBhcmFtIHZhbHVlIHZhbHVlIHRvIHNldCBmb3IgdGhlIGdpdmVuIGtleVxuICAgICAqL1xuICAgIEJhc2VDb250ZXh0LnByb3RvdHlwZS5zZXRWYWx1ZSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgIHZhciBjb250ZXh0ID0gbmV3IEJhc2VDb250ZXh0KHRoaXMuX2N1cnJlbnRDb250ZXh0KTtcbiAgICAgICAgY29udGV4dC5fY3VycmVudENvbnRleHQuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybiBhIG5ldyBjb250ZXh0IHdoaWNoIGluaGVyaXRzIGZyb20gdGhpcyBjb250ZXh0IGJ1dCBkb2VzXG4gICAgICogbm90IGNvbnRhaW4gYSB2YWx1ZSBmb3IgdGhlIGdpdmVuIGtleS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBrZXkgY29udGV4dCBrZXkgZm9yIHdoaWNoIHRvIGNsZWFyIGEgdmFsdWVcbiAgICAgKi9cbiAgICBCYXNlQ29udGV4dC5wcm90b3R5cGUuZGVsZXRlVmFsdWUgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciBjb250ZXh0ID0gbmV3IEJhc2VDb250ZXh0KHRoaXMuX2N1cnJlbnRDb250ZXh0KTtcbiAgICAgICAgY29udGV4dC5fY3VycmVudENvbnRleHQuZGVsZXRlKGtleSk7XG4gICAgICAgIHJldHVybiBjb250ZXh0O1xuICAgIH07XG4gICAgcmV0dXJuIEJhc2VDb250ZXh0O1xufSgpKTtcbmV4cG9ydHMuQmFzZUNvbnRleHQgPSBCYXNlQ29udGV4dDtcbi8qKiBUaGUgcm9vdCBjb250ZXh0IGlzIHVzZWQgYXMgdGhlIGRlZmF1bHQgcGFyZW50IGNvbnRleHQgd2hlbiB0aGVyZSBpcyBubyBhY3RpdmUgY29udGV4dCAqL1xuZXhwb3J0cy5ST09UX0NPTlRFWFQgPSBuZXcgQmFzZUNvbnRleHQoKTtcbi8qKiBHZXQgYSBrZXkgdG8gdW5pcXVlbHkgaWRlbnRpZnkgYSBjb250ZXh0IHZhbHVlICovXG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0S2V5KGRlc2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuIFN5bWJvbC5mb3IoZGVzY3JpcHRpb24pO1xufVxuZXhwb3J0cy5jcmVhdGVDb250ZXh0S2V5ID0gY3JlYXRlQ29udGV4dEtleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-base/build/src/context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-base/build/src/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-base/build/src/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = __webpack_require__(/*! ./context */ \"./node_modules/@opentelemetry/context-base/build/src/context.js\");\nObject.defineProperty(exports, \"createContextKey\", { enumerable: true, get: function () { return context_1.createContextKey; } });\nObject.defineProperty(exports, \"ROOT_CONTEXT\", { enumerable: true, get: function () { return context_1.ROOT_CONTEXT; } });\n__exportStar(__webpack_require__(/*! ./NoopContextManager */ \"./node_modules/@opentelemetry/context-base/build/src/NoopContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/context-base/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1iYXNlL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb250ZXh0LWJhc2UvYnVpbGQvc3JjL2luZGV4LmpzPzA5Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNvbnRleHRfMSA9IHJlcXVpcmUoXCIuL2NvbnRleHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVDb250ZXh0S2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb250ZXh0XzEuY3JlYXRlQ29udGV4dEtleTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJPT1RfQ09OVEVYVFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29udGV4dF8xLlJPT1RfQ09OVEVYVDsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Ob29wQ29udGV4dE1hbmFnZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-base/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-base/build/src/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-base/build/src/types.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC1iYXNlL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb250ZXh0LWJhc2UvYnVpbGQvc3JjL3R5cGVzLmpzPzM4M2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-base/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZoneContextManager = void 0;\nconst context_base_1 = __webpack_require__(/*! @opentelemetry/context-base */ \"./node_modules/@opentelemetry/context-base/build/src/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js\");\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nclass ZoneContextManager {\n    constructor() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Helps to create a unique name for the zones - part of zone name\n         */\n        this._zoneCounter = 0;\n    }\n    /**\n     * Returns the active context from certain zone name\n     * @param activeZone\n     */\n    _activeContextFromZone(activeZone) {\n        return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || context_base_1.ROOT_CONTEXT;\n    }\n    /**\n     * @param target Function to be executed within the context\n     * @param context A context (span) to be executed within target function\n     */\n    _bindFunction(target, context) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * @param obj target object on which the listeners will be patched\n     * @param context A context (span) to be bind to target\n     */\n    _bindListener(obj, context) {\n        const target = obj;\n        if (target.__ot_listeners !== undefined) {\n            return obj;\n        }\n        target.__ot_listeners = {};\n        if (typeof target.addEventListener === 'function') {\n            target.addEventListener = this._patchAddEventListener(target, target.addEventListener, context);\n        }\n        if (typeof target.removeEventListener === 'function') {\n            target.removeEventListener = this._patchRemoveEventListener(target, target.removeEventListener);\n        }\n        return obj;\n    }\n    /**\n     * Creates a new unique zone name\n     */\n    _createZoneName() {\n        this._zoneCounter++;\n        const random = Math.random();\n        return `${this._zoneCounter}-${random}`;\n    }\n    /**\n     * Creates a new zone\n     * @param zoneName zone name\n     * @param context A context (span) to be bind with Zone\n     */\n    _createZone(zoneName, context) {\n        return Zone.current.fork({\n            name: zoneName,\n            properties: {\n                [ZONE_CONTEXT_KEY]: context,\n            },\n        });\n    }\n    /**\n     * Returns the active zone\n     */\n    _getActiveZone() {\n        return Zone.current;\n    }\n    /**\n     * Patches addEventListener method\n     * @param target any target that has \"addEventListener\" method\n     * @param original reference to the patched method\n     * @param [context] context to be bind to the listener\n     */\n    _patchAddEventListener(target, original, context) {\n        const contextManager = this;\n        return function (event, listener, opts) {\n            if (target.__ot_listeners === undefined) {\n                target.__ot_listeners = {};\n            }\n            let listeners = target.__ot_listeners[event];\n            if (listeners === undefined) {\n                listeners = new WeakMap();\n                target.__ot_listeners[event] = listeners;\n            }\n            const patchedListener = contextManager.bind(listener, context);\n            // store a weak reference of the user listener to ours\n            listeners.set(listener, patchedListener);\n            return original.call(this, event, patchedListener, opts);\n        };\n    }\n    /**\n     * Patches removeEventListener method\n     * @param target any target that has \"removeEventListener\" method\n     * @param original reference to the patched method\n     */\n    _patchRemoveEventListener(target, original) {\n        return function (event, listener) {\n            if (target.__ot_listeners === undefined ||\n                target.__ot_listeners[event] === undefined) {\n                return original.call(this, event, listener);\n            }\n            const events = target.__ot_listeners[event];\n            const patchedListener = events.get(listener);\n            events.delete(listener);\n            return original.call(this, event, patchedListener || listener);\n        };\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        if (!this._enabled) {\n            return context_base_1.ROOT_CONTEXT;\n        }\n        const activeZone = this._getActiveZone();\n        const active = this._activeContextFromZone(activeZone);\n        if (active) {\n            return active;\n        }\n        return context_base_1.ROOT_CONTEXT;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param target\n     * @param context A context (span) to be bind to target\n     */\n    bind(target, context) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(target, context);\n        }\n        else if (util_1.isListenerObject(target)) {\n            this._bindListener(target, context);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears all the contexts)\n     */\n    disable() {\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        this._enabled = true;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context].\n     *     If [context] is undefined then it will use the active context.\n     *     The context will be set as active\n     * @param context A context (span) to be called with provided callback\n     * @param fn Callback function\n     */\n    with(context, fn) {\n        const zoneName = this._createZoneName();\n        const newZone = this._createZone(zoneName, context);\n        return newZone.run(fn, context);\n    }\n}\nexports.ZoneContextManager = ZoneContextManager;\n//# sourceMappingURL=ZoneContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./ZoneContextManager */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb250ZXh0LXpvbmUtcGVlci1kZXAvYnVpbGQvc3JjL2luZGV4LmpzP2UwMzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1pvbmVDb250ZXh0TWFuYWdlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb250ZXh0LXpvbmUtcGVlci1kZXAvYnVpbGQvc3JjL3R5cGVzLmpzP2EzOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isListenerObject = void 0;\n/**\n * check if an object has addEventListener and removeEventListener functions then it will return true\n * @param obj\n */\nfunction isListenerObject(obj = {}) {\n    return (typeof obj.addEventListener === 'function' &&\n        typeof obj.removeEventListener === 'function');\n}\nexports.isListenerObject = isListenerObject;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvbnRleHQtem9uZS1wZWVyLWRlcC9idWlsZC9zcmMvdXRpbC5qcz8zODVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNMaXN0ZW5lck9iamVjdCA9IHZvaWQgMDtcbi8qKlxuICogY2hlY2sgaWYgYW4gb2JqZWN0IGhhcyBhZGRFdmVudExpc3RlbmVyIGFuZCByZW1vdmVFdmVudExpc3RlbmVyIGZ1bmN0aW9ucyB0aGVuIGl0IHdpbGwgcmV0dXJuIHRydWVcbiAqIEBwYXJhbSBvYmpcbiAqL1xuZnVuY3Rpb24gaXNMaXN0ZW5lck9iamVjdChvYmogPSB7fSkge1xuICAgIHJldHVybiAodHlwZW9mIG9iai5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIHR5cGVvZiBvYmoucmVtb3ZlRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJyk7XG59XG5leHBvcnRzLmlzTGlzdGVuZXJPYmplY3QgPSBpc0xpc3RlbmVyT2JqZWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone/build/src/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone/build/src/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! @opentelemetry/context-zone-peer-dep */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js\"), exports);\n__webpack_require__(/*! zone.js */ \"./node_modules/zone.js/fesm2015/zone.js\");\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb250ZXh0LXpvbmUvYnVpbGQvc3JjL2luZGV4LmpzPzkxNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb250ZXh0LXpvbmUtcGVlci1kZXBcIiksIGV4cG9ydHMpO1xucmVxdWlyZShcInpvbmUuanNcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/ExportResult.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/ExportResult.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExportResultCode = void 0;\nvar ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode = exports.ExportResultCode || (exports.ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvRXhwb3J0UmVzdWx0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL0V4cG9ydFJlc3VsdC5qcz83ZjY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXhwb3J0UmVzdWx0Q29kZSA9IHZvaWQgMDtcbnZhciBFeHBvcnRSZXN1bHRDb2RlO1xuKGZ1bmN0aW9uIChFeHBvcnRSZXN1bHRDb2RlKSB7XG4gICAgRXhwb3J0UmVzdWx0Q29kZVtFeHBvcnRSZXN1bHRDb2RlW1wiU1VDQ0VTU1wiXSA9IDBdID0gXCJTVUNDRVNTXCI7XG4gICAgRXhwb3J0UmVzdWx0Q29kZVtFeHBvcnRSZXN1bHRDb2RlW1wiRkFJTEVEXCJdID0gMV0gPSBcIkZBSUxFRFwiO1xufSkoRXhwb3J0UmVzdWx0Q29kZSA9IGV4cG9ydHMuRXhwb3J0UmVzdWx0Q29kZSB8fCAoZXhwb3J0cy5FeHBvcnRSZXN1bHRDb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4cG9ydFJlc3VsdC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/ExportResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpBaggage = exports.MAX_TOTAL_LENGTH = exports.MAX_PER_NAME_VALUE_PAIRS = exports.MAX_NAME_VALUE_PAIRS = exports.BAGGAGE_HEADER = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst KEY_PAIR_SEPARATOR = '=';\nconst PROPERTIES_SEPARATOR = ';';\nconst ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexports.BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexports.MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexports.MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexports.MAX_TOTAL_LENGTH = 8192;\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nclass HttpBaggage {\n    inject(context, carrier, setter) {\n        const baggage = api_1.getBaggage(context);\n        if (!baggage)\n            return;\n        const keyPairs = this._getKeyPairs(baggage)\n            .filter((pair) => {\n            return pair.length <= exports.MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, exports.MAX_NAME_VALUE_PAIRS);\n        const headerValue = this._serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, exports.BAGGAGE_HEADER, headerValue);\n        }\n    }\n    _serializeKeyPairs(keyPairs) {\n        return keyPairs.reduce((hValue, current) => {\n            const value = `${hValue}${hValue != '' ? ITEMS_SEPARATOR : ''}${current}`;\n            return value.length > exports.MAX_TOTAL_LENGTH ? hValue : value;\n        }, '');\n    }\n    _getKeyPairs(baggage) {\n        return Object.keys(baggage).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(baggage[key].value)}`);\n    }\n    extract(context, carrier, getter) {\n        const headerValue = getter.get(carrier, exports.BAGGAGE_HEADER);\n        if (!headerValue)\n            return context;\n        const baggage = {};\n        if (headerValue.length == 0) {\n            return context;\n        }\n        const pairs = headerValue.split(ITEMS_SEPARATOR);\n        pairs.forEach(entry => {\n            const keyPair = this._parsePairKeyValue(entry);\n            if (keyPair) {\n                baggage[keyPair.key] = { value: keyPair.value };\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return api_1.setBaggage(context, baggage);\n    }\n    _parsePairKeyValue(entry) {\n        const valueProps = entry.split(PROPERTIES_SEPARATOR);\n        if (valueProps.length <= 0)\n            return;\n        const keyPairPart = valueProps.shift();\n        if (!keyPairPart)\n            return;\n        const keyPair = keyPairPart.split(KEY_PAIR_SEPARATOR);\n        if (keyPair.length != 2)\n            return;\n        const key = decodeURIComponent(keyPair[0].trim());\n        let value = decodeURIComponent(keyPair[1].trim());\n        if (valueProps.length > 0) {\n            value =\n                value + PROPERTIES_SEPARATOR + valueProps.join(PROPERTIES_SEPARATOR);\n        }\n        return { key, value };\n    }\n    fields() {\n        return [exports.BAGGAGE_HEADER];\n    }\n}\nexports.HttpBaggage = HttpBaggage;\n//# sourceMappingURL=HttpBaggage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvYmFnZ2FnZS9wcm9wYWdhdGlvbi9IdHRwQmFnZ2FnZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9iYWdnYWdlL3Byb3BhZ2F0aW9uL0h0dHBCYWdnYWdlLmpzPzJiMjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IdHRwQmFnZ2FnZSA9IGV4cG9ydHMuTUFYX1RPVEFMX0xFTkdUSCA9IGV4cG9ydHMuTUFYX1BFUl9OQU1FX1ZBTFVFX1BBSVJTID0gZXhwb3J0cy5NQVhfTkFNRV9WQUxVRV9QQUlSUyA9IGV4cG9ydHMuQkFHR0FHRV9IRUFERVIgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBLRVlfUEFJUl9TRVBBUkFUT1IgPSAnPSc7XG5jb25zdCBQUk9QRVJUSUVTX1NFUEFSQVRPUiA9ICc7JztcbmNvbnN0IElURU1TX1NFUEFSQVRPUiA9ICcsJztcbi8vIE5hbWUgb2YgdGhlIGh0dHAgaGVhZGVyIHVzZWQgdG8gcHJvcGFnYXRlIHRoZSBiYWdnYWdlXG5leHBvcnRzLkJBR0dBR0VfSEVBREVSID0gJ2JhZ2dhZ2UnO1xuLy8gTWF4aW11bSBudW1iZXIgb2YgbmFtZS12YWx1ZSBwYWlycyBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9OQU1FX1ZBTFVFX1BBSVJTID0gMTgwO1xuLy8gTWF4aW11bSBudW1iZXIgb2YgYnl0ZXMgcGVyIGEgc2luZ2xlIG5hbWUtdmFsdWUgcGFpciBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9QRVJfTkFNRV9WQUxVRV9QQUlSUyA9IDQwOTY7XG4vLyBNYXhpbXVtIHRvdGFsIGxlbmd0aCBvZiBhbGwgbmFtZS12YWx1ZSBwYWlycyBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9UT1RBTF9MRU5HVEggPSA4MTkyO1xuLyoqXG4gKiBQcm9wYWdhdGVzIHtAbGluayBCYWdnYWdlfSB0aHJvdWdoIENvbnRleHQgZm9ybWF0IHByb3BhZ2F0aW9uLlxuICpcbiAqIEJhc2VkIG9uIHRoZSBCYWdnYWdlIHNwZWNpZmljYXRpb246XG4gKiBodHRwczovL3czYy5naXRodWIuaW8vYmFnZ2FnZS9cbiAqL1xuY2xhc3MgSHR0cEJhZ2dhZ2Uge1xuICAgIGluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpIHtcbiAgICAgICAgY29uc3QgYmFnZ2FnZSA9IGFwaV8xLmdldEJhZ2dhZ2UoY29udGV4dCk7XG4gICAgICAgIGlmICghYmFnZ2FnZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qga2V5UGFpcnMgPSB0aGlzLl9nZXRLZXlQYWlycyhiYWdnYWdlKVxuICAgICAgICAgICAgLmZpbHRlcigocGFpcikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBhaXIubGVuZ3RoIDw9IGV4cG9ydHMuTUFYX1BFUl9OQU1FX1ZBTFVFX1BBSVJTO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnNsaWNlKDAsIGV4cG9ydHMuTUFYX05BTUVfVkFMVUVfUEFJUlMpO1xuICAgICAgICBjb25zdCBoZWFkZXJWYWx1ZSA9IHRoaXMuX3NlcmlhbGl6ZUtleVBhaXJzKGtleVBhaXJzKTtcbiAgICAgICAgaWYgKGhlYWRlclZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNldHRlci5zZXQoY2FycmllciwgZXhwb3J0cy5CQUdHQUdFX0hFQURFUiwgaGVhZGVyVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9zZXJpYWxpemVLZXlQYWlycyhrZXlQYWlycykge1xuICAgICAgICByZXR1cm4ga2V5UGFpcnMucmVkdWNlKChoVmFsdWUsIGN1cnJlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gYCR7aFZhbHVlfSR7aFZhbHVlICE9ICcnID8gSVRFTVNfU0VQQVJBVE9SIDogJyd9JHtjdXJyZW50fWA7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoID4gZXhwb3J0cy5NQVhfVE9UQUxfTEVOR1RIID8gaFZhbHVlIDogdmFsdWU7XG4gICAgICAgIH0sICcnKTtcbiAgICB9XG4gICAgX2dldEtleVBhaXJzKGJhZ2dhZ2UpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGJhZ2dhZ2UpLm1hcCgoa2V5KSA9PiBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoYmFnZ2FnZVtrZXldLnZhbHVlKX1gKTtcbiAgICB9XG4gICAgZXh0cmFjdChjb250ZXh0LCBjYXJyaWVyLCBnZXR0ZXIpIHtcbiAgICAgICAgY29uc3QgaGVhZGVyVmFsdWUgPSBnZXR0ZXIuZ2V0KGNhcnJpZXIsIGV4cG9ydHMuQkFHR0FHRV9IRUFERVIpO1xuICAgICAgICBpZiAoIWhlYWRlclZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IGJhZ2dhZ2UgPSB7fTtcbiAgICAgICAgaWYgKGhlYWRlclZhbHVlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYWlycyA9IGhlYWRlclZhbHVlLnNwbGl0KElURU1TX1NFUEFSQVRPUik7XG4gICAgICAgIHBhaXJzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IHRoaXMuX3BhcnNlUGFpcktleVZhbHVlKGVudHJ5KTtcbiAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgYmFnZ2FnZVtrZXlQYWlyLmtleV0gPSB7IHZhbHVlOiBrZXlQYWlyLnZhbHVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoT2JqZWN0LmVudHJpZXMoYmFnZ2FnZSkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXBpXzEuc2V0QmFnZ2FnZShjb250ZXh0LCBiYWdnYWdlKTtcbiAgICB9XG4gICAgX3BhcnNlUGFpcktleVZhbHVlKGVudHJ5KSB7XG4gICAgICAgIGNvbnN0IHZhbHVlUHJvcHMgPSBlbnRyeS5zcGxpdChQUk9QRVJUSUVTX1NFUEFSQVRPUik7XG4gICAgICAgIGlmICh2YWx1ZVByb3BzLmxlbmd0aCA8PSAwKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBrZXlQYWlyUGFydCA9IHZhbHVlUHJvcHMuc2hpZnQoKTtcbiAgICAgICAgaWYgKCFrZXlQYWlyUGFydClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qga2V5UGFpciA9IGtleVBhaXJQYXJ0LnNwbGl0KEtFWV9QQUlSX1NFUEFSQVRPUik7XG4gICAgICAgIGlmIChrZXlQYWlyLmxlbmd0aCAhPSAyKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBrZXkgPSBkZWNvZGVVUklDb21wb25lbnQoa2V5UGFpclswXS50cmltKCkpO1xuICAgICAgICBsZXQgdmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQoa2V5UGFpclsxXS50cmltKCkpO1xuICAgICAgICBpZiAodmFsdWVQcm9wcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB2YWx1ZSA9XG4gICAgICAgICAgICAgICAgdmFsdWUgKyBQUk9QRVJUSUVTX1NFUEFSQVRPUiArIHZhbHVlUHJvcHMuam9pbihQUk9QRVJUSUVTX1NFUEFSQVRPUik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2V5LCB2YWx1ZSB9O1xuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIHJldHVybiBbZXhwb3J0cy5CQUdHQUdFX0hFQURFUl07XG4gICAgfVxufVxuZXhwb3J0cy5IdHRwQmFnZ2FnZSA9IEh0dHBCYWdnYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SHR0cEJhZ2dhZ2UuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/ConsoleLogger.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/ConsoleLogger.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLogger = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/core/build/src/common/types.js\");\nconst platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\");\nclass ConsoleLogger {\n    constructor(level = platform_1.getEnv().OTEL_LOG_LEVEL) {\n        if (level >= types_1.LogLevel.DEBUG) {\n            this.debug = (...args) => {\n                console.debug(...args);\n            };\n        }\n        if (level >= types_1.LogLevel.INFO) {\n            this.info = (...args) => {\n                console.info(...args);\n            };\n        }\n        if (level >= types_1.LogLevel.WARN) {\n            this.warn = (...args) => {\n                console.warn(...args);\n            };\n        }\n        if (level >= types_1.LogLevel.ERROR) {\n            this.error = (...args) => {\n                console.error(...args);\n            };\n        }\n    }\n    debug(_message, ..._args) { }\n    error(_message, ..._args) { }\n    warn(_message, ..._args) { }\n    info(_message, ..._args) { }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceMappingURL=ConsoleLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL0NvbnNvbGVMb2dnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL0NvbnNvbGVMb2dnZXIuanM/OTkzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnNvbGVMb2dnZXIgPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5jb25zdCBwbGF0Zm9ybV8xID0gcmVxdWlyZShcIi4uL3BsYXRmb3JtXCIpO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobGV2ZWwgPSBwbGF0Zm9ybV8xLmdldEVudigpLk9URUxfTE9HX0xFVkVMKSB7XG4gICAgICAgIGlmIChsZXZlbCA+PSB0eXBlc18xLkxvZ0xldmVsLkRFQlVHKSB7XG4gICAgICAgICAgICB0aGlzLmRlYnVnID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKC4uLmFyZ3MpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobGV2ZWwgPj0gdHlwZXNfMS5Mb2dMZXZlbC5JTkZPKSB7XG4gICAgICAgICAgICB0aGlzLmluZm8gPSAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyguLi5hcmdzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxldmVsID49IHR5cGVzXzEuTG9nTGV2ZWwuV0FSTikge1xuICAgICAgICAgICAgdGhpcy53YXJuID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oLi4uYXJncyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChsZXZlbCA+PSB0eXBlc18xLkxvZ0xldmVsLkVSUk9SKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKC4uLmFyZ3MpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWJ1ZyhfbWVzc2FnZSwgLi4uX2FyZ3MpIHsgfVxuICAgIGVycm9yKF9tZXNzYWdlLCAuLi5fYXJncykgeyB9XG4gICAgd2FybihfbWVzc2FnZSwgLi4uX2FyZ3MpIHsgfVxuICAgIGluZm8oX21lc3NhZ2UsIC4uLl9hcmdzKSB7IH1cbn1cbmV4cG9ydHMuQ29uc29sZUxvZ2dlciA9IENvbnNvbGVMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25zb2xlTG9nZ2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/ConsoleLogger.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/attributes.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/attributes.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAttributeValue = exports.sanitizeAttributes = void 0;\nfunction sanitizeAttributes(attributes) {\n    const out = {};\n    if (attributes == null || typeof attributes !== 'object') {\n        return out;\n    }\n    for (const [k, v] of Object.entries(attributes)) {\n        if (isAttributeValue(v)) {\n            if (Array.isArray(v)) {\n                out[k] = v.slice();\n            }\n            else {\n                out[k] = v;\n            }\n        }\n    }\n    return out;\n}\nexports.sanitizeAttributes = sanitizeAttributes;\nfunction isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nexports.isAttributeValue = isAttributeValue;\nfunction isHomogeneousAttributeValueArray(arr) {\n    let type;\n    for (const element of arr) {\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n            return true;\n        case 'boolean':\n            return true;\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2F0dHJpYnV0ZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2F0dHJpYnV0ZXMuanM/ZDk4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNBdHRyaWJ1dGVWYWx1ZSA9IGV4cG9ydHMuc2FuaXRpemVBdHRyaWJ1dGVzID0gdm9pZCAwO1xuZnVuY3Rpb24gc2FuaXRpemVBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpIHtcbiAgICBjb25zdCBvdXQgPSB7fTtcbiAgICBpZiAoYXR0cmlidXRlcyA9PSBudWxsIHx8IHR5cGVvZiBhdHRyaWJ1dGVzICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzKSkge1xuICAgICAgICBpZiAoaXNBdHRyaWJ1dGVWYWx1ZSh2KSkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICAgICAgICAgICAgICBvdXRba10gPSB2LnNsaWNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvdXRba10gPSB2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5leHBvcnRzLnNhbml0aXplQXR0cmlidXRlcyA9IHNhbml0aXplQXR0cmlidXRlcztcbmZ1bmN0aW9uIGlzQXR0cmlidXRlVmFsdWUodmFsKSB7XG4gICAgaWYgKHZhbCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIHJldHVybiBpc0hvbW9nZW5lb3VzQXR0cmlidXRlVmFsdWVBcnJheSh2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gaXNWYWxpZFByaW1pdGl2ZUF0dHJpYnV0ZVZhbHVlKHZhbCk7XG59XG5leHBvcnRzLmlzQXR0cmlidXRlVmFsdWUgPSBpc0F0dHJpYnV0ZVZhbHVlO1xuZnVuY3Rpb24gaXNIb21vZ2VuZW91c0F0dHJpYnV0ZVZhbHVlQXJyYXkoYXJyKSB7XG4gICAgbGV0IHR5cGU7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGFycikge1xuICAgICAgICAvLyBudWxsL3VuZGVmaW5lZCBlbGVtZW50cyBhcmUgYWxsb3dlZFxuICAgICAgICBpZiAoZWxlbWVudCA9PSBudWxsKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmICghdHlwZSkge1xuICAgICAgICAgICAgaWYgKGlzVmFsaWRQcmltaXRpdmVBdHRyaWJ1dGVWYWx1ZShlbGVtZW50KSkge1xuICAgICAgICAgICAgICAgIHR5cGUgPSB0eXBlb2YgZWxlbWVudDtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGVuY291bnRlcmVkIGFuIGludmFsaWQgcHJpbWl0aXZlXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBlbGVtZW50ID09PSB0eXBlKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaXNWYWxpZFByaW1pdGl2ZUF0dHJpYnV0ZVZhbHVlKHZhbCkge1xuICAgIHN3aXRjaCAodHlwZW9mIHZhbCkge1xuICAgICAgICBjYXNlICdudW1iZXInOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXR0cmlidXRlcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/attributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.globalErrorHandler = exports.setGlobalErrorHandler = void 0;\nconst logging_error_handler_1 = __webpack_require__(/*! ./logging-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\");\n/** The global error handler delegate */\nlet delegateHandler = logging_error_handler_1.loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nfunction setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\nexports.setGlobalErrorHandler = setGlobalErrorHandler;\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexports.globalErrorHandler = (ex) => {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n};\n//# sourceMappingURL=global-error-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2dsb2JhbC1lcnJvci1oYW5kbGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2NvbW1vbi9nbG9iYWwtZXJyb3ItaGFuZGxlci5qcz85ZGEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2xvYmFsRXJyb3JIYW5kbGVyID0gZXhwb3J0cy5zZXRHbG9iYWxFcnJvckhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCBsb2dnaW5nX2Vycm9yX2hhbmRsZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dpbmctZXJyb3ItaGFuZGxlclwiKTtcbi8qKiBUaGUgZ2xvYmFsIGVycm9yIGhhbmRsZXIgZGVsZWdhdGUgKi9cbmxldCBkZWxlZ2F0ZUhhbmRsZXIgPSBsb2dnaW5nX2Vycm9yX2hhbmRsZXJfMS5sb2dnaW5nRXJyb3JIYW5kbGVyKCk7XG4vKipcbiAqIFNldCB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXJcbiAqIEBwYXJhbSB7RXJyb3JIYW5kbGVyfSBoYW5kbGVyXG4gKi9cbmZ1bmN0aW9uIHNldEdsb2JhbEVycm9ySGFuZGxlcihoYW5kbGVyKSB7XG4gICAgZGVsZWdhdGVIYW5kbGVyID0gaGFuZGxlcjtcbn1cbmV4cG9ydHMuc2V0R2xvYmFsRXJyb3JIYW5kbGVyID0gc2V0R2xvYmFsRXJyb3JIYW5kbGVyO1xuLyoqXG4gKiBSZXR1cm4gdGhlIGdsb2JhbCBlcnJvciBoYW5kbGVyXG4gKiBAcGFyYW0ge0V4Y2VwdGlvbn0gZXhcbiAqL1xuZXhwb3J0cy5nbG9iYWxFcnJvckhhbmRsZXIgPSAoZXgpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBkZWxlZ2F0ZUhhbmRsZXIoZXgpO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHsgfSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsLWVycm9yLWhhbmRsZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loggingErrorHandler = void 0;\nconst ConsoleLogger_1 = __webpack_require__(/*! ./ConsoleLogger */ \"./node_modules/@opentelemetry/core/build/src/common/ConsoleLogger.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/core/build/src/common/types.js\");\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n * @param {Logger} logger\n */\nfunction loggingErrorHandler(logger) {\n    logger = logger !== null && logger !== void 0 ? logger : new ConsoleLogger_1.ConsoleLogger(types_1.LogLevel.ERROR);\n    return (ex) => {\n        logger.error(stringifyException(ex));\n    };\n}\nexports.loggingErrorHandler = loggingErrorHandler;\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    const result = {};\n    let current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(propertyName => {\n            if (result[propertyName])\n                return;\n            const value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2xvZ2dpbmctZXJyb3ItaGFuZGxlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9jb21tb24vbG9nZ2luZy1lcnJvci1oYW5kbGVyLmpzPzI4MzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2dnaW5nRXJyb3JIYW5kbGVyID0gdm9pZCAwO1xuY29uc3QgQ29uc29sZUxvZ2dlcl8xID0gcmVxdWlyZShcIi4vQ29uc29sZUxvZ2dlclwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgbG9ncyBhbiBlcnJvciB1c2luZyB0aGUgcHJvdmlkZWQgbG9nZ2VyLCBvciBhXG4gKiBjb25zb2xlIGxvZ2dlciBpZiBvbmUgd2FzIG5vdCBwcm92aWRlZC5cbiAqIEBwYXJhbSB7TG9nZ2VyfSBsb2dnZXJcbiAqL1xuZnVuY3Rpb24gbG9nZ2luZ0Vycm9ySGFuZGxlcihsb2dnZXIpIHtcbiAgICBsb2dnZXIgPSBsb2dnZXIgIT09IG51bGwgJiYgbG9nZ2VyICE9PSB2b2lkIDAgPyBsb2dnZXIgOiBuZXcgQ29uc29sZUxvZ2dlcl8xLkNvbnNvbGVMb2dnZXIodHlwZXNfMS5Mb2dMZXZlbC5FUlJPUik7XG4gICAgcmV0dXJuIChleCkgPT4ge1xuICAgICAgICBsb2dnZXIuZXJyb3Ioc3RyaW5naWZ5RXhjZXB0aW9uKGV4KSk7XG4gICAgfTtcbn1cbmV4cG9ydHMubG9nZ2luZ0Vycm9ySGFuZGxlciA9IGxvZ2dpbmdFcnJvckhhbmRsZXI7XG4vKipcbiAqIENvbnZlcnRzIGFuIGV4Y2VwdGlvbiBpbnRvIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uXG4gKiBAcGFyYW0ge0V4Y2VwdGlvbn0gZXhcbiAqL1xuZnVuY3Rpb24gc3RyaW5naWZ5RXhjZXB0aW9uKGV4KSB7XG4gICAgaWYgKHR5cGVvZiBleCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGV4O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGZsYXR0ZW5FeGNlcHRpb24oZXgpKTtcbiAgICB9XG59XG4vKipcbiAqIEZsYXR0ZW5zIGFuIGV4Y2VwdGlvbiBpbnRvIGtleS12YWx1ZSBwYWlycyBieSB0cmF2ZXJzaW5nIHRoZSBwcm90b3R5cGUgY2hhaW5cbiAqIGFuZCBjb2VyY2luZyB2YWx1ZXMgdG8gc3RyaW5ncy4gRHVwbGljYXRlIHByb3BlcnRpZXMgd2lsbCBub3QgYmUgb3ZlcndyaXR0ZW47XG4gKiB0aGUgZmlyc3QgaW5zZXJ0IHdpbnMuXG4gKi9cbmZ1bmN0aW9uIGZsYXR0ZW5FeGNlcHRpb24oZXgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBsZXQgY3VycmVudCA9IGV4O1xuICAgIHdoaWxlIChjdXJyZW50ICE9PSBudWxsKSB7XG4gICAgICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGN1cnJlbnQpLmZvckVhY2gocHJvcGVydHlOYW1lID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHRbcHJvcGVydHlOYW1lXSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGN1cnJlbnRbcHJvcGVydHlOYW1lXTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtwcm9wZXJ0eU5hbWVdID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGN1cnJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoY3VycmVudCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnaW5nLWVycm9yLWhhbmRsZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/time.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/time.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTimeInput = exports.isTimeInputHrTime = exports.hrTimeToMicroseconds = exports.hrTimeToMilliseconds = exports.hrTimeToNanoseconds = exports.hrTimeToTimeStamp = exports.hrTimeDuration = exports.timeInputToHrTime = exports.hrTime = void 0;\nconst platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\");\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    const epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    const seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    const nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    let timeOrigin = platform_1.otperformance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        const perf = platform_1.otperformance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nfunction hrTime(performanceNow) {\n    const timeOrigin = numberToHrtime(getTimeOrigin());\n    const now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : platform_1.otperformance.now());\n    let seconds = timeOrigin[0] + now[0];\n    let nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\nexports.hrTime = hrTime;\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nfunction timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\nexports.timeInputToHrTime = timeInputToHrTime;\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nfunction hrTimeDuration(startTime, endTime) {\n    let seconds = endTime[0] - startTime[0];\n    let nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\nexports.hrTimeDuration = hrTimeDuration;\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param hrTime\n */\nfunction hrTimeToTimeStamp(hrTime) {\n    const precision = NANOSECOND_DIGITS;\n    const tmp = `${'0'.repeat(precision)}${hrTime[1]}Z`;\n    const nanoString = tmp.substr(tmp.length - precision - 1);\n    const date = new Date(hrTime[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\nexports.hrTimeToTimeStamp = hrTimeToTimeStamp;\n/**\n * Convert hrTime to nanoseconds.\n * @param hrTime\n */\nfunction hrTimeToNanoseconds(hrTime) {\n    return hrTime[0] * SECOND_TO_NANOSECONDS + hrTime[1];\n}\nexports.hrTimeToNanoseconds = hrTimeToNanoseconds;\n/**\n * Convert hrTime to milliseconds.\n * @param hrTime\n */\nfunction hrTimeToMilliseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e3 + hrTime[1] / 1e6);\n}\nexports.hrTimeToMilliseconds = hrTimeToMilliseconds;\n/**\n * Convert hrTime to microseconds.\n * @param hrTime\n */\nfunction hrTimeToMicroseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e6 + hrTime[1] / 1e3);\n}\nexports.hrTimeToMicroseconds = hrTimeToMicroseconds;\n/**\n * check if time is HrTime\n * @param value\n */\nfunction isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\nexports.isTimeInputHrTime = isTimeInputHrTime;\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nfunction isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\nexports.isTimeInput = isTimeInput;\n//# sourceMappingURL=time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/time.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/types.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"ERROR\"] = 0] = \"ERROR\";\n    LogLevel[LogLevel[\"WARN\"] = 1] = \"WARN\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"DEBUG\"] = 3] = \"DEBUG\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL3R5cGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2NvbW1vbi90eXBlcy5qcz9hMDNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nTGV2ZWwgPSB2b2lkIDA7XG52YXIgTG9nTGV2ZWw7XG4oZnVuY3Rpb24gKExvZ0xldmVsKSB7XG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJFUlJPUlwiXSA9IDBdID0gXCJFUlJPUlwiO1xuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiV0FSTlwiXSA9IDFdID0gXCJXQVJOXCI7XG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJJTkZPXCJdID0gMl0gPSBcIklORk9cIjtcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIkRFQlVHXCJdID0gM10gPSBcIkRFQlVHXCI7XG59KShMb2dMZXZlbCA9IGV4cG9ydHMuTG9nTGV2ZWwgfHwgKGV4cG9ydHMuTG9nTGV2ZWwgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpTraceContext = exports.parseTraceParent = exports.TRACE_STATE_HEADER = exports.TRACE_PARENT_HEADER = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst TraceState_1 = __webpack_require__(/*! ../../trace/TraceState */ \"./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\");\nexports.TRACE_PARENT_HEADER = 'traceparent';\nexports.TRACE_STATE_HEADER = 'tracestate';\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(`^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`);\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nfunction parseTraceParent(traceParent) {\n    const match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\nexports.parseTraceParent = parseTraceParent;\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nclass HttpTraceContext {\n    inject(context, carrier, setter) {\n        const spanContext = api_1.getSpanContext(context);\n        if (!spanContext)\n            return;\n        const traceParent = `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(spanContext.traceFlags || api_1.TraceFlags.NONE).toString(16)}`;\n        setter.set(carrier, exports.TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, exports.TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    }\n    extract(context, carrier, getter) {\n        const traceParentHeader = getter.get(carrier, exports.TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        const traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        const spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        const traceStateHeader = getter.get(carrier, exports.TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            const state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState_1.TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return api_1.setSpanContext(context, spanContext);\n    }\n    fields() {\n        return [exports.TRACE_PARENT_HEADER, exports.TRACE_STATE_HEADER];\n    }\n}\nexports.HttpTraceContext = HttpTraceContext;\n//# sourceMappingURL=HttpTraceContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9IdHRwVHJhY2VDb250ZXh0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2NvbnRleHQvcHJvcGFnYXRpb24vSHR0cFRyYWNlQ29udGV4dC5qcz8zZjBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSHR0cFRyYWNlQ29udGV4dCA9IGV4cG9ydHMucGFyc2VUcmFjZVBhcmVudCA9IGV4cG9ydHMuVFJBQ0VfU1RBVEVfSEVBREVSID0gZXhwb3J0cy5UUkFDRV9QQVJFTlRfSEVBREVSID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgVHJhY2VTdGF0ZV8xID0gcmVxdWlyZShcIi4uLy4uL3RyYWNlL1RyYWNlU3RhdGVcIik7XG5leHBvcnRzLlRSQUNFX1BBUkVOVF9IRUFERVIgPSAndHJhY2VwYXJlbnQnO1xuZXhwb3J0cy5UUkFDRV9TVEFURV9IRUFERVIgPSAndHJhY2VzdGF0ZSc7XG5jb25zdCBWRVJTSU9OID0gJzAwJztcbmNvbnN0IFZFUlNJT05fUEFSVCA9ICcoPyFmZilbXFxcXGRhLWZdezJ9JztcbmNvbnN0IFRSQUNFX0lEX1BBUlQgPSAnKD8hWzBdezMyfSlbXFxcXGRhLWZdezMyfSc7XG5jb25zdCBQQVJFTlRfSURfUEFSVCA9ICcoPyFbMF17MTZ9KVtcXFxcZGEtZl17MTZ9JztcbmNvbnN0IEZMQUdTX1BBUlQgPSAnW1xcXFxkYS1mXXsyfSc7XG5jb25zdCBUUkFDRV9QQVJFTlRfUkVHRVggPSBuZXcgUmVnRXhwKGBeXFxcXHM/KCR7VkVSU0lPTl9QQVJUfSktKCR7VFJBQ0VfSURfUEFSVH0pLSgke1BBUkVOVF9JRF9QQVJUfSktKCR7RkxBR1NfUEFSVH0pKC0uKik/XFxcXHM/JGApO1xuLyoqXG4gKiBQYXJzZXMgaW5mb3JtYXRpb24gZnJvbSB0aGUgW3RyYWNlcGFyZW50XSBzcGFuIHRhZyBhbmQgY29udmVydHMgaXQgaW50byB7QGxpbmsgU3BhbkNvbnRleHR9XG4gKiBAcGFyYW0gdHJhY2VQYXJlbnQgLSBBIG1ldGEgcHJvcGVydHkgdGhhdCBjb21lcyBmcm9tIHNlcnZlci5cbiAqICAgICBJdCBzaG91bGQgYmUgZHluYW1pY2FsbHkgZ2VuZXJhdGVkIHNlcnZlciBzaWRlIHRvIGhhdmUgdGhlIHNlcnZlcidzIHJlcXVlc3QgdHJhY2UgSWQsXG4gKiAgICAgYSBwYXJlbnQgc3BhbiBJZCB0aGF0IHdhcyBzZXQgb24gdGhlIHNlcnZlcidzIHJlcXVlc3Qgc3BhbixcbiAqICAgICBhbmQgdGhlIHRyYWNlIGZsYWdzIHRvIGluZGljYXRlIHRoZSBzZXJ2ZXIncyBzYW1wbGluZyBkZWNpc2lvblxuICogICAgICgwMSA9IHNhbXBsZWQsIDAwID0gbm90IHNhbXBsZWQpLlxuICogICAgIGZvciBleGFtcGxlOiAne3ZlcnNpb259LXt0cmFjZUlkfS17c3BhbklkfS17c2FtcGxlRGVjaXNpb259J1xuICogICAgIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cudzMub3JnL1RSL3RyYWNlLWNvbnRleHQvfVxuICovXG5mdW5jdGlvbiBwYXJzZVRyYWNlUGFyZW50KHRyYWNlUGFyZW50KSB7XG4gICAgY29uc3QgbWF0Y2ggPSBUUkFDRV9QQVJFTlRfUkVHRVguZXhlYyh0cmFjZVBhcmVudCk7XG4gICAgaWYgKCFtYXRjaClcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgLy8gQWNjb3JkaW5nIHRvIHRoZSBzcGVjaWZpY2F0aW9uIHRoZSBpbXBsZW1lbnRhdGlvbiBzaG91bGQgYmUgY29tcGF0aWJsZVxuICAgIC8vIHdpdGggZnV0dXJlIHZlcnNpb25zLiBJZiB0aGVyZSBhcmUgbW9yZSBwYXJ0cywgd2Ugb25seSByZWplY3QgaXQgaWYgaXQncyB1c2luZyB2ZXJzaW9uIDAwXG4gICAgLy8gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi90cmFjZS1jb250ZXh0LyN2ZXJzaW9uaW5nLW9mLXRyYWNlcGFyZW50XG4gICAgaWYgKG1hdGNoWzFdID09PSAnMDAnICYmIG1hdGNoWzVdKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgICB0cmFjZUlkOiBtYXRjaFsyXSxcbiAgICAgICAgc3BhbklkOiBtYXRjaFszXSxcbiAgICAgICAgdHJhY2VGbGFnczogcGFyc2VJbnQobWF0Y2hbNF0sIDE2KSxcbiAgICB9O1xufVxuZXhwb3J0cy5wYXJzZVRyYWNlUGFyZW50ID0gcGFyc2VUcmFjZVBhcmVudDtcbi8qKlxuICogUHJvcGFnYXRlcyB7QGxpbmsgU3BhbkNvbnRleHR9IHRocm91Z2ggVHJhY2UgQ29udGV4dCBmb3JtYXQgcHJvcGFnYXRpb24uXG4gKlxuICogQmFzZWQgb24gdGhlIFRyYWNlIENvbnRleHQgc3BlY2lmaWNhdGlvbjpcbiAqIGh0dHBzOi8vd3d3LnczLm9yZy9UUi90cmFjZS1jb250ZXh0L1xuICovXG5jbGFzcyBIdHRwVHJhY2VDb250ZXh0IHtcbiAgICBpbmplY3QoY29udGV4dCwgY2Fycmllciwgc2V0dGVyKSB7XG4gICAgICAgIGNvbnN0IHNwYW5Db250ZXh0ID0gYXBpXzEuZ2V0U3BhbkNvbnRleHQoY29udGV4dCk7XG4gICAgICAgIGlmICghc3BhbkNvbnRleHQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHRyYWNlUGFyZW50ID0gYCR7VkVSU0lPTn0tJHtzcGFuQ29udGV4dC50cmFjZUlkfS0ke3NwYW5Db250ZXh0LnNwYW5JZH0tMCR7TnVtYmVyKHNwYW5Db250ZXh0LnRyYWNlRmxhZ3MgfHwgYXBpXzEuVHJhY2VGbGFncy5OT05FKS50b1N0cmluZygxNil9YDtcbiAgICAgICAgc2V0dGVyLnNldChjYXJyaWVyLCBleHBvcnRzLlRSQUNFX1BBUkVOVF9IRUFERVIsIHRyYWNlUGFyZW50KTtcbiAgICAgICAgaWYgKHNwYW5Db250ZXh0LnRyYWNlU3RhdGUpIHtcbiAgICAgICAgICAgIHNldHRlci5zZXQoY2FycmllciwgZXhwb3J0cy5UUkFDRV9TVEFURV9IRUFERVIsIHNwYW5Db250ZXh0LnRyYWNlU3RhdGUuc2VyaWFsaXplKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4dHJhY3QoY29udGV4dCwgY2FycmllciwgZ2V0dGVyKSB7XG4gICAgICAgIGNvbnN0IHRyYWNlUGFyZW50SGVhZGVyID0gZ2V0dGVyLmdldChjYXJyaWVyLCBleHBvcnRzLlRSQUNFX1BBUkVOVF9IRUFERVIpO1xuICAgICAgICBpZiAoIXRyYWNlUGFyZW50SGVhZGVyKVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IHRyYWNlUGFyZW50ID0gQXJyYXkuaXNBcnJheSh0cmFjZVBhcmVudEhlYWRlcilcbiAgICAgICAgICAgID8gdHJhY2VQYXJlbnRIZWFkZXJbMF1cbiAgICAgICAgICAgIDogdHJhY2VQYXJlbnRIZWFkZXI7XG4gICAgICAgIGlmICh0eXBlb2YgdHJhY2VQYXJlbnQgIT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IHNwYW5Db250ZXh0ID0gcGFyc2VUcmFjZVBhcmVudCh0cmFjZVBhcmVudCk7XG4gICAgICAgIGlmICghc3BhbkNvbnRleHQpXG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgc3BhbkNvbnRleHQuaXNSZW1vdGUgPSB0cnVlO1xuICAgICAgICBjb25zdCB0cmFjZVN0YXRlSGVhZGVyID0gZ2V0dGVyLmdldChjYXJyaWVyLCBleHBvcnRzLlRSQUNFX1NUQVRFX0hFQURFUik7XG4gICAgICAgIGlmICh0cmFjZVN0YXRlSGVhZGVyKSB7XG4gICAgICAgICAgICAvLyBJZiBtb3JlIHRoYW4gb25lIGB0cmFjZXN0YXRlYCBoZWFkZXIgaXMgZm91bmQsIHdlIG1lcmdlIHRoZW0gaW50byBhXG4gICAgICAgICAgICAvLyBzaW5nbGUgaGVhZGVyLlxuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSBBcnJheS5pc0FycmF5KHRyYWNlU3RhdGVIZWFkZXIpXG4gICAgICAgICAgICAgICAgPyB0cmFjZVN0YXRlSGVhZGVyLmpvaW4oJywnKVxuICAgICAgICAgICAgICAgIDogdHJhY2VTdGF0ZUhlYWRlcjtcbiAgICAgICAgICAgIHNwYW5Db250ZXh0LnRyYWNlU3RhdGUgPSBuZXcgVHJhY2VTdGF0ZV8xLlRyYWNlU3RhdGUodHlwZW9mIHN0YXRlID09PSAnc3RyaW5nJyA/IHN0YXRlIDogdW5kZWZpbmVkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXBpXzEuc2V0U3BhbkNvbnRleHQoY29udGV4dCwgc3BhbkNvbnRleHQpO1xuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIHJldHVybiBbZXhwb3J0cy5UUkFDRV9QQVJFTlRfSEVBREVSLCBleHBvcnRzLlRSQUNFX1NUQVRFX0hFQURFUl07XG4gICAgfVxufVxuZXhwb3J0cy5IdHRwVHJhY2VDb250ZXh0ID0gSHR0cFRyYWNlQ29udGV4dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBUcmFjZUNvbnRleHQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompositePropagator = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Combines multiple propagators into a single propagator. */\nclass CompositePropagator {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    constructor(config = {}) {\n        var _a, _b;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._logger = (_b = config.logger) !== null && _b !== void 0 ? _b : new api_1.NoopLogger();\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n            .reduce((x, y) => x.concat(y))));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    inject(context, carrier, setter) {\n        for (const propagator of this._propagators) {\n            try {\n                propagator.inject(context, carrier, setter);\n            }\n            catch (err) {\n                this._logger.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n        }\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    extract(context, carrier, getter) {\n        return this._propagators.reduce((ctx, propagator) => {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                this._logger.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n            return ctx;\n        }, context);\n    }\n    fields() {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    }\n}\nexports.CompositePropagator = CompositePropagator;\n//# sourceMappingURL=composite.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9jb21wb3NpdGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9jb21wb3NpdGUuanM/YTBhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBvc2l0ZVByb3BhZ2F0b3IgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKiogQ29tYmluZXMgbXVsdGlwbGUgcHJvcGFnYXRvcnMgaW50byBhIHNpbmdsZSBwcm9wYWdhdG9yLiAqL1xuY2xhc3MgQ29tcG9zaXRlUHJvcGFnYXRvciB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgY29tcG9zaXRlIHByb3BhZ2F0b3IgZnJvbSBhIGxpc3Qgb2YgcHJvcGFnYXRvcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gW2NvbmZpZ10gQ29uZmlndXJhdGlvbiBvYmplY3QgZm9yIGNvbXBvc2l0ZSBwcm9wYWdhdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdGhpcy5fcHJvcGFnYXRvcnMgPSAoX2EgPSBjb25maWcucHJvcGFnYXRvcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgICAgICB0aGlzLl9sb2dnZXIgPSAoX2IgPSBjb25maWcubG9nZ2VyKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgYXBpXzEuTm9vcExvZ2dlcigpO1xuICAgICAgICB0aGlzLl9maWVsZHMgPSBBcnJheS5mcm9tKG5ldyBTZXQodGhpcy5fcHJvcGFnYXRvcnNcbiAgICAgICAgICAgIC8vIG9sZGVyIHByb3BhZ2F0b3JzIG1heSBub3QgaGF2ZSBmaWVsZHMgZnVuY3Rpb24sIG51bGwgY2hlY2sgdG8gYmUgc3VyZVxuICAgICAgICAgICAgLm1hcChwID0+ICh0eXBlb2YgcC5maWVsZHMgPT09ICdmdW5jdGlvbicgPyBwLmZpZWxkcygpIDogW10pKVxuICAgICAgICAgICAgLnJlZHVjZSgoeCwgeSkgPT4geC5jb25jYXQoeSkpKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJ1biBlYWNoIG9mIHRoZSBjb25maWd1cmVkIHByb3BhZ2F0b3JzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGNhcnJpZXIuXG4gICAgICogUHJvcGFnYXRvcnMgYXJlIHJ1biBpbiB0aGUgb3JkZXIgdGhleSBhcmUgY29uZmlndXJlZCwgc28gaWYgbXVsdGlwbGVcbiAgICAgKiBwcm9wYWdhdG9ycyB3cml0ZSB0aGUgc2FtZSBjYXJyaWVyIGtleSwgdGhlIHByb3BhZ2F0b3IgbGF0ZXIgaW4gdGhlIGxpc3RcbiAgICAgKiB3aWxsIFwid2luXCIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29udGV4dCBDb250ZXh0IHRvIGluamVjdFxuICAgICAqIEBwYXJhbSBjYXJyaWVyIENhcnJpZXIgaW50byB3aGljaCBjb250ZXh0IHdpbGwgYmUgaW5qZWN0ZWRcbiAgICAgKi9cbiAgICBpbmplY3QoY29udGV4dCwgY2Fycmllciwgc2V0dGVyKSB7XG4gICAgICAgIGZvciAoY29uc3QgcHJvcGFnYXRvciBvZiB0aGlzLl9wcm9wYWdhdG9ycykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwcm9wYWdhdG9yLmluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvZ2dlci53YXJuKGBGYWlsZWQgdG8gaW5qZWN0IHdpdGggJHtwcm9wYWdhdG9yLmNvbnN0cnVjdG9yLm5hbWV9LiBFcnI6ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUnVuIGVhY2ggb2YgdGhlIGNvbmZpZ3VyZWQgcHJvcGFnYXRvcnMgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgY2Fycmllci5cbiAgICAgKiBQcm9wYWdhdG9ycyBhcmUgcnVuIGluIHRoZSBvcmRlciB0aGV5IGFyZSBjb25maWd1cmVkLCBzbyBpZiBtdWx0aXBsZVxuICAgICAqIHByb3BhZ2F0b3JzIHdyaXRlIHRoZSBzYW1lIGNvbnRleHQga2V5LCB0aGUgcHJvcGFnYXRvciBsYXRlciBpbiB0aGUgbGlzdFxuICAgICAqIHdpbGwgXCJ3aW5cIi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0IENvbnRleHQgdG8gYWRkIHZhbHVlcyB0b1xuICAgICAqIEBwYXJhbSBjYXJyaWVyIENhcnJpZXIgZnJvbSB3aGljaCB0byBleHRyYWN0IGNvbnRleHRcbiAgICAgKi9cbiAgICBleHRyYWN0KGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGFnYXRvcnMucmVkdWNlKChjdHgsIHByb3BhZ2F0b3IpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3BhZ2F0b3IuZXh0cmFjdChjdHgsIGNhcnJpZXIsIGdldHRlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9nZ2VyLndhcm4oYEZhaWxlZCB0byBpbmplY3Qgd2l0aCAke3Byb3BhZ2F0b3IuY29uc3RydWN0b3IubmFtZX0uIEVycjogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjdHg7XG4gICAgICAgIH0sIGNvbnRleHQpO1xuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIC8vIHJldHVybiBhIG5ldyBhcnJheSBzbyBvdXIgZmllbGRzIGNhbm5vdCBiZSBtb2RpZmllZFxuICAgICAgICByZXR1cm4gdGhpcy5fZmllbGRzLnNsaWNlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5Db21wb3NpdGVQcm9wYWdhdG9yID0gQ29tcG9zaXRlUHJvcGFnYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbXBvc2l0ZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/types.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/types.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9jb250ZXh0L3Byb3BhZ2F0aW9uL3R5cGVzLmpzPzBkODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./common/attributes */ \"./node_modules/@opentelemetry/core/build/src/common/attributes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/ConsoleLogger */ \"./node_modules/@opentelemetry/core/build/src/common/ConsoleLogger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/global-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/logging-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/time */ \"./node_modules/@opentelemetry/core/build/src/common/time.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/types */ \"./node_modules/@opentelemetry/core/build/src/common/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ExportResult */ \"./node_modules/@opentelemetry/core/build/src/ExportResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./version */ \"./node_modules/@opentelemetry/core/build/src/version.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/composite */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/HttpTraceContext */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/types */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./baggage/propagation/HttpBaggage */ \"./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoRecordingSpan */ \"./node_modules/@opentelemetry/core/build/src/trace/NoRecordingSpan.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/Plugin */ \"./node_modules/@opentelemetry/core/build/src/trace/Plugin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/AlwaysOffSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/AlwaysOnSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/ParentBasedSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/TraceIdRatioBasedSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/TraceState */ \"./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/IdGenerator */ \"./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/url */ \"./node_modules/@opentelemetry/core/build/src/utils/url.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/wrap */ \"./node_modules/@opentelemetry/core/build/src/utils/wrap.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvaW5kZXguanM/MzA5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29tbW9uL2F0dHJpYnV0ZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9Db25zb2xlTG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb21tb24vZ2xvYmFsLWVycm9yLWhhbmRsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9sb2dnaW5nLWVycm9yLWhhbmRsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi90aW1lXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb21tb24vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0V4cG9ydFJlc3VsdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmVyc2lvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi9jb21wb3NpdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRleHQvcHJvcGFnYXRpb24vSHR0cFRyYWNlQ29udGV4dFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYmFnZ2FnZS9wcm9wYWdhdGlvbi9IdHRwQmFnZ2FnZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGxhdGZvcm1cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL05vUmVjb3JkaW5nU3BhblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvUGx1Z2luXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zYW1wbGVyL0Fsd2F5c09mZlNhbXBsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3NhbXBsZXIvQWx3YXlzT25TYW1wbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zYW1wbGVyL1BhcmVudEJhc2VkU2FtcGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2Uvc2FtcGxlci9UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL1RyYWNlU3RhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL0lkR2VuZXJhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlscy91cmxcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzL3dyYXBcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/internal/validators.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/internal/validators.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateValue = exports.validateKey = void 0;\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nfunction validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\nexports.validateKey = validateKey;\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nfunction validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\nexports.validateValue = validateValue;\n//# sourceMappingURL=validators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvaW50ZXJuYWwvdmFsaWRhdG9ycy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9pbnRlcm5hbC92YWxpZGF0b3JzLmpzPzEzY2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52YWxpZGF0ZVZhbHVlID0gZXhwb3J0cy52YWxpZGF0ZUtleSA9IHZvaWQgMDtcbmNvbnN0IFZBTElEX0tFWV9DSEFSX1JBTkdFID0gJ1tfMC05YS16LSovXSc7XG5jb25zdCBWQUxJRF9LRVkgPSBgW2Etel0ke1ZBTElEX0tFWV9DSEFSX1JBTkdFfXswLDI1NX1gO1xuY29uc3QgVkFMSURfVkVORE9SX0tFWSA9IGBbYS16MC05XSR7VkFMSURfS0VZX0NIQVJfUkFOR0V9ezAsMjQwfUBbYS16XSR7VkFMSURfS0VZX0NIQVJfUkFOR0V9ezAsMTN9YDtcbmNvbnN0IFZBTElEX0tFWV9SRUdFWCA9IG5ldyBSZWdFeHAoYF4oPzoke1ZBTElEX0tFWX18JHtWQUxJRF9WRU5ET1JfS0VZfSkkYCk7XG5jb25zdCBWQUxJRF9WQUxVRV9CQVNFX1JFR0VYID0gL15bIC1+XXswLDI1NX1bIS1+XSQvO1xuY29uc3QgSU5WQUxJRF9WQUxVRV9DT01NQV9FUVVBTF9SRUdFWCA9IC8sfD0vO1xuLyoqXG4gKiBLZXkgaXMgb3BhcXVlIHN0cmluZyB1cCB0byAyNTYgY2hhcmFjdGVycyBwcmludGFibGUuIEl0IE1VU1QgYmVnaW4gd2l0aCBhXG4gKiBsb3dlcmNhc2UgbGV0dGVyLCBhbmQgY2FuIG9ubHkgY29udGFpbiBsb3dlcmNhc2UgbGV0dGVycyBhLXosIGRpZ2l0cyAwLTksXG4gKiB1bmRlcnNjb3JlcyBfLCBkYXNoZXMgLSwgYXN0ZXJpc2tzICosIGFuZCBmb3J3YXJkIHNsYXNoZXMgLy5cbiAqIEZvciBtdWx0aS10ZW5hbnQgdmVuZG9yIHNjZW5hcmlvcywgYW4gYXQgc2lnbiAoQCkgY2FuIGJlIHVzZWQgdG8gcHJlZml4IHRoZVxuICogdmVuZG9yIG5hbWUuIFZlbmRvcnMgU0hPVUxEIHNldCB0aGUgdGVuYW50IElEIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGtleS5cbiAqIHNlZSBodHRwczovL3d3dy53My5vcmcvVFIvdHJhY2UtY29udGV4dC8ja2V5XG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlS2V5KGtleSkge1xuICAgIHJldHVybiBWQUxJRF9LRVlfUkVHRVgudGVzdChrZXkpO1xufVxuZXhwb3J0cy52YWxpZGF0ZUtleSA9IHZhbGlkYXRlS2V5O1xuLyoqXG4gKiBWYWx1ZSBpcyBvcGFxdWUgc3RyaW5nIHVwIHRvIDI1NiBjaGFyYWN0ZXJzIHByaW50YWJsZSBBU0NJSSBSRkMwMDIwXG4gKiBjaGFyYWN0ZXJzIChpLmUuLCB0aGUgcmFuZ2UgMHgyMCB0byAweDdFKSBleGNlcHQgY29tbWEgLCBhbmQgPS5cbiAqL1xuZnVuY3Rpb24gdmFsaWRhdGVWYWx1ZSh2YWx1ZSkge1xuICAgIHJldHVybiAoVkFMSURfVkFMVUVfQkFTRV9SRUdFWC50ZXN0KHZhbHVlKSAmJlxuICAgICAgICAhSU5WQUxJRF9WQUxVRV9DT01NQV9FUVVBTF9SRUdFWC50ZXN0KHZhbHVlKSk7XG59XG5leHBvcnRzLnZhbGlkYXRlVmFsdWUgPSB2YWxpZGF0ZVZhbHVlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdG9ycy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/internal/validators.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/BaseAbstractPlugin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/BaseAbstractPlugin.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAbstractPlugin = void 0;\n/** This class represent the base to patch plugin. */\nclass BaseAbstractPlugin {\n    constructor(_tracerName, _tracerVersion) {\n        this._tracerName = _tracerName;\n        this._tracerVersion = _tracerVersion;\n    }\n    disable() {\n        this.unpatch();\n    }\n}\nexports.BaseAbstractPlugin = BaseAbstractPlugin;\n//# sourceMappingURL=BaseAbstractPlugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vQmFzZUFic3RyYWN0UGx1Z2luLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL0Jhc2VBYnN0cmFjdFBsdWdpbi5qcz80YzA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFzZUFic3RyYWN0UGx1Z2luID0gdm9pZCAwO1xuLyoqIFRoaXMgY2xhc3MgcmVwcmVzZW50IHRoZSBiYXNlIHRvIHBhdGNoIHBsdWdpbi4gKi9cbmNsYXNzIEJhc2VBYnN0cmFjdFBsdWdpbiB7XG4gICAgY29uc3RydWN0b3IoX3RyYWNlck5hbWUsIF90cmFjZXJWZXJzaW9uKSB7XG4gICAgICAgIHRoaXMuX3RyYWNlck5hbWUgPSBfdHJhY2VyTmFtZTtcbiAgICAgICAgdGhpcy5fdHJhY2VyVmVyc2lvbiA9IF90cmFjZXJWZXJzaW9uO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB0aGlzLnVucGF0Y2goKTtcbiAgICB9XG59XG5leHBvcnRzLkJhc2VBYnN0cmFjdFBsdWdpbiA9IEJhc2VBYnN0cmFjdFBsdWdpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VBYnN0cmFjdFBsdWdpbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/BaseAbstractPlugin.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/BasePlugin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/BasePlugin.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasePlugin = void 0;\nconst BaseAbstractPlugin_1 = __webpack_require__(/*! ../BaseAbstractPlugin */ \"./node_modules/@opentelemetry/core/build/src/platform/BaseAbstractPlugin.js\");\n/** This class represent the base to patch plugin. */\nclass BasePlugin extends BaseAbstractPlugin_1.BaseAbstractPlugin {\n    enable(moduleExports, tracerProvider, logger, config) {\n        this._moduleExports = moduleExports;\n        this._tracer = tracerProvider.getTracer(this._tracerName, this._tracerVersion);\n        this._logger = logger;\n        if (config)\n            this._config = config;\n        return this.patch();\n    }\n}\nexports.BasePlugin = BasePlugin;\n//# sourceMappingURL=BasePlugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9CYXNlUGx1Z2luLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvQmFzZVBsdWdpbi5qcz81NzEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFzZVBsdWdpbiA9IHZvaWQgMDtcbmNvbnN0IEJhc2VBYnN0cmFjdFBsdWdpbl8xID0gcmVxdWlyZShcIi4uL0Jhc2VBYnN0cmFjdFBsdWdpblwiKTtcbi8qKiBUaGlzIGNsYXNzIHJlcHJlc2VudCB0aGUgYmFzZSB0byBwYXRjaCBwbHVnaW4uICovXG5jbGFzcyBCYXNlUGx1Z2luIGV4dGVuZHMgQmFzZUFic3RyYWN0UGx1Z2luXzEuQmFzZUFic3RyYWN0UGx1Z2luIHtcbiAgICBlbmFibGUobW9kdWxlRXhwb3J0cywgdHJhY2VyUHJvdmlkZXIsIGxvZ2dlciwgY29uZmlnKSB7XG4gICAgICAgIHRoaXMuX21vZHVsZUV4cG9ydHMgPSBtb2R1bGVFeHBvcnRzO1xuICAgICAgICB0aGlzLl90cmFjZXIgPSB0cmFjZXJQcm92aWRlci5nZXRUcmFjZXIodGhpcy5fdHJhY2VyTmFtZSwgdGhpcy5fdHJhY2VyVmVyc2lvbik7XG4gICAgICAgIHRoaXMuX2xvZ2dlciA9IGxvZ2dlcjtcbiAgICAgICAgaWYgKGNvbmZpZylcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICAgICAgcmV0dXJuIHRoaXMucGF0Y2goKTtcbiAgICB9XG59XG5leHBvcnRzLkJhc2VQbHVnaW4gPSBCYXNlUGx1Z2luO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzZVBsdWdpbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/BasePlugin.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomIdGenerator = void 0;\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\nclass RandomIdGenerator {\n    constructor() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n}\nexports.RandomIdGenerator = RandomIdGenerator;\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (let i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9SYW5kb21JZEdlbmVyYXRvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL1JhbmRvbUlkR2VuZXJhdG9yLmpzPzBlMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJhbmRvbUlkR2VuZXJhdG9yID0gdm9pZCAwO1xuY29uc3QgU1BBTl9JRF9CWVRFUyA9IDg7XG5jb25zdCBUUkFDRV9JRF9CWVRFUyA9IDE2O1xuY2xhc3MgUmFuZG9tSWRHZW5lcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyBhIHJhbmRvbSAxNi1ieXRlIHRyYWNlIElEIGZvcm1hdHRlZC9lbmNvZGVkIGFzIGEgMzIgbG93ZXJjYXNlIGhleFxuICAgICAgICAgKiBjaGFyYWN0ZXJzIGNvcnJlc3BvbmRpbmcgdG8gMTI4IGJpdHMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdlbmVyYXRlVHJhY2VJZCA9IGdldElkR2VuZXJhdG9yKFRSQUNFX0lEX0JZVEVTKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgYSByYW5kb20gOC1ieXRlIHNwYW4gSUQgZm9ybWF0dGVkL2VuY29kZWQgYXMgYSAxNiBsb3dlcmNhc2UgaGV4XG4gICAgICAgICAqIGNoYXJhY3RlcnMgY29ycmVzcG9uZGluZyB0byA2NCBiaXRzLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZW5lcmF0ZVNwYW5JZCA9IGdldElkR2VuZXJhdG9yKFNQQU5fSURfQllURVMpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmFuZG9tSWRHZW5lcmF0b3IgPSBSYW5kb21JZEdlbmVyYXRvcjtcbmNvbnN0IFNIQVJFRF9DSEFSX0NPREVTX0FSUkFZID0gQXJyYXkoMzIpO1xuZnVuY3Rpb24gZ2V0SWRHZW5lcmF0b3IoYnl0ZXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZ2VuZXJhdGVJZCgpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcyAqIDI7IGkrKykge1xuICAgICAgICAgICAgU0hBUkVEX0NIQVJfQ09ERVNfQVJSQVlbaV0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNikgKyA0ODtcbiAgICAgICAgICAgIC8vIHZhbGlkIGhleCBjaGFyYWN0ZXJzIGluIHRoZSByYW5nZSA0OC01NyBhbmQgOTctMTAyXG4gICAgICAgICAgICBpZiAoU0hBUkVEX0NIQVJfQ09ERVNfQVJSQVlbaV0gPj0gNTgpIHtcbiAgICAgICAgICAgICAgICBTSEFSRURfQ0hBUl9DT0RFU19BUlJBWVtpXSArPSAzOTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCBTSEFSRURfQ0hBUl9DT0RFU19BUlJBWS5zbGljZSgwLCBieXRlcyAqIDIpKTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmFuZG9tSWRHZW5lcmF0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = void 0;\nconst environment_1 = __webpack_require__(/*! ../../utils/environment */ \"./node_modules/@opentelemetry/core/build/src/utils/environment.js\");\n/**\n * Gets the environment variables\n */\nfunction getEnv() {\n    const _window = window;\n    const globalEnv = environment_1.parseEnvironment(_window);\n    return Object.assign({}, environment_1.DEFAULT_ENVIRONMENT, globalEnv);\n}\nexports.getEnv = getEnv;\n//# sourceMappingURL=environment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9lbnZpcm9ubWVudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2Vudmlyb25tZW50LmpzPzkxY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRFbnYgPSB2b2lkIDA7XG5jb25zdCBlbnZpcm9ubWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2Vudmlyb25tZW50XCIpO1xuLyoqXG4gKiBHZXRzIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAqL1xuZnVuY3Rpb24gZ2V0RW52KCkge1xuICAgIGNvbnN0IF93aW5kb3cgPSB3aW5kb3c7XG4gICAgY29uc3QgZ2xvYmFsRW52ID0gZW52aXJvbm1lbnRfMS5wYXJzZUVudmlyb25tZW50KF93aW5kb3cpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBlbnZpcm9ubWVudF8xLkRFRkFVTFRfRU5WSVJPTk1FTlQsIGdsb2JhbEVudik7XG59XG5leHBvcnRzLmdldEVudiA9IGdldEVudjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudmlyb25tZW50LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBase64 = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction hexToBase64(hexStr) {\n    const hexStrLen = hexStr.length;\n    let hexAsciiCharsStr = '';\n    for (let i = 0; i < hexStrLen; i += 2) {\n        const hexPair = hexStr.substring(i, i + 2);\n        const hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\nexports.hexToBase64 = hexToBase64;\n//# sourceMappingURL=hex-to-base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9oZXgtdG8tYmFzZTY0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvaGV4LXRvLWJhc2U2NC5qcz9mMTQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oZXhUb0Jhc2U2NCA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBoZXhUb0Jhc2U2NChoZXhTdHIpIHtcbiAgICBjb25zdCBoZXhTdHJMZW4gPSBoZXhTdHIubGVuZ3RoO1xuICAgIGxldCBoZXhBc2NpaUNoYXJzU3RyID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZXhTdHJMZW47IGkgKz0gMikge1xuICAgICAgICBjb25zdCBoZXhQYWlyID0gaGV4U3RyLnN1YnN0cmluZyhpLCBpICsgMik7XG4gICAgICAgIGNvbnN0IGhleFZhbCA9IHBhcnNlSW50KGhleFBhaXIsIDE2KTtcbiAgICAgICAgaGV4QXNjaWlDaGFyc1N0ciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGhleFZhbCk7XG4gICAgfVxuICAgIHJldHVybiBidG9hKGhleEFzY2lpQ2hhcnNTdHIpO1xufVxuZXhwb3J0cy5oZXhUb0Jhc2U2NCA9IGhleFRvQmFzZTY0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGV4LXRvLWJhc2U2NC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./BasePlugin */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/BasePlugin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./environment */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js\"), exports);\n__exportStar(__webpack_require__(/*! ./hex-to-base64 */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RandomIdGenerator */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./performance */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sdk-info */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js\"), exports);\n__exportStar(__webpack_require__(/*! ./timer-util */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzPzM1MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Jhc2VQbHVnaW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vudmlyb25tZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZXgtdG8tYmFzZTY0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9SYW5kb21JZEdlbmVyYXRvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGVyZm9ybWFuY2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Nkay1pbmZvXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90aW1lci11dGlsXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.otperformance = void 0;\nexports.otperformance = performance;\n//# sourceMappingURL=performance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9wZXJmb3JtYW5jZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL3BlcmZvcm1hbmNlLmpzP2NiY2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vdHBlcmZvcm1hbmNlID0gdm9pZCAwO1xuZXhwb3J0cy5vdHBlcmZvcm1hbmNlID0gcGVyZm9ybWFuY2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wZXJmb3JtYW5jZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDK_INFO = void 0;\nconst version_1 = __webpack_require__(/*! ../../version */ \"./node_modules/@opentelemetry/core/build/src/version.js\");\n/** Constants describing the SDK in use */\nexports.SDK_INFO = {\n    NAME: 'opentelemetry',\n    RUNTIME: 'browser',\n    LANGUAGE: 'webjs',\n    VERSION: version_1.VERSION,\n};\n//# sourceMappingURL=sdk-info.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9zZGstaW5mby5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL3Nkay1pbmZvLmpzP2I0ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TREtfSU5GTyA9IHZvaWQgMDtcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuLi8uLi92ZXJzaW9uXCIpO1xuLyoqIENvbnN0YW50cyBkZXNjcmliaW5nIHRoZSBTREsgaW4gdXNlICovXG5leHBvcnRzLlNES19JTkZPID0ge1xuICAgIE5BTUU6ICdvcGVudGVsZW1ldHJ5JyxcbiAgICBSVU5USU1FOiAnYnJvd3NlcicsXG4gICAgTEFOR1VBR0U6ICd3ZWJqcycsXG4gICAgVkVSU0lPTjogdmVyc2lvbl8xLlZFUlNJT04sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLWluZm8uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unrefTimer = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction unrefTimer(_timer) { }\nexports.unrefTimer = unrefTimer;\n//# sourceMappingURL=timer-util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci90aW1lci11dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvdGltZXItdXRpbC5qcz8wZGQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51bnJlZlRpbWVyID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIHVucmVmVGltZXIoX3RpbWVyKSB7IH1cbmV4cG9ydHMudW5yZWZUaW1lciA9IHVucmVmVGltZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lci11dGlsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=IdGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvSWRHZW5lcmF0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvSWRHZW5lcmF0b3IuanM/YmZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JZEdlbmVyYXRvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/NoRecordingSpan.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/NoRecordingSpan.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoRecordingSpan = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * The NoRecordingSpan extends the {@link NoopSpan}, making all operations no-op\n * except context propagation.\n */\nclass NoRecordingSpan extends api_1.NoopSpan {\n    constructor(spanContext) {\n        super(spanContext);\n        this._context = spanContext || api_1.INVALID_SPAN_CONTEXT;\n    }\n    // Returns a SpanContext.\n    context() {\n        return this._context;\n    }\n}\nexports.NoRecordingSpan = NoRecordingSpan;\n//# sourceMappingURL=NoRecordingSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvTm9SZWNvcmRpbmdTcGFuLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3RyYWNlL05vUmVjb3JkaW5nU3Bhbi5qcz8wODFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTm9SZWNvcmRpbmdTcGFuID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqXG4gKiBUaGUgTm9SZWNvcmRpbmdTcGFuIGV4dGVuZHMgdGhlIHtAbGluayBOb29wU3Bhbn0sIG1ha2luZyBhbGwgb3BlcmF0aW9ucyBuby1vcFxuICogZXhjZXB0IGNvbnRleHQgcHJvcGFnYXRpb24uXG4gKi9cbmNsYXNzIE5vUmVjb3JkaW5nU3BhbiBleHRlbmRzIGFwaV8xLk5vb3BTcGFuIHtcbiAgICBjb25zdHJ1Y3RvcihzcGFuQ29udGV4dCkge1xuICAgICAgICBzdXBlcihzcGFuQ29udGV4dCk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQgPSBzcGFuQ29udGV4dCB8fCBhcGlfMS5JTlZBTElEX1NQQU5fQ09OVEVYVDtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhIFNwYW5Db250ZXh0LlxuICAgIGNvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuTm9SZWNvcmRpbmdTcGFuID0gTm9SZWNvcmRpbmdTcGFuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9SZWNvcmRpbmdTcGFuLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/NoRecordingSpan.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/Plugin.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/Plugin.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Plugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvUGx1Z2luLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3RyYWNlL1BsdWdpbi5qcz9hM2U4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBsdWdpbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/Plugin.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/TraceState.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/TraceState.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceState = void 0;\nconst validators_1 = __webpack_require__(/*! ../internal/validators */ \"./node_modules/@opentelemetry/core/build/src/internal/validators.js\");\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nclass TraceState {\n    constructor(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    set(key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        const traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    }\n    unset(key) {\n        const traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    }\n    get(key) {\n        return this._internalState.get(key);\n    }\n    serialize() {\n        return this._keys()\n            .reduce((agg, key) => {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    }\n    _parse(rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce((agg, part) => {\n            const listMember = part.trim(); // Optional Whitespace (OWS) handling\n            const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                const key = listMember.slice(0, i);\n                const value = listMember.slice(i + 1, part.length);\n                if (validators_1.validateKey(key) && validators_1.validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    }\n    _keys() {\n        return Array.from(this._internalState.keys()).reverse();\n    }\n    _clone() {\n        const traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    }\n}\nexports.TraceState = TraceState;\n//# sourceMappingURL=TraceState.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvVHJhY2VTdGF0ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy90cmFjZS9UcmFjZVN0YXRlLmpzPzgzMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFjZVN0YXRlID0gdm9pZCAwO1xuY29uc3QgdmFsaWRhdG9yc18xID0gcmVxdWlyZShcIi4uL2ludGVybmFsL3ZhbGlkYXRvcnNcIik7XG5jb25zdCBNQVhfVFJBQ0VfU1RBVEVfSVRFTVMgPSAzMjtcbmNvbnN0IE1BWF9UUkFDRV9TVEFURV9MRU4gPSA1MTI7XG5jb25zdCBMSVNUX01FTUJFUlNfU0VQQVJBVE9SID0gJywnO1xuY29uc3QgTElTVF9NRU1CRVJfS0VZX1ZBTFVFX1NQTElUVEVSID0gJz0nO1xuLyoqXG4gKiBUcmFjZVN0YXRlIG11c3QgYmUgYSBjbGFzcyBhbmQgbm90IGEgc2ltcGxlIG9iamVjdCB0eXBlIGJlY2F1c2Ugb2YgdGhlIHNwZWNcbiAqIHJlcXVpcmVtZW50IChodHRwczovL3d3dy53My5vcmcvVFIvdHJhY2UtY29udGV4dC8jdHJhY2VzdGF0ZS1maWVsZCkuXG4gKlxuICogSGVyZSBpcyB0aGUgbGlzdCBvZiBhbGxvd2VkIG11dGF0aW9uczpcbiAqIC0gTmV3IGtleS12YWx1ZSBwYWlyIHNob3VsZCBiZSBhZGRlZCBpbnRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGxpc3RcbiAqIC0gVGhlIHZhbHVlIG9mIGFueSBrZXkgY2FuIGJlIHVwZGF0ZWQuIE1vZGlmaWVkIGtleXMgTVVTVCBiZSBtb3ZlZCB0byB0aGVcbiAqIGJlZ2lubmluZyBvZiB0aGUgbGlzdC5cbiAqL1xuY2xhc3MgVHJhY2VTdGF0ZSB7XG4gICAgY29uc3RydWN0b3IocmF3VHJhY2VTdGF0ZSkge1xuICAgICAgICB0aGlzLl9pbnRlcm5hbFN0YXRlID0gbmV3IE1hcCgpO1xuICAgICAgICBpZiAocmF3VHJhY2VTdGF0ZSlcbiAgICAgICAgICAgIHRoaXMuX3BhcnNlKHJhd1RyYWNlU3RhdGUpO1xuICAgIH1cbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICAvLyBUT0RPOiBCZW5jaG1hcmsgdGhlIGRpZmZlcmVudCBhcHByb2FjaGVzKG1hcCB2cyBsaXN0KSBhbmRcbiAgICAgICAgLy8gdXNlIHRoZSBmYXN0ZXIgb25lLlxuICAgICAgICBjb25zdCB0cmFjZVN0YXRlID0gdGhpcy5fY2xvbmUoKTtcbiAgICAgICAgaWYgKHRyYWNlU3RhdGUuX2ludGVybmFsU3RhdGUuaGFzKGtleSkpIHtcbiAgICAgICAgICAgIHRyYWNlU3RhdGUuX2ludGVybmFsU3RhdGUuZGVsZXRlKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgdHJhY2VTdGF0ZS5faW50ZXJuYWxTdGF0ZS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0cmFjZVN0YXRlO1xuICAgIH1cbiAgICB1bnNldChrZXkpIHtcbiAgICAgICAgY29uc3QgdHJhY2VTdGF0ZSA9IHRoaXMuX2Nsb25lKCk7XG4gICAgICAgIHRyYWNlU3RhdGUuX2ludGVybmFsU3RhdGUuZGVsZXRlKGtleSk7XG4gICAgICAgIHJldHVybiB0cmFjZVN0YXRlO1xuICAgIH1cbiAgICBnZXQoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnRlcm5hbFN0YXRlLmdldChrZXkpO1xuICAgIH1cbiAgICBzZXJpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9rZXlzKClcbiAgICAgICAgICAgIC5yZWR1Y2UoKGFnZywga2V5KSA9PiB7XG4gICAgICAgICAgICBhZ2cucHVzaChrZXkgKyBMSVNUX01FTUJFUl9LRVlfVkFMVUVfU1BMSVRURVIgKyB0aGlzLmdldChrZXkpKTtcbiAgICAgICAgICAgIHJldHVybiBhZ2c7XG4gICAgICAgIH0sIFtdKVxuICAgICAgICAgICAgLmpvaW4oTElTVF9NRU1CRVJTX1NFUEFSQVRPUik7XG4gICAgfVxuICAgIF9wYXJzZShyYXdUcmFjZVN0YXRlKSB7XG4gICAgICAgIGlmIChyYXdUcmFjZVN0YXRlLmxlbmd0aCA+IE1BWF9UUkFDRV9TVEFURV9MRU4pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuX2ludGVybmFsU3RhdGUgPSByYXdUcmFjZVN0YXRlXG4gICAgICAgICAgICAuc3BsaXQoTElTVF9NRU1CRVJTX1NFUEFSQVRPUilcbiAgICAgICAgICAgIC5yZXZlcnNlKCkgLy8gU3RvcmUgaW4gcmV2ZXJzZSBzbyBuZXcga2V5cyAoLnNldCguLi4pKSB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAucmVkdWNlKChhZ2csIHBhcnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGxpc3RNZW1iZXIgPSBwYXJ0LnRyaW0oKTsgLy8gT3B0aW9uYWwgV2hpdGVzcGFjZSAoT1dTKSBoYW5kbGluZ1xuICAgICAgICAgICAgY29uc3QgaSA9IGxpc3RNZW1iZXIuaW5kZXhPZihMSVNUX01FTUJFUl9LRVlfVkFMVUVfU1BMSVRURVIpO1xuICAgICAgICAgICAgaWYgKGkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gbGlzdE1lbWJlci5zbGljZSgwLCBpKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGxpc3RNZW1iZXIuc2xpY2UoaSArIDEsIHBhcnQubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdG9yc18xLnZhbGlkYXRlS2V5KGtleSkgJiYgdmFsaWRhdG9yc18xLnZhbGlkYXRlVmFsdWUodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFnZy5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBDb25zaWRlciB0byBhZGQgd2FybmluZyBsb2dcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYWdnO1xuICAgICAgICB9LCBuZXcgTWFwKCkpO1xuICAgICAgICAvLyBCZWNhdXNlIG9mIHRoZSByZXZlcnNlKCkgcmVxdWlyZW1lbnQsIHRydW5jIG11c3QgYmUgZG9uZSBhZnRlciBtYXAgaXMgY3JlYXRlZFxuICAgICAgICBpZiAodGhpcy5faW50ZXJuYWxTdGF0ZS5zaXplID4gTUFYX1RSQUNFX1NUQVRFX0lURU1TKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnRlcm5hbFN0YXRlID0gbmV3IE1hcChBcnJheS5mcm9tKHRoaXMuX2ludGVybmFsU3RhdGUuZW50cmllcygpKVxuICAgICAgICAgICAgICAgIC5yZXZlcnNlKCkgLy8gVXNlIHJldmVyc2Ugc2FtZSBhcyBvcmlnaW5hbCB0cmFjZXN0YXRlIHBhcnNlIGNoYWluXG4gICAgICAgICAgICAgICAgLnNsaWNlKDAsIE1BWF9UUkFDRV9TVEFURV9JVEVNUykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9rZXlzKCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9pbnRlcm5hbFN0YXRlLmtleXMoKSkucmV2ZXJzZSgpO1xuICAgIH1cbiAgICBfY2xvbmUoKSB7XG4gICAgICAgIGNvbnN0IHRyYWNlU3RhdGUgPSBuZXcgVHJhY2VTdGF0ZSgpO1xuICAgICAgICB0cmFjZVN0YXRlLl9pbnRlcm5hbFN0YXRlID0gbmV3IE1hcCh0aGlzLl9pbnRlcm5hbFN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHRyYWNlU3RhdGU7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFjZVN0YXRlID0gVHJhY2VTdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYWNlU3RhdGUuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOffSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples no traces. */\nclass AlwaysOffSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return 'AlwaysOffSampler';\n    }\n}\nexports.AlwaysOffSampler = AlwaysOffSampler;\n//# sourceMappingURL=AlwaysOffSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPZmZTYW1wbGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3RyYWNlL3NhbXBsZXIvQWx3YXlzT2ZmU2FtcGxlci5qcz80ODhjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWx3YXlzT2ZmU2FtcGxlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbi8qKiBTYW1wbGVyIHRoYXQgc2FtcGxlcyBubyB0cmFjZXMuICovXG5jbGFzcyBBbHdheXNPZmZTYW1wbGVyIHtcbiAgICBzaG91bGRTYW1wbGUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZWNpc2lvbjogYXBpXzEuU2FtcGxpbmdEZWNpc2lvbi5OT1RfUkVDT1JELFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuICdBbHdheXNPZmZTYW1wbGVyJztcbiAgICB9XG59XG5leHBvcnRzLkFsd2F5c09mZlNhbXBsZXIgPSBBbHdheXNPZmZTYW1wbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWx3YXlzT2ZmU2FtcGxlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOnSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples all traces. */\nclass AlwaysOnSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    }\n    toString() {\n        return 'AlwaysOnSampler';\n    }\n}\nexports.AlwaysOnSampler = AlwaysOnSampler;\n//# sourceMappingURL=AlwaysOnSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPblNhbXBsZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPblNhbXBsZXIuanM/ZTYzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFsd2F5c09uU2FtcGxlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbi8qKiBTYW1wbGVyIHRoYXQgc2FtcGxlcyBhbGwgdHJhY2VzLiAqL1xuY2xhc3MgQWx3YXlzT25TYW1wbGVyIHtcbiAgICBzaG91bGRTYW1wbGUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZWNpc2lvbjogYXBpXzEuU2FtcGxpbmdEZWNpc2lvbi5SRUNPUkRfQU5EX1NBTVBMRUQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gJ0Fsd2F5c09uU2FtcGxlcic7XG4gICAgfVxufVxuZXhwb3J0cy5BbHdheXNPblNhbXBsZXIgPSBBbHdheXNPblNhbXBsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BbHdheXNPblNhbXBsZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParentBasedSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst global_error_handler_1 = __webpack_require__(/*! ../../common/global-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\");\nconst AlwaysOffSampler_1 = __webpack_require__(/*! ./AlwaysOffSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\");\nconst AlwaysOnSampler_1 = __webpack_require__(/*! ./AlwaysOnSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\");\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nclass ParentBasedSampler {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            global_error_handler_1.globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler_1.AlwaysOnSampler();\n        }\n        this._remoteParentSampled = (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._remoteParentNotSampled = (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler_1.AlwaysOffSampler();\n        this._localParentSampled = (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._localParentNotSampled = (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler_1.AlwaysOffSampler();\n    }\n    shouldSample(context, traceId, spanName, spanKind, attributes, links) {\n        const parentContext = api_1.getSpanContext(context);\n        if (!parentContext) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    }\n    toString() {\n        return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n    }\n}\nexports.ParentBasedSampler = ParentBasedSampler;\n//# sourceMappingURL=ParentBasedSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9QYXJlbnRCYXNlZFNhbXBsZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9QYXJlbnRCYXNlZFNhbXBsZXIuanM/NmUyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhcmVudEJhc2VkU2FtcGxlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGdsb2JhbF9lcnJvcl9oYW5kbGVyXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uL2dsb2JhbC1lcnJvci1oYW5kbGVyXCIpO1xuY29uc3QgQWx3YXlzT2ZmU2FtcGxlcl8xID0gcmVxdWlyZShcIi4vQWx3YXlzT2ZmU2FtcGxlclwiKTtcbmNvbnN0IEFsd2F5c09uU2FtcGxlcl8xID0gcmVxdWlyZShcIi4vQWx3YXlzT25TYW1wbGVyXCIpO1xuLyoqXG4gKiBBIGNvbXBvc2l0ZSBzYW1wbGVyIHRoYXQgZWl0aGVyIHJlc3BlY3RzIHRoZSBwYXJlbnQgc3BhbidzIHNhbXBsaW5nIGRlY2lzaW9uXG4gKiBvciBkZWxlZ2F0ZXMgdG8gYGRlbGVnYXRlU2FtcGxlcmAgZm9yIHJvb3Qgc3BhbnMuXG4gKi9cbmNsYXNzIFBhcmVudEJhc2VkU2FtcGxlciB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgdGhpcy5fcm9vdCA9IGNvbmZpZy5yb290O1xuICAgICAgICBpZiAoIXRoaXMuX3Jvb3QpIHtcbiAgICAgICAgICAgIGdsb2JhbF9lcnJvcl9oYW5kbGVyXzEuZ2xvYmFsRXJyb3JIYW5kbGVyKG5ldyBFcnJvcignUGFyZW50QmFzZWRTYW1wbGVyIG11c3QgaGF2ZSBhIHJvb3Qgc2FtcGxlciBjb25maWd1cmVkJykpO1xuICAgICAgICAgICAgdGhpcy5fcm9vdCA9IG5ldyBBbHdheXNPblNhbXBsZXJfMS5BbHdheXNPblNhbXBsZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZW1vdGVQYXJlbnRTYW1wbGVkID0gKF9hID0gY29uZmlnLnJlbW90ZVBhcmVudFNhbXBsZWQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBBbHdheXNPblNhbXBsZXJfMS5BbHdheXNPblNhbXBsZXIoKTtcbiAgICAgICAgdGhpcy5fcmVtb3RlUGFyZW50Tm90U2FtcGxlZCA9IChfYiA9IGNvbmZpZy5yZW1vdGVQYXJlbnROb3RTYW1wbGVkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgQWx3YXlzT2ZmU2FtcGxlcl8xLkFsd2F5c09mZlNhbXBsZXIoKTtcbiAgICAgICAgdGhpcy5fbG9jYWxQYXJlbnRTYW1wbGVkID0gKF9jID0gY29uZmlnLmxvY2FsUGFyZW50U2FtcGxlZCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogbmV3IEFsd2F5c09uU2FtcGxlcl8xLkFsd2F5c09uU2FtcGxlcigpO1xuICAgICAgICB0aGlzLl9sb2NhbFBhcmVudE5vdFNhbXBsZWQgPSAoX2QgPSBjb25maWcubG9jYWxQYXJlbnROb3RTYW1wbGVkKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBuZXcgQWx3YXlzT2ZmU2FtcGxlcl8xLkFsd2F5c09mZlNhbXBsZXIoKTtcbiAgICB9XG4gICAgc2hvdWxkU2FtcGxlKGNvbnRleHQsIHRyYWNlSWQsIHNwYW5OYW1lLCBzcGFuS2luZCwgYXR0cmlidXRlcywgbGlua3MpIHtcbiAgICAgICAgY29uc3QgcGFyZW50Q29udGV4dCA9IGFwaV8xLmdldFNwYW5Db250ZXh0KGNvbnRleHQpO1xuICAgICAgICBpZiAoIXBhcmVudENvbnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yb290LnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyZW50Q29udGV4dC5pc1JlbW90ZSkge1xuICAgICAgICAgICAgaWYgKHBhcmVudENvbnRleHQudHJhY2VGbGFncyAmIGFwaV8xLlRyYWNlRmxhZ3MuU0FNUExFRCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZW1vdGVQYXJlbnRTYW1wbGVkLnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZW1vdGVQYXJlbnROb3RTYW1wbGVkLnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyZW50Q29udGV4dC50cmFjZUZsYWdzICYgYXBpXzEuVHJhY2VGbGFncy5TQU1QTEVEKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9jYWxQYXJlbnRTYW1wbGVkLnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fbG9jYWxQYXJlbnROb3RTYW1wbGVkLnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgUGFyZW50QmFzZWR7cm9vdD0ke3RoaXMuX3Jvb3QudG9TdHJpbmcoKX0sIHJlbW90ZVBhcmVudFNhbXBsZWQ9JHt0aGlzLl9yZW1vdGVQYXJlbnRTYW1wbGVkLnRvU3RyaW5nKCl9LCByZW1vdGVQYXJlbnROb3RTYW1wbGVkPSR7dGhpcy5fcmVtb3RlUGFyZW50Tm90U2FtcGxlZC50b1N0cmluZygpfSwgbG9jYWxQYXJlbnRTYW1wbGVkPSR7dGhpcy5fbG9jYWxQYXJlbnRTYW1wbGVkLnRvU3RyaW5nKCl9LCBsb2NhbFBhcmVudE5vdFNhbXBsZWQ9JHt0aGlzLl9sb2NhbFBhcmVudE5vdFNhbXBsZWQudG9TdHJpbmcoKX19YDtcbiAgICB9XG59XG5leHBvcnRzLlBhcmVudEJhc2VkU2FtcGxlciA9IFBhcmVudEJhc2VkU2FtcGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBhcmVudEJhc2VkU2FtcGxlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceIdRatioBasedSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nclass TraceIdRatioBasedSampler {\n    constructor(_ratio = 0) {\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n    }\n    shouldSample(context, traceId) {\n        let accumulation = 0;\n        for (let idx = 0; idx < traceId.length; idx++) {\n            accumulation += traceId.charCodeAt(idx);\n        }\n        const cmp = (accumulation % 100) / 100;\n        return {\n            decision: cmp < this._ratio\n                ? api_1.SamplingDecision.RECORD_AND_SAMPLED\n                : api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return `TraceIdRatioBased{${this._ratio}}`;\n    }\n    _normalize(ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    }\n}\nexports.TraceIdRatioBasedSampler = TraceIdRatioBasedSampler;\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXIuanM/MTFkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlSWRSYXRpb0Jhc2VkU2FtcGxlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbi8qKiBTYW1wbGVyIHRoYXQgc2FtcGxlcyBhIGdpdmVuIGZyYWN0aW9uIG9mIHRyYWNlcyBiYXNlZCBvZiB0cmFjZSBpZCBkZXRlcm1pbmlzdGljYWxseS4gKi9cbmNsYXNzIFRyYWNlSWRSYXRpb0Jhc2VkU2FtcGxlciB7XG4gICAgY29uc3RydWN0b3IoX3JhdGlvID0gMCkge1xuICAgICAgICB0aGlzLl9yYXRpbyA9IF9yYXRpbztcbiAgICAgICAgdGhpcy5fcmF0aW8gPSB0aGlzLl9ub3JtYWxpemUoX3JhdGlvKTtcbiAgICB9XG4gICAgc2hvdWxkU2FtcGxlKGNvbnRleHQsIHRyYWNlSWQpIHtcbiAgICAgICAgbGV0IGFjY3VtdWxhdGlvbiA9IDA7XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IHRyYWNlSWQubGVuZ3RoOyBpZHgrKykge1xuICAgICAgICAgICAgYWNjdW11bGF0aW9uICs9IHRyYWNlSWQuY2hhckNvZGVBdChpZHgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNtcCA9IChhY2N1bXVsYXRpb24gJSAxMDApIC8gMTAwO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVjaXNpb246IGNtcCA8IHRoaXMuX3JhdGlvXG4gICAgICAgICAgICAgICAgPyBhcGlfMS5TYW1wbGluZ0RlY2lzaW9uLlJFQ09SRF9BTkRfU0FNUExFRFxuICAgICAgICAgICAgICAgIDogYXBpXzEuU2FtcGxpbmdEZWNpc2lvbi5OT1RfUkVDT1JELFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBUcmFjZUlkUmF0aW9CYXNlZHske3RoaXMuX3JhdGlvfX1gO1xuICAgIH1cbiAgICBfbm9ybWFsaXplKHJhdGlvKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmF0aW8gIT09ICdudW1iZXInIHx8IGlzTmFOKHJhdGlvKSlcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gcmF0aW8gPj0gMSA/IDEgOiByYXRpbyA8PSAwID8gMCA6IHJhdGlvO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyID0gVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/environment.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/environment.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEnvironment = exports.DEFAULT_ENVIRONMENT = void 0;\nconst types_1 = __webpack_require__(/*! ../common/types */ \"./node_modules/@opentelemetry/core/build/src/common/types.js\");\nconst DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nconst ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_MAX_BATCH_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY_MILLIS',\n    'OTEL_SAMPLING_PROBABILITY',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nconst ENVIRONMENT_LISTS_KEYS = ['OTEL_NO_PATCH_MODULES'];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\n/**\n * Default environment variables\n */\nexports.DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_LOG_LEVEL: types_1.LogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SAMPLING_PROBABILITY: 1,\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: 1000,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 1000,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 1000,\n    OTEL_BSP_MAX_BATCH_SIZE: 512,\n    OTEL_BSP_SCHEDULE_DELAY_MILLIS: 5000,\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min = -Infinity, max = Infinity) {\n    if (typeof values[name] !== 'undefined') {\n        const value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator = DEFAULT_LIST_SEPARATOR) {\n    const givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(v => v.trim());\n    }\n}\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    const value = values[key];\n    switch (typeof value === 'string' ? value.toUpperCase() : value) {\n        case 'DEBUG':\n            environment[key] = types_1.LogLevel.DEBUG;\n            break;\n        case 'INFO':\n            environment[key] = types_1.LogLevel.INFO;\n            break;\n        case 'WARN':\n            environment[key] = types_1.LogLevel.WARN;\n            break;\n        case 'ERROR':\n            environment[key] = types_1.LogLevel.ERROR;\n            break;\n        default:\n            // do nothing\n            break;\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nfunction parseEnvironment(values) {\n    const environment = {};\n    for (const env in exports.DEFAULT_ENVIRONMENT) {\n        const key = env;\n        switch (key) {\n            case 'OTEL_SAMPLING_PROBABILITY':\n                parseNumber(key, environment, values, 0, 1);\n                break;\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    const value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\nexports.parseEnvironment = parseEnvironment;\n//# sourceMappingURL=environment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/environment.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/url.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/url.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUrlIgnored = exports.urlMatches = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\nexports.urlMatches = urlMatches;\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nfunction isUrlIgnored(url, ignoredUrls) {\n    if (!ignoredUrls) {\n        return false;\n    }\n    for (const ignoreUrl of ignoredUrls) {\n        if (urlMatches(url, ignoreUrl)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isUrlIgnored = isUrlIgnored;\n//# sourceMappingURL=url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvdXJsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3V0aWxzL3VybC5qcz80MzQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1VybElnbm9yZWQgPSBleHBvcnRzLnVybE1hdGNoZXMgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gdXJsTWF0Y2hlcyh1cmwsIHVybFRvTWF0Y2gpIHtcbiAgICBpZiAodHlwZW9mIHVybFRvTWF0Y2ggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB1cmwgPT09IHVybFRvTWF0Y2g7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gISF1cmwubWF0Y2godXJsVG9NYXRjaCk7XG4gICAgfVxufVxuZXhwb3J0cy51cmxNYXRjaGVzID0gdXJsTWF0Y2hlcztcbi8qKlxuICogQ2hlY2sgaWYge0BwYXJhbSB1cmx9IHNob3VsZCBiZSBpZ25vcmVkIHdoZW4gY29tcGFyaW5nIGFnYWluc3Qge0BwYXJhbSBpZ25vcmVkVXJsc31cbiAqIEBwYXJhbSB1cmxcbiAqIEBwYXJhbSBpZ25vcmVkVXJsc1xuICovXG5mdW5jdGlvbiBpc1VybElnbm9yZWQodXJsLCBpZ25vcmVkVXJscykge1xuICAgIGlmICghaWdub3JlZFVybHMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGlnbm9yZVVybCBvZiBpZ25vcmVkVXJscykge1xuICAgICAgICBpZiAodXJsTWF0Y2hlcyh1cmwsIGlnbm9yZVVybCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNVcmxJZ25vcmVkID0gaXNVcmxJZ25vcmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/url.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/wrap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/wrap.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapped = void 0;\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\nexports.isWrapped = isWrapped;\n//# sourceMappingURL=wrap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvd3JhcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy91dGlscy93cmFwLmpzP2QzZWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1dyYXBwZWQgPSB2b2lkIDA7XG4vKipcbiAqIENoZWNrcyBpZiBjZXJ0YWluIGZ1bmN0aW9uIGhhcyBiZWVuIGFscmVhZHkgd3JhcHBlZFxuICogQHBhcmFtIGZ1bmNcbiAqL1xuZnVuY3Rpb24gaXNXcmFwcGVkKGZ1bmMpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBmdW5jID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIHR5cGVvZiBmdW5jLl9fb3JpZ2luYWwgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgdHlwZW9mIGZ1bmMuX191bndyYXAgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgZnVuYy5fX3dyYXBwZWQgPT09IHRydWUpO1xufVxuZXhwb3J0cy5pc1dyYXBwZWQgPSBpc1dyYXBwZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/wrap.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/version.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.16.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdmVyc2lvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy92ZXJzaW9uLmpzP2VkMjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WRVJTSU9OID0gdm9pZCAwO1xuLy8gdGhpcyBpcyBhdXRvZ2VuZXJhdGVkIGZpbGUsIHNlZSBzY3JpcHRzL3ZlcnNpb24tdXBkYXRlLmpzXG5leHBvcnRzLlZFUlNJT04gPSAnMC4xNi4wJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorExporterBase = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Collector Exporter abstract base class\n */\nclass CollectorExporterBase {\n    /**\n     * @param config\n     */\n    constructor(config = {}) {\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        this._sendingPromises = [];\n        this.serviceName = this.getDefaultServiceName(config);\n        this.url = this.getDefaultUrl(config);\n        if (typeof config.hostname === 'string') {\n            this.hostname = config.hostname;\n        }\n        this.attributes = config.attributes;\n        this.logger = config.logger || new api_1.NoopLogger();\n        this.shutdown = this.shutdown.bind(this);\n        this._concurrencyLimit =\n            typeof config.concurrencyLimit === 'number'\n                ? config.concurrencyLimit\n                : Infinity;\n        // platform dependent\n        this.onInit(config);\n    }\n    /**\n     * Export items.\n     * @param items\n     * @param resultCallback\n     */\n    export(items, resultCallback) {\n        if (this._isShutdown) {\n            resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Exporter has been shutdown'),\n            });\n            return;\n        }\n        if (this._sendingPromises.length >= this._concurrencyLimit) {\n            resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Concurrent export limit reached'),\n            });\n            return;\n        }\n        this._export(items)\n            .then(() => {\n            resultCallback({ code: core_1.ExportResultCode.SUCCESS });\n        })\n            .catch((error) => {\n            resultCallback({ code: core_1.ExportResultCode.FAILED, error });\n        });\n    }\n    _export(items) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.logger.debug('items to be sent', items);\n                this.send(items, resolve, reject);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * Shutdown the exporter.\n     */\n    shutdown() {\n        if (this._isShutdown) {\n            this.logger.debug('shutdown already started');\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this.logger.debug('shutdown started');\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this.onShutdown();\n            })\n                .then(() => {\n                return Promise.all(this._sendingPromises);\n            })\n                .then(() => {\n                resolve();\n            })\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.CollectorExporterBase = CollectorExporterBase;\n//# sourceMappingURL=CollectorExporterBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9Db2xsZWN0b3JFeHBvcnRlckJhc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9Db2xsZWN0b3JFeHBvcnRlckJhc2UuanM/NTQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3RvckV4cG9ydGVyQmFzZSA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqXG4gKiBDb2xsZWN0b3IgRXhwb3J0ZXIgYWJzdHJhY3QgYmFzZSBjbGFzc1xuICovXG5jbGFzcyBDb2xsZWN0b3JFeHBvcnRlckJhc2Uge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBjb25maWdcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICB0aGlzLl9pc1NodXRkb3duID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgdGhpcy5fc2VuZGluZ1Byb21pc2VzID0gW107XG4gICAgICAgIHRoaXMuc2VydmljZU5hbWUgPSB0aGlzLmdldERlZmF1bHRTZXJ2aWNlTmFtZShjb25maWcpO1xuICAgICAgICB0aGlzLnVybCA9IHRoaXMuZ2V0RGVmYXVsdFVybChjb25maWcpO1xuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5ob3N0bmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRoaXMuaG9zdG5hbWUgPSBjb25maWcuaG9zdG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gY29uZmlnLmF0dHJpYnV0ZXM7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gY29uZmlnLmxvZ2dlciB8fCBuZXcgYXBpXzEuTm9vcExvZ2dlcigpO1xuICAgICAgICB0aGlzLnNodXRkb3duID0gdGhpcy5zaHV0ZG93bi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9jb25jdXJyZW5jeUxpbWl0ID1cbiAgICAgICAgICAgIHR5cGVvZiBjb25maWcuY29uY3VycmVuY3lMaW1pdCA9PT0gJ251bWJlcidcbiAgICAgICAgICAgICAgICA/IGNvbmZpZy5jb25jdXJyZW5jeUxpbWl0XG4gICAgICAgICAgICAgICAgOiBJbmZpbml0eTtcbiAgICAgICAgLy8gcGxhdGZvcm0gZGVwZW5kZW50XG4gICAgICAgIHRoaXMub25Jbml0KGNvbmZpZyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4cG9ydCBpdGVtcy5cbiAgICAgKiBAcGFyYW0gaXRlbXNcbiAgICAgKiBAcGFyYW0gcmVzdWx0Q2FsbGJhY2tcbiAgICAgKi9cbiAgICBleHBvcnQoaXRlbXMsIHJlc3VsdENhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NodXRkb3duKSB7XG4gICAgICAgICAgICByZXN1bHRDYWxsYmFjayh7XG4gICAgICAgICAgICAgICAgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuRkFJTEVELFxuICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgRXJyb3IoJ0V4cG9ydGVyIGhhcyBiZWVuIHNodXRkb3duJyksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fc2VuZGluZ1Byb21pc2VzLmxlbmd0aCA+PSB0aGlzLl9jb25jdXJyZW5jeUxpbWl0KSB7XG4gICAgICAgICAgICByZXN1bHRDYWxsYmFjayh7XG4gICAgICAgICAgICAgICAgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuRkFJTEVELFxuICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgRXJyb3IoJ0NvbmN1cnJlbnQgZXhwb3J0IGxpbWl0IHJlYWNoZWQnKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2V4cG9ydChpdGVtcylcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJlc3VsdENhbGxiYWNrKHsgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuU1VDQ0VTUyB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHJlc3VsdENhbGxiYWNrKHsgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuRkFJTEVELCBlcnJvciB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9leHBvcnQoaXRlbXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZGVidWcoJ2l0ZW1zIHRvIGJlIHNlbnQnLCBpdGVtcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZW5kKGl0ZW1zLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaHV0ZG93biB0aGUgZXhwb3J0ZXIuXG4gICAgICovXG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NodXRkb3duKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5kZWJ1Zygnc2h1dGRvd24gYWxyZWFkeSBzdGFydGVkJyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pc1NodXRkb3duID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5sb2dnZXIuZGVidWcoJ3NodXRkb3duIHN0YXJ0ZWQnKTtcbiAgICAgICAgdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9uU2h1dGRvd24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbCh0aGlzLl9zZW5kaW5nUHJvbWlzZXMpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbGxlY3RvckV4cG9ydGVyQmFzZSA9IENvbGxlY3RvckV4cG9ydGVyQmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbGxlY3RvckV4cG9ydGVyQmFzZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./CollectorExporterBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js\"), exports);\nexports.collectorTypes = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\nvar transform_1 = __webpack_require__(/*! ./transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nObject.defineProperty(exports, \"toCollectorExportTraceServiceRequest\", { enumerable: true, get: function () { return transform_1.toCollectorExportTraceServiceRequest; } });\nvar transformMetrics_1 = __webpack_require__(/*! ./transformMetrics */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\");\nObject.defineProperty(exports, \"toCollectorExportMetricServiceRequest\", { enumerable: true, get: function () { return transformMetrics_1.toCollectorExportMetricServiceRequest; } });\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3IvYnVpbGQvc3JjL2luZGV4LmpzP2MzZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbGxlY3RvckV4cG9ydGVyQmFzZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGxhdGZvcm1cIiksIGV4cG9ydHMpO1xuZXhwb3J0cy5jb2xsZWN0b3JUeXBlcyA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xudmFyIHRyYW5zZm9ybV8xID0gcmVxdWlyZShcIi4vdHJhbnNmb3JtXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9Db2xsZWN0b3JFeHBvcnRUcmFjZVNlcnZpY2VSZXF1ZXN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0cmFuc2Zvcm1fMS50b0NvbGxlY3RvckV4cG9ydFRyYWNlU2VydmljZVJlcXVlc3Q7IH0gfSk7XG52YXIgdHJhbnNmb3JtTWV0cmljc18xID0gcmVxdWlyZShcIi4vdHJhbnNmb3JtTWV0cmljc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvQ29sbGVjdG9yRXhwb3J0TWV0cmljU2VydmljZVJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRyYW5zZm9ybU1ldHJpY3NfMS50b0NvbGxlY3RvckV4cG9ydE1ldHJpY1NlcnZpY2VSZXF1ZXN0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorExporterBrowserBase = void 0;\nconst CollectorExporterBase_1 = __webpack_require__(/*! ../../CollectorExporterBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\");\nconst util_1 = __webpack_require__(/*! ../../util */ \"./node_modules/@opentelemetry/exporter-collector/build/src/util.js\");\nconst util_2 = __webpack_require__(/*! ./util */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js\");\n/**\n * Collector Metric Exporter abstract base class\n */\nclass CollectorExporterBrowserBase extends CollectorExporterBase_1.CollectorExporterBase {\n    /**\n     * @param config\n     */\n    constructor(config = {}) {\n        super(config);\n        this._useXHR = false;\n        this._useXHR =\n            !!config.headers || typeof navigator.sendBeacon !== 'function';\n        if (this._useXHR) {\n            this._headers = util_1.parseHeaders(config.headers, this.logger);\n        }\n        else {\n            this._headers = {};\n        }\n    }\n    onInit() {\n        window.addEventListener('unload', this.shutdown);\n    }\n    onShutdown() {\n        window.removeEventListener('unload', this.shutdown);\n    }\n    send(items, onSuccess, onError) {\n        if (this._isShutdown) {\n            this.logger.debug('Shutdown already started. Cannot send objects');\n            return;\n        }\n        const serviceRequest = this.convert(items);\n        const body = JSON.stringify(serviceRequest);\n        const promise = new Promise(resolve => {\n            const _onSuccess = () => {\n                onSuccess();\n                _onFinish();\n            };\n            const _onError = (error) => {\n                onError(error);\n                _onFinish();\n            };\n            const _onFinish = () => {\n                resolve();\n                const index = this._sendingPromises.indexOf(promise);\n                this._sendingPromises.splice(index, 1);\n            };\n            if (this._useXHR) {\n                util_2.sendWithXhr(body, this.url, this._headers, this.logger, _onSuccess, _onError);\n            }\n            else {\n                util_2.sendWithBeacon(body, this.url, this.logger, _onSuccess, _onError);\n            }\n        });\n        this._sendingPromises.push(promise);\n    }\n}\nexports.CollectorExporterBrowserBase = CollectorExporterBrowserBase;\n//# sourceMappingURL=CollectorExporterBrowserBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UuanM/ZDAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UgPSB2b2lkIDA7XG5jb25zdCBDb2xsZWN0b3JFeHBvcnRlckJhc2VfMSA9IHJlcXVpcmUoXCIuLi8uLi9Db2xsZWN0b3JFeHBvcnRlckJhc2VcIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbmNvbnN0IHV0aWxfMiA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG4vKipcbiAqIENvbGxlY3RvciBNZXRyaWMgRXhwb3J0ZXIgYWJzdHJhY3QgYmFzZSBjbGFzc1xuICovXG5jbGFzcyBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlIGV4dGVuZHMgQ29sbGVjdG9yRXhwb3J0ZXJCYXNlXzEuQ29sbGVjdG9yRXhwb3J0ZXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29uZmlnXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgdGhpcy5fdXNlWEhSID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3VzZVhIUiA9XG4gICAgICAgICAgICAhIWNvbmZpZy5oZWFkZXJzIHx8IHR5cGVvZiBuYXZpZ2F0b3Iuc2VuZEJlYWNvbiAhPT0gJ2Z1bmN0aW9uJztcbiAgICAgICAgaWYgKHRoaXMuX3VzZVhIUikge1xuICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IHV0aWxfMS5wYXJzZUhlYWRlcnMoY29uZmlnLmhlYWRlcnMsIHRoaXMubG9nZ2VyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2hlYWRlcnMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkluaXQoKSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd1bmxvYWQnLCB0aGlzLnNodXRkb3duKTtcbiAgICB9XG4gICAgb25TaHV0ZG93bigpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3VubG9hZCcsIHRoaXMuc2h1dGRvd24pO1xuICAgIH1cbiAgICBzZW5kKGl0ZW1zLCBvblN1Y2Nlc3MsIG9uRXJyb3IpIHtcbiAgICAgICAgaWYgKHRoaXMuX2lzU2h1dGRvd24pIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdTaHV0ZG93biBhbHJlYWR5IHN0YXJ0ZWQuIENhbm5vdCBzZW5kIG9iamVjdHMnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZXJ2aWNlUmVxdWVzdCA9IHRoaXMuY29udmVydChpdGVtcyk7XG4gICAgICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeShzZXJ2aWNlUmVxdWVzdCk7XG4gICAgICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9vblN1Y2Nlc3MgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XG4gICAgICAgICAgICAgICAgX29uRmluaXNoKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgX29uRXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICBvbkVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICBfb25GaW5pc2goKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBfb25GaW5pc2ggPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fc2VuZGluZ1Byb21pc2VzLmluZGV4T2YocHJvbWlzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VuZGluZ1Byb21pc2VzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHRoaXMuX3VzZVhIUikge1xuICAgICAgICAgICAgICAgIHV0aWxfMi5zZW5kV2l0aFhocihib2R5LCB0aGlzLnVybCwgdGhpcy5faGVhZGVycywgdGhpcy5sb2dnZXIsIF9vblN1Y2Nlc3MsIF9vbkVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHV0aWxfMi5zZW5kV2l0aEJlYWNvbihib2R5LCB0aGlzLnVybCwgdGhpcy5sb2dnZXIsIF9vblN1Y2Nlc3MsIF9vbkVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3NlbmRpbmdQcm9taXNlcy5wdXNoKHByb21pc2UpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZSA9IENvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorMetricExporter = void 0;\nconst CollectorExporterBrowserBase_1 = __webpack_require__(/*! ./CollectorExporterBrowserBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\");\nconst transformMetrics_1 = __webpack_require__(/*! ../../transformMetrics */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\");\nconst DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/metrics';\nconst DEFAULT_SERVICE_NAME = 'collector-metric-exporter';\n/**\n * Collector Metric Exporter for Web\n */\nclass CollectorMetricExporter extends CollectorExporterBrowserBase_1.CollectorExporterBrowserBase {\n    constructor() {\n        super(...arguments);\n        // Converts time to nanoseconds\n        this._startTime = new Date().getTime() * 1000000;\n    }\n    convert(metrics) {\n        return transformMetrics_1.toCollectorExportMetricServiceRequest(metrics, this._startTime, this);\n    }\n    getDefaultUrl(config) {\n        return config.url || DEFAULT_COLLECTOR_URL;\n    }\n    getDefaultServiceName(config) {\n        return config.serviceName || DEFAULT_SERVICE_NAME;\n    }\n}\nexports.CollectorMetricExporter = CollectorMetricExporter;\n//# sourceMappingURL=CollectorMetricExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3Rvck1ldHJpY0V4cG9ydGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2V4cG9ydGVyLWNvbGxlY3Rvci9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9Db2xsZWN0b3JNZXRyaWNFeHBvcnRlci5qcz81OTJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXzEgPSByZXF1aXJlKFwiLi9Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXCIpO1xuY29uc3QgdHJhbnNmb3JtTWV0cmljc18xID0gcmVxdWlyZShcIi4uLy4uL3RyYW5zZm9ybU1ldHJpY3NcIik7XG5jb25zdCBERUZBVUxUX0NPTExFQ1RPUl9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo1NTY4MS92MS9tZXRyaWNzJztcbmNvbnN0IERFRkFVTFRfU0VSVklDRV9OQU1FID0gJ2NvbGxlY3Rvci1tZXRyaWMtZXhwb3J0ZXInO1xuLyoqXG4gKiBDb2xsZWN0b3IgTWV0cmljIEV4cG9ydGVyIGZvciBXZWJcbiAqL1xuY2xhc3MgQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXIgZXh0ZW5kcyBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXzEuQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIC8vIENvbnZlcnRzIHRpbWUgdG8gbmFub3NlY29uZHNcbiAgICAgICAgdGhpcy5fc3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgKiAxMDAwMDAwO1xuICAgIH1cbiAgICBjb252ZXJ0KG1ldHJpY3MpIHtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybU1ldHJpY3NfMS50b0NvbGxlY3RvckV4cG9ydE1ldHJpY1NlcnZpY2VSZXF1ZXN0KG1ldHJpY3MsIHRoaXMuX3N0YXJ0VGltZSwgdGhpcyk7XG4gICAgfVxuICAgIGdldERlZmF1bHRVcmwoY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBjb25maWcudXJsIHx8IERFRkFVTFRfQ09MTEVDVE9SX1VSTDtcbiAgICB9XG4gICAgZ2V0RGVmYXVsdFNlcnZpY2VOYW1lKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gY29uZmlnLnNlcnZpY2VOYW1lIHx8IERFRkFVTFRfU0VSVklDRV9OQU1FO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXIgPSBDb2xsZWN0b3JNZXRyaWNFeHBvcnRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbGxlY3Rvck1ldHJpY0V4cG9ydGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorTraceExporter = void 0;\nconst CollectorExporterBrowserBase_1 = __webpack_require__(/*! ./CollectorExporterBrowserBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\");\nconst transform_1 = __webpack_require__(/*! ../../transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nconst DEFAULT_SERVICE_NAME = 'collector-trace-exporter';\nconst DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/trace';\n/**\n * Collector Trace Exporter for Web\n */\nclass CollectorTraceExporter extends CollectorExporterBrowserBase_1.CollectorExporterBrowserBase {\n    convert(spans) {\n        return transform_1.toCollectorExportTraceServiceRequest(spans, this, true);\n    }\n    getDefaultUrl(config) {\n        return config.url || DEFAULT_COLLECTOR_URL;\n    }\n    getDefaultServiceName(config) {\n        return config.serviceName || DEFAULT_SERVICE_NAME;\n    }\n}\nexports.CollectorTraceExporter = CollectorTraceExporter;\n//# sourceMappingURL=CollectorTraceExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvclRyYWNlRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvclRyYWNlRXhwb3J0ZXIuanM/MDY3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3RvclRyYWNlRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXzEgPSByZXF1aXJlKFwiLi9Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXCIpO1xuY29uc3QgdHJhbnNmb3JtXzEgPSByZXF1aXJlKFwiLi4vLi4vdHJhbnNmb3JtXCIpO1xuY29uc3QgREVGQVVMVF9TRVJWSUNFX05BTUUgPSAnY29sbGVjdG9yLXRyYWNlLWV4cG9ydGVyJztcbmNvbnN0IERFRkFVTFRfQ09MTEVDVE9SX1VSTCA9ICdodHRwOi8vbG9jYWxob3N0OjU1NjgxL3YxL3RyYWNlJztcbi8qKlxuICogQ29sbGVjdG9yIFRyYWNlIEV4cG9ydGVyIGZvciBXZWJcbiAqL1xuY2xhc3MgQ29sbGVjdG9yVHJhY2VFeHBvcnRlciBleHRlbmRzIENvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2VfMS5Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlIHtcbiAgICBjb252ZXJ0KHNwYW5zKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1fMS50b0NvbGxlY3RvckV4cG9ydFRyYWNlU2VydmljZVJlcXVlc3Qoc3BhbnMsIHRoaXMsIHRydWUpO1xuICAgIH1cbiAgICBnZXREZWZhdWx0VXJsKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gY29uZmlnLnVybCB8fCBERUZBVUxUX0NPTExFQ1RPUl9VUkw7XG4gICAgfVxuICAgIGdldERlZmF1bHRTZXJ2aWNlTmFtZShjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5zZXJ2aWNlTmFtZSB8fCBERUZBVUxUX1NFUlZJQ0VfTkFNRTtcbiAgICB9XG59XG5leHBvcnRzLkNvbGxlY3RvclRyYWNlRXhwb3J0ZXIgPSBDb2xsZWN0b3JUcmFjZUV4cG9ydGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29sbGVjdG9yVHJhY2VFeHBvcnRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./CollectorTraceExporter */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CollectorMetricExporter */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2V4cG9ydGVyLWNvbGxlY3Rvci9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz9mYjQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db2xsZWN0b3JUcmFjZUV4cG9ydGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db2xsZWN0b3JNZXRyaWNFeHBvcnRlclwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendWithXhr = exports.sendWithBeacon = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst collectorTypes = __webpack_require__(/*! ../../types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param onSuccess\n * @param onError\n */\nfunction sendWithBeacon(body, url, logger, onSuccess, onError) {\n    if (navigator.sendBeacon(url, body)) {\n        logger.debug('sendBeacon - can send', body);\n        onSuccess();\n    }\n    else {\n        const error = new collectorTypes.CollectorExporterError(`sendBeacon - cannot send ${body}`);\n        onError(error);\n    }\n}\nexports.sendWithBeacon = sendWithBeacon;\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param onSuccess\n * @param onError\n */\nfunction sendWithXhr(body, url, headers, logger, onSuccess, onError) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    Object.entries(headers).forEach(([k, v]) => {\n        xhr.setRequestHeader(k, v);\n    });\n    xhr.send(body);\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                logger.debug('xhr success', body);\n                onSuccess();\n            }\n            else {\n                const error = new collectorTypes.CollectorExporterError(`Failed to export with XHR (status: ${xhr.status})`, xhr.status);\n                onError(error);\n            }\n        }\n    };\n}\nexports.sendWithXhr = sendWithXhr;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL3V0aWwuanM/N2M3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2VuZFdpdGhYaHIgPSBleHBvcnRzLnNlbmRXaXRoQmVhY29uID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmNvbnN0IGNvbGxlY3RvclR5cGVzID0gcmVxdWlyZShcIi4uLy4uL3R5cGVzXCIpO1xuLyoqXG4gKiBTZW5kIG1ldHJpY3Mvc3BhbnMgdXNpbmcgYnJvd3NlciBuYXZpZ2F0b3Iuc2VuZEJlYWNvblxuICogQHBhcmFtIGJvZHlcbiAqIEBwYXJhbSBvblN1Y2Nlc3NcbiAqIEBwYXJhbSBvbkVycm9yXG4gKi9cbmZ1bmN0aW9uIHNlbmRXaXRoQmVhY29uKGJvZHksIHVybCwgbG9nZ2VyLCBvblN1Y2Nlc3MsIG9uRXJyb3IpIHtcbiAgICBpZiAobmF2aWdhdG9yLnNlbmRCZWFjb24odXJsLCBib2R5KSkge1xuICAgICAgICBsb2dnZXIuZGVidWcoJ3NlbmRCZWFjb24gLSBjYW4gc2VuZCcsIGJvZHkpO1xuICAgICAgICBvblN1Y2Nlc3MoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IGNvbGxlY3RvclR5cGVzLkNvbGxlY3RvckV4cG9ydGVyRXJyb3IoYHNlbmRCZWFjb24gLSBjYW5ub3Qgc2VuZCAke2JvZHl9YCk7XG4gICAgICAgIG9uRXJyb3IoZXJyb3IpO1xuICAgIH1cbn1cbmV4cG9ydHMuc2VuZFdpdGhCZWFjb24gPSBzZW5kV2l0aEJlYWNvbjtcbi8qKlxuICogZnVuY3Rpb24gdG8gc2VuZCBtZXRyaWNzL3NwYW5zIHVzaW5nIGJyb3dzZXIgWE1MSHR0cFJlcXVlc3RcbiAqICAgICB1c2VkIHdoZW4gbmF2aWdhdG9yLnNlbmRCZWFjb24gaXMgbm90IGF2YWlsYWJsZVxuICogQHBhcmFtIGJvZHlcbiAqIEBwYXJhbSBvblN1Y2Nlc3NcbiAqIEBwYXJhbSBvbkVycm9yXG4gKi9cbmZ1bmN0aW9uIHNlbmRXaXRoWGhyKGJvZHksIHVybCwgaGVhZGVycywgbG9nZ2VyLCBvblN1Y2Nlc3MsIG9uRXJyb3IpIHtcbiAgICBjb25zdCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4aHIub3BlbignUE9TVCcsIHVybCk7XG4gICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgT2JqZWN0LmVudHJpZXMoaGVhZGVycykuZm9yRWFjaCgoW2ssIHZdKSA9PiB7XG4gICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKGssIHYpO1xuICAgIH0pO1xuICAgIHhoci5zZW5kKGJvZHkpO1xuICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gWE1MSHR0cFJlcXVlc3QuRE9ORSkge1xuICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPj0gMjAwICYmIHhoci5zdGF0dXMgPD0gMjk5KSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCd4aHIgc3VjY2VzcycsIGJvZHkpO1xuICAgICAgICAgICAgICAgIG9uU3VjY2VzcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgY29sbGVjdG9yVHlwZXMuQ29sbGVjdG9yRXhwb3J0ZXJFcnJvcihgRmFpbGVkIHRvIGV4cG9ydCB3aXRoIFhIUiAoc3RhdHVzOiAke3hoci5zdGF0dXN9KWAsIHhoci5zdGF0dXMpO1xuICAgICAgICAgICAgICAgIG9uRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1cbmV4cG9ydHMuc2VuZFdpdGhYaHIgPSBzZW5kV2l0aFhocjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/transform.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/transform.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.groupSpansByResourceAndLibrary = exports.toCollectorExportTraceServiceRequest = exports.toCollectorTraceState = exports.toCollectorKind = exports.toCollectorResource = exports.toCollectorStatus = exports.toCollectorSpan = exports.toCollectorEvents = exports.toCollectorAnyValue = exports.toCollectorAttributeKeyValue = exports.toCollectorKeyValueList = exports.toCollectorArrayValue = exports.toCollectorAttributes = void 0;\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\n/**\n * Converts attributes to KeyValue array\n * @param attributes\n */\nfunction toCollectorAttributes(attributes) {\n    return Object.keys(attributes).map(key => {\n        return toCollectorAttributeKeyValue(key, attributes[key]);\n    });\n}\nexports.toCollectorAttributes = toCollectorAttributes;\n/**\n * Converts array of unknown value to ArrayValue\n * @param values\n */\nfunction toCollectorArrayValue(values) {\n    return {\n        values: values.map(value => toCollectorAnyValue(value)),\n    };\n}\nexports.toCollectorArrayValue = toCollectorArrayValue;\n/**\n * Converts attributes to KeyValueList\n * @param attributes\n */\nfunction toCollectorKeyValueList(attributes) {\n    return {\n        values: toCollectorAttributes(attributes),\n    };\n}\nexports.toCollectorKeyValueList = toCollectorKeyValueList;\n/**\n * Converts key and unknown value to KeyValue\n * @param value event value\n */\nfunction toCollectorAttributeKeyValue(key, value) {\n    const anyValue = toCollectorAnyValue(value);\n    return {\n        key,\n        value: anyValue,\n    };\n}\nexports.toCollectorAttributeKeyValue = toCollectorAttributeKeyValue;\n/**\n * Converts unknown value to AnyValue\n * @param value\n */\nfunction toCollectorAnyValue(value) {\n    const anyValue = {};\n    if (typeof value === 'string') {\n        anyValue.stringValue = value;\n    }\n    else if (typeof value === 'boolean') {\n        anyValue.boolValue = value;\n    }\n    else if (typeof value === 'number') {\n        // all numbers will be treated as double\n        anyValue.doubleValue = value;\n    }\n    else if (Array.isArray(value)) {\n        anyValue.arrayValue = toCollectorArrayValue(value);\n    }\n    else if (value) {\n        anyValue.kvlistValue = toCollectorKeyValueList(value);\n    }\n    return anyValue;\n}\nexports.toCollectorAnyValue = toCollectorAnyValue;\n/**\n *\n * Converts events\n * @param events array of events\n */\nfunction toCollectorEvents(timedEvents) {\n    return timedEvents.map(timedEvent => {\n        const timeUnixNano = core.hrTimeToNanoseconds(timedEvent.time);\n        const name = timedEvent.name;\n        const attributes = toCollectorAttributes(timedEvent.attributes || {});\n        const droppedAttributesCount = 0;\n        const protoEvent = {\n            timeUnixNano,\n            name,\n            attributes,\n            droppedAttributesCount,\n        };\n        return protoEvent;\n    });\n}\nexports.toCollectorEvents = toCollectorEvents;\n/**\n * Converts links\n * @param span\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorLinks(span, useHex) {\n    return span.links.map((link) => {\n        const protoLink = {\n            traceId: useHex\n                ? link.context.traceId\n                : core.hexToBase64(link.context.traceId),\n            spanId: useHex\n                ? link.context.spanId\n                : core.hexToBase64(link.context.spanId),\n            attributes: toCollectorAttributes(link.attributes || {}),\n            droppedAttributesCount: 0,\n        };\n        return protoLink;\n    });\n}\n/**\n * Converts span\n * @param span\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorSpan(span, useHex) {\n    return {\n        traceId: useHex\n            ? span.spanContext.traceId\n            : core.hexToBase64(span.spanContext.traceId),\n        spanId: useHex\n            ? span.spanContext.spanId\n            : core.hexToBase64(span.spanContext.spanId),\n        parentSpanId: span.parentSpanId\n            ? useHex\n                ? span.parentSpanId\n                : core.hexToBase64(span.parentSpanId)\n            : undefined,\n        traceState: toCollectorTraceState(span.spanContext.traceState),\n        name: span.name,\n        kind: toCollectorKind(span.kind),\n        startTimeUnixNano: core.hrTimeToNanoseconds(span.startTime),\n        endTimeUnixNano: core.hrTimeToNanoseconds(span.endTime),\n        attributes: toCollectorAttributes(span.attributes),\n        droppedAttributesCount: 0,\n        events: toCollectorEvents(span.events),\n        droppedEventsCount: 0,\n        status: toCollectorStatus(span.status),\n        links: toCollectorLinks(span, useHex),\n        droppedLinksCount: 0,\n    };\n}\nexports.toCollectorSpan = toCollectorSpan;\n/**\n * Converts status\n * @param status\n */\nfunction toCollectorStatus(status) {\n    const spanStatus = {\n        code: status.code,\n    };\n    if (typeof status.message !== 'undefined') {\n        spanStatus.message = status.message;\n    }\n    return spanStatus;\n}\nexports.toCollectorStatus = toCollectorStatus;\n/**\n * Converts resource\n * @param resource\n * @param additionalAttributes\n */\nfunction toCollectorResource(resource, additionalAttributes = {}) {\n    const attr = Object.assign({}, additionalAttributes, resource ? resource.attributes : {});\n    const resourceProto = {\n        attributes: toCollectorAttributes(attr),\n        droppedAttributesCount: 0,\n    };\n    return resourceProto;\n}\nexports.toCollectorResource = toCollectorResource;\n/**\n * Converts span kind\n * @param kind\n */\nfunction toCollectorKind(kind) {\n    const collectorKind = types_1.COLLECTOR_SPAN_KIND_MAPPING[kind];\n    return typeof collectorKind === 'number'\n        ? collectorKind\n        : types_1.opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_UNSPECIFIED;\n}\nexports.toCollectorKind = toCollectorKind;\n/**\n * Converts traceState\n * @param traceState\n */\nfunction toCollectorTraceState(traceState) {\n    if (!traceState)\n        return undefined;\n    return traceState.serialize();\n}\nexports.toCollectorTraceState = toCollectorTraceState;\n/**\n * Prepares trace service request to be sent to collector\n * @param spans spans\n * @param collectorExporterBase\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorExportTraceServiceRequest(spans, collectorTraceExporterBase, useHex) {\n    const groupedSpans = groupSpansByResourceAndLibrary(spans);\n    const additionalAttributes = Object.assign({}, collectorTraceExporterBase.attributes, {\n        'service.name': collectorTraceExporterBase.serviceName,\n    });\n    return {\n        resourceSpans: toCollectorResourceSpans(groupedSpans, additionalAttributes, useHex),\n    };\n}\nexports.toCollectorExportTraceServiceRequest = toCollectorExportTraceServiceRequest;\n/**\n * Takes an array of spans and groups them by resource and instrumentation\n * library\n * @param spans spans\n */\nfunction groupSpansByResourceAndLibrary(spans) {\n    return spans.reduce((spanMap, span) => {\n        //group by resource\n        let resourceSpans = spanMap.get(span.resource);\n        if (!resourceSpans) {\n            resourceSpans = new Map();\n            spanMap.set(span.resource, resourceSpans);\n        }\n        //group by instrumentation library\n        let libSpans = resourceSpans.get(span.instrumentationLibrary);\n        if (!libSpans) {\n            libSpans = new Array();\n            resourceSpans.set(span.instrumentationLibrary, libSpans);\n        }\n        libSpans.push(span);\n        return spanMap;\n    }, new Map());\n}\nexports.groupSpansByResourceAndLibrary = groupSpansByResourceAndLibrary;\n/**\n * Convert to InstrumentationLibrarySpans\n * @param instrumentationLibrary\n * @param spans\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorInstrumentationLibrarySpans(instrumentationLibrary, spans, useHex) {\n    return {\n        spans: spans.map(span => toCollectorSpan(span, useHex)),\n        instrumentationLibrary,\n    };\n}\n/**\n * Returns a list of resource spans which will be exported to the collector\n * @param groupedSpans\n * @param baseAttributes\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorResourceSpans(groupedSpans, baseAttributes, useHex) {\n    return Array.from(groupedSpans, ([resource, libSpans]) => {\n        return {\n            resource: toCollectorResource(resource, baseAttributes),\n            instrumentationLibrarySpans: Array.from(libSpans, ([instrumentationLibrary, spans]) => toCollectorInstrumentationLibrarySpans(instrumentationLibrary, spans, useHex)),\n        };\n    });\n}\n//# sourceMappingURL=transform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.groupMetricsByResourceAndLibrary = exports.toCollectorExportMetricServiceRequest = exports.toCollectorMetric = exports.toHistogramPoint = exports.toDataPoint = exports.toAggregationTemporality = exports.toCollectorLabels = void 0;\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst metrics_1 = __webpack_require__(/*! @opentelemetry/metrics */ \"./node_modules/@opentelemetry/metrics/build/src/index.js\");\nconst transform_1 = __webpack_require__(/*! ./transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\n/**\n * Converts labels\n * @param labels\n */\nfunction toCollectorLabels(labels) {\n    return Object.entries(labels).map(([key, value]) => {\n        return { key, value: String(value) };\n    });\n}\nexports.toCollectorLabels = toCollectorLabels;\n/**\n * Given a MetricDescriptor, return its temporality in a compatible format with the collector\n * @param descriptor\n */\nfunction toAggregationTemporality(metric) {\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.COUNTER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_COUNTER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_DELTA;\n    }\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_SUM_OBSERVER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_CUMULATIVE;\n    }\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.VALUE_OBSERVER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_UNSPECIFIED;\n    }\n    // until spec is resolved keep it as unspecified\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.VALUE_RECORDER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_CUMULATIVE;\n    }\n    return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n        .AGGREGATION_TEMPORALITY_UNSPECIFIED;\n}\nexports.toAggregationTemporality = toAggregationTemporality;\n/**\n * Returns an DataPoint which can have integers or doublle values\n * @param metric\n * @param startTime\n */\nfunction toDataPoint(metric, startTime) {\n    return {\n        labels: toCollectorLabels(metric.labels),\n        value: metric.aggregator.toPoint().value,\n        startTimeUnixNano: startTime,\n        timeUnixNano: core.hrTimeToNanoseconds(metric.aggregator.toPoint().timestamp),\n    };\n}\nexports.toDataPoint = toDataPoint;\n/**\n * Returns a HistogramPoint to the collector\n * @param metric\n * @param startTime\n */\nfunction toHistogramPoint(metric, startTime) {\n    const { value, timestamp } = metric.aggregator.toPoint();\n    return {\n        labels: toCollectorLabels(metric.labels),\n        sum: value.sum,\n        count: value.count,\n        startTimeUnixNano: startTime,\n        timeUnixNano: core.hrTimeToNanoseconds(timestamp),\n        bucketCounts: value.buckets.counts,\n        explicitBounds: value.buckets.boundaries,\n    };\n}\nexports.toHistogramPoint = toHistogramPoint;\n/**\n * Converts a metric to be compatible with the collector\n * @param metric\n * @param startTime start time in nanoseconds\n */\nfunction toCollectorMetric(metric, startTime) {\n    const metricCollector = {\n        name: metric.descriptor.name,\n        description: metric.descriptor.description,\n        unit: metric.descriptor.unit,\n    };\n    if (metric.aggregator.kind === metrics_1.AggregatorKind.SUM ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_SUM_OBSERVER) {\n        const result = {\n            dataPoints: [toDataPoint(metric, startTime)],\n            isMonotonic: metric.descriptor.metricKind === metrics_1.MetricKind.COUNTER ||\n                metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER,\n            aggregationTemporality: toAggregationTemporality(metric),\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intSum = result;\n        }\n        else {\n            metricCollector.doubleSum = result;\n        }\n    }\n    else if (metric.aggregator.kind === metrics_1.AggregatorKind.LAST_VALUE) {\n        const result = {\n            dataPoints: [toDataPoint(metric, startTime)],\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intGauge = result;\n        }\n        else {\n            metricCollector.doubleGauge = result;\n        }\n    }\n    else if (metric.aggregator.kind === metrics_1.AggregatorKind.HISTOGRAM) {\n        const result = {\n            dataPoints: [toHistogramPoint(metric, startTime)],\n            aggregationTemporality: toAggregationTemporality(metric),\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intHistogram = result;\n        }\n        else {\n            metricCollector.doubleHistogram = result;\n        }\n    }\n    return metricCollector;\n}\nexports.toCollectorMetric = toCollectorMetric;\n/**\n * Prepares metric service request to be sent to collector\n * @param metrics metrics\n * @param startTime start time of the metric in nanoseconds\n * @param collectorMetricExporterBase\n */\nfunction toCollectorExportMetricServiceRequest(metrics, startTime, collectorExporterBase) {\n    const groupedMetrics = groupMetricsByResourceAndLibrary(metrics);\n    const additionalAttributes = Object.assign({}, collectorExporterBase.attributes, {\n        'service.name': collectorExporterBase.serviceName,\n    });\n    return {\n        resourceMetrics: toCollectorResourceMetrics(groupedMetrics, additionalAttributes, startTime),\n    };\n}\nexports.toCollectorExportMetricServiceRequest = toCollectorExportMetricServiceRequest;\n/**\n * Takes an array of metrics and groups them by resource and instrumentation\n * library\n * @param metrics metrics\n */\nfunction groupMetricsByResourceAndLibrary(metrics) {\n    return metrics.reduce((metricMap, metric) => {\n        //group by resource\n        let resourceMetrics = metricMap.get(metric.resource);\n        if (!resourceMetrics) {\n            resourceMetrics = new Map();\n            metricMap.set(metric.resource, resourceMetrics);\n        }\n        //group by instrumentation library\n        let libMetrics = resourceMetrics.get(metric.instrumentationLibrary);\n        if (!libMetrics) {\n            libMetrics = new Array();\n            resourceMetrics.set(metric.instrumentationLibrary, libMetrics);\n        }\n        libMetrics.push(metric);\n        return metricMap;\n    }, new Map());\n}\nexports.groupMetricsByResourceAndLibrary = groupMetricsByResourceAndLibrary;\n/**\n * Convert to InstrumentationLibraryMetrics\n * @param instrumentationLibrary\n * @param metrics\n * @param startTime\n */\nfunction toCollectorInstrumentationLibraryMetrics(instrumentationLibrary, metrics, startTime) {\n    return {\n        metrics: metrics.map(metric => toCollectorMetric(metric, startTime)),\n        instrumentationLibrary,\n    };\n}\n/**\n * Returns a list of resource metrics which will be exported to the collector\n * @param groupedSpans\n * @param baseAttributes\n */\nfunction toCollectorResourceMetrics(groupedMetrics, baseAttributes, startTime) {\n    return Array.from(groupedMetrics, ([resource, libMetrics]) => {\n        return {\n            resource: transform_1.toCollectorResource(resource, baseAttributes),\n            instrumentationLibraryMetrics: Array.from(libMetrics, ([instrumentationLibrary, metrics]) => toCollectorInstrumentationLibraryMetrics(instrumentationLibrary, metrics, startTime)),\n        };\n    });\n}\n//# sourceMappingURL=transformMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/types.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.COLLECTOR_SPAN_KIND_MAPPING = exports.CollectorExporterError = exports.opentelemetryProto = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/* eslint-disable @typescript-eslint/no-namespace */\nvar opentelemetryProto;\n(function (opentelemetryProto) {\n    let metrics;\n    (function (metrics) {\n        let v1;\n        (function (v1) {\n            let AggregationTemporality;\n            (function (AggregationTemporality) {\n                // UNSPECIFIED is the default AggregationTemporality, it MUST not be used.\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_UNSPECIFIED\"] = 0] = \"AGGREGATION_TEMPORALITY_UNSPECIFIED\";\n                // DELTA is an AggregationTemporality for a metric aggregator which reports\n                // changes since last report time. Successive metrics contain aggregation of\n                // values from continuous and non-overlapping intervals.\n                //\n                // The values for a DELTA metric are based only on the time interval\n                // associated with one measurement cycle. There is no dependency on\n                // previous measurements like is the case for CUMULATIVE metrics.\n                //\n                // For example, consider a system measuring the number of requests that\n                // it receives and reports the sum of these requests every second as a\n                // DELTA metric:\n                //\n                //   1. The system starts receiving at time=t_0.\n                //   2. A request is received, the system measures 1 request.\n                //   3. A request is received, the system measures 1 request.\n                //   4. A request is received, the system measures 1 request.\n                //   5. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+1 with a value of 3.\n                //   6. A request is received, the system measures 1 request.\n                //   7. A request is received, the system measures 1 request.\n                //   8. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0+1 to\n                //      t_0+2 with a value of 2.\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_DELTA\"] = 1] = \"AGGREGATION_TEMPORALITY_DELTA\";\n                // CUMULATIVE is an AggregationTemporality for a metric aggregator which\n                // reports changes since a fixed start time. This means that current values\n                // of a CUMULATIVE metric depend on all previous measurements since the\n                // start time. Because of this, the sender is required to retain this state\n                // in some form. If this state is lost or invalidated, the CUMULATIVE metric\n                // values MUST be reset and a new fixed start time following the last\n                // reported measurement time sent MUST be used.\n                //\n                // For example, consider a system measuring the number of requests that\n                // it receives and reports the sum of these requests every second as a\n                // CUMULATIVE metric:\n                //\n                //   1. The system starts receiving at time=t_0.\n                //   2. A request is received, the system measures 1 request.\n                //   3. A request is received, the system measures 1 request.\n                //   4. A request is received, the system measures 1 request.\n                //   5. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+1 with a value of 3.\n                //   6. A request is received, the system measures 1 request.\n                //   7. A request is received, the system measures 1 request.\n                //   8. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+2 with a value of 5.\n                //   9. The system experiences a fault and loses state.\n                //   10. The system recovers and resumes receiving at time=t_1.\n                //   11. A request is received, the system measures 1 request.\n                //   12. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_1 to\n                //      t_0+1 with a value of 1.\n                //\n                // Note: Even though, when reporting changes since last report time, using\n                // CUMULATIVE is valid, it is not recommended. This may cause problems for\n                // systems that do not use start_time to determine when the aggregation\n                // value was reset (e.g. Prometheus).\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_CUMULATIVE\"] = 2] = \"AGGREGATION_TEMPORALITY_CUMULATIVE\";\n            })(AggregationTemporality = v1.AggregationTemporality || (v1.AggregationTemporality = {}));\n        })(v1 = metrics.v1 || (metrics.v1 = {}));\n    })(metrics = opentelemetryProto.metrics || (opentelemetryProto.metrics = {}));\n    let trace;\n    (function (trace) {\n        let v1;\n        (function (v1) {\n            let ConstantSampler;\n            (function (ConstantSampler) {\n                let ConstantDecision;\n                (function (ConstantDecision) {\n                    ConstantDecision[ConstantDecision[\"ALWAYS_OFF\"] = 0] = \"ALWAYS_OFF\";\n                    ConstantDecision[ConstantDecision[\"ALWAYS_ON\"] = 1] = \"ALWAYS_ON\";\n                    ConstantDecision[ConstantDecision[\"ALWAYS_PARENT\"] = 2] = \"ALWAYS_PARENT\";\n                })(ConstantDecision = ConstantSampler.ConstantDecision || (ConstantSampler.ConstantDecision = {}));\n            })(ConstantSampler = v1.ConstantSampler || (v1.ConstantSampler = {}));\n            let Span;\n            (function (Span) {\n                let SpanKind;\n                (function (SpanKind) {\n                    SpanKind[SpanKind[\"SPAN_KIND_UNSPECIFIED\"] = 0] = \"SPAN_KIND_UNSPECIFIED\";\n                    SpanKind[SpanKind[\"SPAN_KIND_INTERNAL\"] = 1] = \"SPAN_KIND_INTERNAL\";\n                    SpanKind[SpanKind[\"SPAN_KIND_SERVER\"] = 2] = \"SPAN_KIND_SERVER\";\n                    SpanKind[SpanKind[\"SPAN_KIND_CLIENT\"] = 3] = \"SPAN_KIND_CLIENT\";\n                    SpanKind[SpanKind[\"SPAN_KIND_PRODUCER\"] = 4] = \"SPAN_KIND_PRODUCER\";\n                    SpanKind[SpanKind[\"SPAN_KIND_CONSUMER\"] = 5] = \"SPAN_KIND_CONSUMER\";\n                })(SpanKind = Span.SpanKind || (Span.SpanKind = {}));\n            })(Span = v1.Span || (v1.Span = {}));\n        })(v1 = trace.v1 || (trace.v1 = {}));\n    })(trace = opentelemetryProto.trace || (opentelemetryProto.trace = {}));\n    let common;\n    (function (common) {\n        let v1;\n        (function (v1) {\n            let ValueType;\n            (function (ValueType) {\n                ValueType[ValueType[\"STRING\"] = 0] = \"STRING\";\n                ValueType[ValueType[\"INT\"] = 1] = \"INT\";\n                ValueType[ValueType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                ValueType[ValueType[\"BOOL\"] = 3] = \"BOOL\";\n            })(ValueType = v1.ValueType || (v1.ValueType = {}));\n        })(v1 = common.v1 || (common.v1 = {}));\n    })(common = opentelemetryProto.common || (opentelemetryProto.common = {}));\n})(opentelemetryProto = exports.opentelemetryProto || (exports.opentelemetryProto = {}));\n/**\n * Interface for handling error\n */\nclass CollectorExporterError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.name = 'CollectorExporterError';\n        this.data = data;\n        this.code = code;\n    }\n}\nexports.CollectorExporterError = CollectorExporterError;\n/**\n * Mapping between api SpanKind and proto SpanKind\n */\nexports.COLLECTOR_SPAN_KIND_MAPPING = {\n    [api_1.SpanKind.INTERNAL]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_INTERNAL,\n    [api_1.SpanKind.SERVER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_SERVER,\n    [api_1.SpanKind.CLIENT]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_CLIENT,\n    [api_1.SpanKind.PRODUCER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_PRODUCER,\n    [api_1.SpanKind.CONSUMER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_CONSUMER,\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/util.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseHeaders = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n * @param logger\n */\nfunction parseHeaders(partialHeaders = {}, logger = new api_1.NoopLogger()) {\n    const headers = {};\n    Object.entries(partialHeaders).forEach(([key, value]) => {\n        if (typeof value !== 'undefined') {\n            headers[key] = String(value);\n        }\n        else {\n            logger.warn(`Header \"${key}\" has wrong value and will be ignored`);\n        }\n    });\n    return headers;\n}\nexports.parseHeaders = parseHeaders;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2V4cG9ydGVyLWNvbGxlY3Rvci9idWlsZC9zcmMvdXRpbC5qcz8wNzFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VIZWFkZXJzID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqXG4gKiBQYXJzZXMgaGVhZGVycyBmcm9tIGNvbmZpZyBsZWF2aW5nIG9ubHkgdGhvc2UgdGhhdCBoYXZlIGRlZmluZWQgdmFsdWVzXG4gKiBAcGFyYW0gcGFydGlhbEhlYWRlcnNcbiAqIEBwYXJhbSBsb2dnZXJcbiAqL1xuZnVuY3Rpb24gcGFyc2VIZWFkZXJzKHBhcnRpYWxIZWFkZXJzID0ge30sIGxvZ2dlciA9IG5ldyBhcGlfMS5Ob29wTG9nZ2VyKCkpIHtcbiAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgT2JqZWN0LmVudHJpZXMocGFydGlhbEhlYWRlcnMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgaGVhZGVyc1trZXldID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxvZ2dlci53YXJuKGBIZWFkZXIgXCIke2tleX1cIiBoYXMgd3JvbmcgdmFsdWUgYW5kIHdpbGwgYmUgaWdub3JlZGApO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGhlYWRlcnM7XG59XG5leHBvcnRzLnBhcnNlSGVhZGVycyA9IHBhcnNlSGVhZGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AttributeNames = void 0;\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy9lbnVtcy9BdHRyaWJ1dGVOYW1lcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZmV0Y2gvYnVpbGQvc3JjL2VudW1zL0F0dHJpYnV0ZU5hbWVzLmpzPzFlMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHZvaWQgMDtcbi8qKlxuICogaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktc3BlY2lmaWNhdGlvbi9ibG9iL21hc3Rlci9zcGVjaWZpY2F0aW9uL3RyYWNlL3NlbWFudGljX2NvbnZlbnRpb25zL2h0dHAubWRcbiAqL1xudmFyIEF0dHJpYnV0ZU5hbWVzO1xuKGZ1bmN0aW9uIChBdHRyaWJ1dGVOYW1lcykge1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiQ09NUE9ORU5UXCJdID0gXCJjb21wb25lbnRcIjtcbn0pKEF0dHJpYnV0ZU5hbWVzID0gZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyB8fCAoZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVOYW1lcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst web = __webpack_require__(/*! @opentelemetry/web */ \"./node_modules/@opentelemetry/web/build/src/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js\");\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\nconst urlNormalizingA = document.createElement('a');\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nclass FetchInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super('@opentelemetry/instrumentation-fetch', version_1.VERSION, Object.assign({}, config));\n        this.component = 'fetch';\n        this.version = version_1.VERSION;\n        this.moduleName = this.component;\n        this._usedResources = new WeakSet();\n        this._tasksCount = 0;\n    }\n    init() { }\n    _getConfig() {\n        return this._config;\n    }\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     */\n    _addChildSpan(span, corsPreFlightRequest) {\n        const childSpan = this.tracer.startSpan('CORS Preflight', {\n            startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n        }, api.setSpan(api.context.active(), span));\n        web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n        childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n    }\n    /**\n     * Adds more attributes to span just before ending it\n     * @param span\n     * @param response\n     */\n    _addFinalSpanAttributes(span, response) {\n        const parsedUrl = web.parseUrl(response.url);\n        span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_STATUS_CODE, response.status);\n        if (response.statusText != undefined) {\n            span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_STATUS_TEXT, response.statusText);\n        }\n        span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_HOST, parsedUrl.host);\n        span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n        span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_USER_AGENT, navigator.userAgent);\n    }\n    /**\n     * Add headers\n     * @param options\n     * @param spanUrl\n     */\n    _addHeaders(options, spanUrl) {\n        if (!web.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            return;\n        }\n        if (options instanceof Request) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n            });\n        }\n        else {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            options.headers = Object.assign({}, headers, options.headers || {});\n        }\n    }\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link FetchPluginConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    _clearResources() {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            performance.clearResourceTimings();\n            this._usedResources = new WeakSet();\n        }\n    }\n    /**\n     * Creates a new span\n     * @param url\n     * @param options\n     */\n    _createSpan(url, options = {}) {\n        if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._logger.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        const method = (options.method || 'GET').toUpperCase();\n        const spanName = `HTTP ${method}`;\n        return this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n                [AttributeNames_1.AttributeNames.COMPONENT]: this.moduleName,\n                [semantic_conventions_1.HttpAttribute.HTTP_METHOD]: method,\n                [semantic_conventions_1.HttpAttribute.HTTP_URL]: url,\n            },\n        });\n    }\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     * @param resourcesObserver\n     * @param endTime\n     */\n    _findResourceAndAddNetworkEvents(span, resourcesObserver, endTime) {\n        let resources = resourcesObserver.entries;\n        if (!resources.length) {\n            if (!performance.getEntriesByType) {\n                return;\n            }\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            resources = performance.getEntriesByType('resource');\n        }\n        const resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n        if (resource.mainRequest) {\n            const mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            const corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            web.addSpanNetworkEvents(span, mainRequest);\n        }\n    }\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     */\n    _markResourceAsUsed(resource) {\n        this._usedResources.add(resource);\n    }\n    /**\n     * Finish span, add attributes, network events etc.\n     * @param span\n     * @param spanData\n     * @param response\n     */\n    _endSpan(span, spanData, response) {\n        const endTime = core.hrTime();\n        this._addFinalSpanAttributes(span, response);\n        setTimeout(() => {\n            var _a;\n            (_a = spanData.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n            this._tasksCount--;\n            this._clearResources();\n            span.end(endTime);\n        }, OBSERVER_WAIT_TIME_MS);\n    }\n    /**\n     * Patches the constructor of fetch\n     */\n    _patchConstructor() {\n        return (original) => {\n            const plugin = this;\n            return function patchConstructor(input, init) {\n                const url = input instanceof Request ? input.url : input;\n                const options = input instanceof Request ? input : init || {};\n                const span = plugin._createSpan(url, options);\n                if (!span) {\n                    return original.apply(this, [url, options]);\n                }\n                const spanData = plugin._prepareSpanData(url);\n                function onSuccess(span, resolve, response) {\n                    try {\n                        if (response.status >= 200 && response.status < 400) {\n                            plugin._endSpan(span, spanData, response);\n                        }\n                        else {\n                            plugin._endSpan(span, spanData, {\n                                status: response.status,\n                                statusText: response.statusText,\n                                url,\n                            });\n                        }\n                    }\n                    finally {\n                        resolve(response);\n                    }\n                }\n                function onError(span, reject, error) {\n                    try {\n                        plugin._endSpan(span, spanData, {\n                            status: error.status || 0,\n                            statusText: error.message,\n                            url,\n                        });\n                    }\n                    finally {\n                        reject(error);\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    return api.context.with(api.setSpan(api.context.active(), span), () => {\n                        plugin._addHeaders(options, url);\n                        plugin._tasksCount++;\n                        return original\n                            .apply(this, [url, options])\n                            .then(onSuccess.bind(this, span, resolve), onError.bind(this, span, reject));\n                    });\n                });\n            };\n        };\n    }\n    /**\n     * Prepares a span data - needed later for matching appropriate network\n     *     resources\n     * @param spanUrl\n     */\n    _prepareSpanData(spanUrl) {\n        const startTime = core.hrTime();\n        const entries = [];\n        if (typeof window.PerformanceObserver === 'undefined') {\n            return { entries, startTime, spanUrl };\n        }\n        const observer = new PerformanceObserver(list => {\n            const perfObsEntries = list.getEntries();\n            urlNormalizingA.href = spanUrl;\n            perfObsEntries.forEach(entry => {\n                if (entry.initiatorType === 'fetch' &&\n                    entry.name === urlNormalizingA.href) {\n                    entries.push(entry);\n                }\n            });\n        });\n        observer.observe({\n            entryTypes: ['resource'],\n        });\n        return { entries, observer, startTime, spanUrl };\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        if (instrumentation_1.isWrapped(window.fetch)) {\n            this._unwrap(window, 'fetch');\n            this._logger.debug('removing previous patch for constructor');\n        }\n        this._wrap(window, 'fetch', this._patchConstructor());\n    }\n    /**\n     * implements unpatch function\n     */\n    disable() {\n        this._unwrap(window, 'fetch');\n        this._usedResources = new WeakSet();\n    }\n}\nexports.FetchInstrumentation = FetchInstrumentation;\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./fetch */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZmV0Y2gvYnVpbGQvc3JjL2luZGV4LmpzPzk5MmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ZldGNoXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.16.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy92ZXJzaW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1mZXRjaC9idWlsZC9zcmMvdmVyc2lvbi5qcz8yZGZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVkVSU0lPTiA9IHZvaWQgMDtcbi8vIHRoaXMgaXMgYXV0b2dlbmVyYXRlZCBmaWxlLCBzZWUgc2NyaXB0cy92ZXJzaW9uLXVwZGF0ZS5qc1xuZXhwb3J0cy5WRVJTSU9OID0gJzAuMTYuMCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/enums/EventNames.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/enums/EventNames.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventNames = void 0;\nvar EventNames;\n(function (EventNames) {\n    EventNames[\"METHOD_OPEN\"] = \"open\";\n    EventNames[\"METHOD_SEND\"] = \"send\";\n    EventNames[\"EVENT_ABORT\"] = \"abort\";\n    EventNames[\"EVENT_ERROR\"] = \"error\";\n    EventNames[\"EVENT_LOAD\"] = \"loaded\";\n    EventNames[\"EVENT_TIMEOUT\"] = \"timeout\";\n})(EventNames = exports.EventNames || (exports.EventNames = {}));\n//# sourceMappingURL=EventNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXhtbC1odHRwLXJlcXVlc3QvYnVpbGQvc3JjL2VudW1zL0V2ZW50TmFtZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXhtbC1odHRwLXJlcXVlc3QvYnVpbGQvc3JjL2VudW1zL0V2ZW50TmFtZXMuanM/OTJlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkV2ZW50TmFtZXMgPSB2b2lkIDA7XG52YXIgRXZlbnROYW1lcztcbihmdW5jdGlvbiAoRXZlbnROYW1lcykge1xuICAgIEV2ZW50TmFtZXNbXCJNRVRIT0RfT1BFTlwiXSA9IFwib3BlblwiO1xuICAgIEV2ZW50TmFtZXNbXCJNRVRIT0RfU0VORFwiXSA9IFwic2VuZFwiO1xuICAgIEV2ZW50TmFtZXNbXCJFVkVOVF9BQk9SVFwiXSA9IFwiYWJvcnRcIjtcbiAgICBFdmVudE5hbWVzW1wiRVZFTlRfRVJST1JcIl0gPSBcImVycm9yXCI7XG4gICAgRXZlbnROYW1lc1tcIkVWRU5UX0xPQURcIl0gPSBcImxvYWRlZFwiO1xuICAgIEV2ZW50TmFtZXNbXCJFVkVOVF9USU1FT1VUXCJdID0gXCJ0aW1lb3V0XCI7XG59KShFdmVudE5hbWVzID0gZXhwb3J0cy5FdmVudE5hbWVzIHx8IChleHBvcnRzLkV2ZW50TmFtZXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnROYW1lcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/enums/EventNames.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./xhr */ \"./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/xhr.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXhtbC1odHRwLXJlcXVlc3QvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi14bWwtaHR0cC1yZXF1ZXN0L2J1aWxkL3NyYy9pbmRleC5qcz9mZDlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi94aHJcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/version.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/version.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.16.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXhtbC1odHRwLXJlcXVlc3QvYnVpbGQvc3JjL3ZlcnNpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXhtbC1odHRwLXJlcXVlc3QvYnVpbGQvc3JjL3ZlcnNpb24uanM/MDhhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuVkVSU0lPTiA9ICcwLjE2LjAnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/xhr.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/xhr.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XMLHttpRequestInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\nconst web_1 = __webpack_require__(/*! @opentelemetry/web */ \"./node_modules/@opentelemetry/web/build/src/index.js\");\nconst EventNames_1 = __webpack_require__(/*! ./enums/EventNames */ \"./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/enums/EventNames.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/version.js\");\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nclass XMLHttpRequestInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super('@opentelemetry/instrumentation-xml-http-request', version_1.VERSION, Object.assign({}, config));\n        this.component = 'xml-http-request';\n        this.version = version_1.VERSION;\n        this.moduleName = this.component;\n        this._tasksCount = 0;\n        this._xhrMem = new WeakMap();\n        this._usedResources = new WeakSet();\n    }\n    init() { }\n    _getConfig() {\n        return this._config;\n    }\n    /**\n     * Adds custom headers to XMLHttpRequest\n     * @param xhr\n     * @param span\n     * @private\n     */\n    _addHeaders(xhr, spanUrl) {\n        if (!web_1.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            return;\n        }\n        const headers = {};\n        api.propagation.inject(api.context.active(), headers);\n        Object.keys(headers).forEach(key => {\n            xhr.setRequestHeader(key, String(headers[key]));\n        });\n    }\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     * @private\n     */\n    _addChildSpan(span, corsPreFlightRequest) {\n        api.context.with(api.setSpan(api.context.active(), span), () => {\n            const childSpan = this.tracer.startSpan('CORS Preflight', {\n                startTime: corsPreFlightRequest[web_1.PerformanceTimingNames.FETCH_START],\n            });\n            web_1.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n            childSpan.end(corsPreFlightRequest[web_1.PerformanceTimingNames.RESPONSE_END]);\n        });\n    }\n    /**\n     * Add attributes when span is going to end\n     * @param span\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    _addFinalSpanAttributes(span, xhrMem, spanUrl) {\n        if (typeof spanUrl === 'string') {\n            const parsedUrl = web_1.parseUrl(spanUrl);\n            if (xhrMem.status !== undefined) {\n                span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_STATUS_CODE, xhrMem.status);\n            }\n            if (xhrMem.statusText !== undefined) {\n                span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_STATUS_TEXT, xhrMem.statusText);\n            }\n            span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_HOST, parsedUrl.host);\n            span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n            // @TODO do we want to collect this or it will be collected earlier once only or\n            //    maybe when parent span is not available ?\n            span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_USER_AGENT, navigator.userAgent);\n        }\n    }\n    /**\n     * will collect information about all resources created\n     * between \"send\" and \"end\" with additional waiting for main resource\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    _addResourceObserver(xhr, spanUrl) {\n        const xhrMem = this._xhrMem.get(xhr);\n        if (!xhrMem ||\n            typeof window.PerformanceObserver === 'undefined' ||\n            typeof window.PerformanceResourceTiming === 'undefined') {\n            return;\n        }\n        xhrMem.createdResources = {\n            observer: new PerformanceObserver(list => {\n                const entries = list.getEntries();\n                entries.forEach(entry => {\n                    if (entry.initiatorType === 'xmlhttprequest' &&\n                        entry.name === spanUrl) {\n                        if (xhrMem.createdResources) {\n                            xhrMem.createdResources.entries.push(entry);\n                        }\n                    }\n                });\n            }),\n            entries: [],\n        };\n        xhrMem.createdResources.observer.observe({\n            entryTypes: ['resource'],\n        });\n    }\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    _clearResources() {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            core_1.otperformance.clearResourceTimings();\n            this._xhrMem = new WeakMap();\n            this._usedResources = new WeakSet();\n        }\n    }\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     */\n    _findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, startTime, endTime) {\n        if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n            return;\n        }\n        let resources = xhrMem.createdResources.entries;\n        if (!resources || !resources.length) {\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            // ts thinks this is the perf_hooks module, but it is the browser performance api\n            resources = core_1.otperformance.getEntriesByType('resource');\n        }\n        const resource = web_1.getResource(spanUrl, startTime, endTime, resources, this._usedResources);\n        if (resource.mainRequest) {\n            const mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            const corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            web_1.addSpanNetworkEvents(span, mainRequest);\n        }\n    }\n    /**\n     * Removes the previous information about span.\n     * This might happened when the same xhr is used again.\n     * @param xhr\n     * @private\n     */\n    _cleanPreviousSpanInformation(xhr) {\n        const xhrMem = this._xhrMem.get(xhr);\n        if (xhrMem) {\n            const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (callbackToRemoveEvents) {\n                callbackToRemoveEvents();\n            }\n            this._xhrMem.delete(xhr);\n        }\n    }\n    /**\n     * Creates a new span when method \"open\" is called\n     * @param xhr\n     * @param url\n     * @param method\n     * @private\n     */\n    _createSpan(xhr, url, method) {\n        if (core_1.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._logger.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        const spanName = `HTTP ${method.toUpperCase()}`;\n        const currentSpan = this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n                [semantic_conventions_1.HttpAttribute.HTTP_METHOD]: method,\n                [semantic_conventions_1.HttpAttribute.HTTP_URL]: url,\n            },\n        });\n        currentSpan.addEvent(EventNames_1.EventNames.METHOD_OPEN);\n        this._cleanPreviousSpanInformation(xhr);\n        this._xhrMem.set(xhr, {\n            span: currentSpan,\n            spanUrl: url,\n        });\n        return currentSpan;\n    }\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     * @private\n     */\n    _markResourceAsUsed(resource) {\n        this._usedResources.add(resource);\n    }\n    /**\n     * Patches the method open\n     * @private\n     */\n    _patchOpen() {\n        return (original) => {\n            const plugin = this;\n            return function patchOpen(...args) {\n                const method = args[0];\n                const url = args[1];\n                plugin._createSpan(this, url, method);\n                return original.apply(this, args);\n            };\n        };\n    }\n    /**\n     * Patches the method send\n     * @private\n     */\n    _patchSend() {\n        const plugin = this;\n        function endSpanTimeout(eventName, xhrMem, endTime) {\n            const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (typeof callbackToRemoveEvents === 'function') {\n                callbackToRemoveEvents();\n            }\n            const { span, spanUrl, sendStartTime } = xhrMem;\n            if (span) {\n                plugin._findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, sendStartTime, endTime);\n                span.addEvent(eventName, endTime);\n                plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n                span.end(endTime);\n                plugin._tasksCount--;\n            }\n            plugin._clearResources();\n        }\n        function endSpan(eventName, xhr) {\n            const xhrMem = plugin._xhrMem.get(xhr);\n            if (!xhrMem) {\n                return;\n            }\n            xhrMem.status = xhr.status;\n            xhrMem.statusText = xhr.statusText;\n            plugin._xhrMem.delete(xhr);\n            const endTime = core_1.hrTime();\n            // the timeout is needed as observer doesn't have yet information\n            // when event \"load\" is called. Also the time may differ depends on\n            // browser and speed of computer\n            setTimeout(() => {\n                endSpanTimeout(eventName, xhrMem, endTime);\n            }, OBSERVER_WAIT_TIME_MS);\n        }\n        function onError() {\n            endSpan(EventNames_1.EventNames.EVENT_ERROR, this);\n        }\n        function onAbort() {\n            endSpan(EventNames_1.EventNames.EVENT_ABORT, this);\n        }\n        function onTimeout() {\n            endSpan(EventNames_1.EventNames.EVENT_TIMEOUT, this);\n        }\n        function onLoad() {\n            if (this.status < 299) {\n                endSpan(EventNames_1.EventNames.EVENT_LOAD, this);\n            }\n            else {\n                endSpan(EventNames_1.EventNames.EVENT_ERROR, this);\n            }\n        }\n        function unregister(xhr) {\n            xhr.removeEventListener('abort', onAbort);\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onTimeout);\n            const xhrMem = plugin._xhrMem.get(xhr);\n            if (xhrMem) {\n                xhrMem.callbackToRemoveEvents = undefined;\n            }\n        }\n        return (original) => {\n            return function patchSend(...args) {\n                const xhrMem = plugin._xhrMem.get(this);\n                if (!xhrMem) {\n                    return original.apply(this, args);\n                }\n                const currentSpan = xhrMem.span;\n                const spanUrl = xhrMem.spanUrl;\n                if (currentSpan && spanUrl) {\n                    api.context.with(api.setSpan(api.context.active(), currentSpan), () => {\n                        plugin._tasksCount++;\n                        xhrMem.sendStartTime = core_1.hrTime();\n                        currentSpan.addEvent(EventNames_1.EventNames.METHOD_SEND);\n                        this.addEventListener('abort', onAbort);\n                        this.addEventListener('error', onError);\n                        this.addEventListener('load', onLoad);\n                        this.addEventListener('timeout', onTimeout);\n                        xhrMem.callbackToRemoveEvents = () => {\n                            unregister(this);\n                            if (xhrMem.createdResources) {\n                                xhrMem.createdResources.observer.disconnect();\n                            }\n                        };\n                        plugin._addHeaders(this, spanUrl);\n                        plugin._addResourceObserver(this, spanUrl);\n                    });\n                }\n                return original.apply(this, args);\n            };\n        };\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        this._logger.debug('applying patch to', this.moduleName, this.version);\n        if (instrumentation_1.isWrapped(XMLHttpRequest.prototype.open)) {\n            this._unwrap(XMLHttpRequest.prototype, 'open');\n            this._logger.debug('removing previous patch from method open');\n        }\n        if (instrumentation_1.isWrapped(XMLHttpRequest.prototype.send)) {\n            this._unwrap(XMLHttpRequest.prototype, 'send');\n            this._logger.debug('removing previous patch from method send');\n        }\n        this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n        this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n    }\n    /**\n     * implements disable function\n     */\n    disable() {\n        this._logger.debug('removing patch from', this.moduleName, this.version);\n        this._unwrap(XMLHttpRequest.prototype, 'open');\n        this._unwrap(XMLHttpRequest.prototype, 'send');\n        this._tasksCount = 0;\n        this._xhrMem = new WeakMap();\n        this._usedResources = new WeakSet();\n    }\n}\nexports.XMLHttpRequestInstrumentation = XMLHttpRequestInstrumentation;\n//# sourceMappingURL=xhr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/xhr.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerInstrumentations = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst autoLoaderUtils_1 = __webpack_require__(/*! ./autoLoaderUtils */ \"./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js\");\nconst platform_1 = __webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js\");\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nfunction registerInstrumentations(options) {\n    const { instrumentations, pluginsNode, pluginsWeb, } = autoLoaderUtils_1.parseInstrumentationOptions(options.instrumentations);\n    const tracerWithLogger = options.tracerProvider;\n    const tracerProvider = options.tracerProvider || api.trace.getTracerProvider();\n    const meterProvider = options.meterProvider || api_metrics_1.metrics.getMeterProvider();\n    const logger = options.logger || (tracerWithLogger === null || tracerWithLogger === void 0 ? void 0 : tracerWithLogger.logger) || new api.NoopLogger();\n    autoLoaderUtils_1.enableInstrumentations(instrumentations, logger, tracerProvider, meterProvider);\n    const unload = platform_1.loadOldPlugins(pluginsNode, pluginsWeb, logger, tracerProvider);\n    return () => {\n        unload();\n        autoLoaderUtils_1.disableInstrumentations(instrumentations);\n    };\n}\nexports.registerInstrumentations = registerInstrumentations;\n//# sourceMappingURL=autoLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9hdXRvTG9hZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvYXV0b0xvYWRlci5qcz85MTAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zID0gdm9pZCAwO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGFwaV9tZXRyaWNzXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG5jb25zdCBhdXRvTG9hZGVyVXRpbHNfMSA9IHJlcXVpcmUoXCIuL2F1dG9Mb2FkZXJVdGlsc1wiKTtcbmNvbnN0IHBsYXRmb3JtXzEgPSByZXF1aXJlKFwiLi9wbGF0Zm9ybVwiKTtcbi8qKlxuICogSXQgd2lsbCByZWdpc3RlciBpbnN0cnVtZW50YXRpb25zIGFuZCBwbHVnaW5zXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybiByZXR1cm5zIGZ1bmN0aW9uIHRvIHVubG9hZCBpbnN0cnVtZW50YXRpb24gYW5kIHBsdWdpbnMgdGhhdCB3ZXJlXG4gKiAgIHJlZ2lzdGVyZWRcbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGluc3RydW1lbnRhdGlvbnMsIHBsdWdpbnNOb2RlLCBwbHVnaW5zV2ViLCB9ID0gYXV0b0xvYWRlclV0aWxzXzEucGFyc2VJbnN0cnVtZW50YXRpb25PcHRpb25zKG9wdGlvbnMuaW5zdHJ1bWVudGF0aW9ucyk7XG4gICAgY29uc3QgdHJhY2VyV2l0aExvZ2dlciA9IG9wdGlvbnMudHJhY2VyUHJvdmlkZXI7XG4gICAgY29uc3QgdHJhY2VyUHJvdmlkZXIgPSBvcHRpb25zLnRyYWNlclByb3ZpZGVyIHx8IGFwaS50cmFjZS5nZXRUcmFjZXJQcm92aWRlcigpO1xuICAgIGNvbnN0IG1ldGVyUHJvdmlkZXIgPSBvcHRpb25zLm1ldGVyUHJvdmlkZXIgfHwgYXBpX21ldHJpY3NfMS5tZXRyaWNzLmdldE1ldGVyUHJvdmlkZXIoKTtcbiAgICBjb25zdCBsb2dnZXIgPSBvcHRpb25zLmxvZ2dlciB8fCAodHJhY2VyV2l0aExvZ2dlciA9PT0gbnVsbCB8fCB0cmFjZXJXaXRoTG9nZ2VyID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0cmFjZXJXaXRoTG9nZ2VyLmxvZ2dlcikgfHwgbmV3IGFwaS5Ob29wTG9nZ2VyKCk7XG4gICAgYXV0b0xvYWRlclV0aWxzXzEuZW5hYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zLCBsb2dnZXIsIHRyYWNlclByb3ZpZGVyLCBtZXRlclByb3ZpZGVyKTtcbiAgICBjb25zdCB1bmxvYWQgPSBwbGF0Zm9ybV8xLmxvYWRPbGRQbHVnaW5zKHBsdWdpbnNOb2RlLCBwbHVnaW5zV2ViLCBsb2dnZXIsIHRyYWNlclByb3ZpZGVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICB1bmxvYWQoKTtcbiAgICAgICAgYXV0b0xvYWRlclV0aWxzXzEuZGlzYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucyk7XG4gICAgfTtcbn1cbmV4cG9ydHMucmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zID0gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0b0xvYWRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disableInstrumentations = exports.enableInstrumentations = exports.parseInstrumentationOptions = void 0;\n/**\n * Parses the options and returns instrumentations, node plugins and\n *   web plugins\n * @param options\n */\nfunction parseInstrumentationOptions(options = []) {\n    let instrumentations = [];\n    let pluginsNode = {};\n    let pluginsWeb = [];\n    for (let i = 0, j = options.length; i < j; i++) {\n        const option = options[i];\n        if (Array.isArray(option)) {\n            const results = parseInstrumentationOptions(option);\n            instrumentations = instrumentations.concat(results.instrumentations);\n            pluginsWeb = pluginsWeb.concat(results.pluginsWeb);\n            pluginsNode = Object.assign({}, pluginsNode, results.pluginsNode);\n        }\n        else if (option.plugins) {\n            pluginsNode = Object.assign({}, pluginsNode, option.plugins);\n        }\n        else if (typeof option === 'function') {\n            instrumentations.push(new option());\n        }\n        else if (option.instrumentationName) {\n            instrumentations.push(option);\n        }\n        else if (option.moduleName) {\n            pluginsWeb.push(option);\n        }\n    }\n    return { instrumentations, pluginsNode, pluginsWeb };\n}\nexports.parseInstrumentationOptions = parseInstrumentationOptions;\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param logger\n * @param tracerProvider\n * @param meterProvider\n */\nfunction enableInstrumentations(instrumentations, logger, tracerProvider, meterProvider) {\n    for (let i = 0, j = instrumentations.length; i < j; i++) {\n        const instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        instrumentation.enable();\n    }\n}\nexports.enableInstrumentations = enableInstrumentations;\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nfunction disableInstrumentations(instrumentations) {\n    instrumentations.forEach(instrumentation => instrumentation.disable());\n}\nexports.disableInstrumentations = disableInstrumentations;\n//# sourceMappingURL=autoLoaderUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9hdXRvTG9hZGVyVXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9hdXRvTG9hZGVyVXRpbHMuanM/NjFmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRpc2FibGVJbnN0cnVtZW50YXRpb25zID0gZXhwb3J0cy5lbmFibGVJbnN0cnVtZW50YXRpb25zID0gZXhwb3J0cy5wYXJzZUluc3RydW1lbnRhdGlvbk9wdGlvbnMgPSB2b2lkIDA7XG4vKipcbiAqIFBhcnNlcyB0aGUgb3B0aW9ucyBhbmQgcmV0dXJucyBpbnN0cnVtZW50YXRpb25zLCBub2RlIHBsdWdpbnMgYW5kXG4gKiAgIHdlYiBwbHVnaW5zXG4gKiBAcGFyYW0gb3B0aW9uc1xuICovXG5mdW5jdGlvbiBwYXJzZUluc3RydW1lbnRhdGlvbk9wdGlvbnMob3B0aW9ucyA9IFtdKSB7XG4gICAgbGV0IGluc3RydW1lbnRhdGlvbnMgPSBbXTtcbiAgICBsZXQgcGx1Z2luc05vZGUgPSB7fTtcbiAgICBsZXQgcGx1Z2luc1dlYiA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwLCBqID0gb3B0aW9ucy5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gb3B0aW9uc1tpXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkob3B0aW9uKSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHBhcnNlSW5zdHJ1bWVudGF0aW9uT3B0aW9ucyhvcHRpb24pO1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9ucyA9IGluc3RydW1lbnRhdGlvbnMuY29uY2F0KHJlc3VsdHMuaW5zdHJ1bWVudGF0aW9ucyk7XG4gICAgICAgICAgICBwbHVnaW5zV2ViID0gcGx1Z2luc1dlYi5jb25jYXQocmVzdWx0cy5wbHVnaW5zV2ViKTtcbiAgICAgICAgICAgIHBsdWdpbnNOb2RlID0gT2JqZWN0LmFzc2lnbih7fSwgcGx1Z2luc05vZGUsIHJlc3VsdHMucGx1Z2luc05vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG9wdGlvbi5wbHVnaW5zKSB7XG4gICAgICAgICAgICBwbHVnaW5zTm9kZSA9IE9iamVjdC5hc3NpZ24oe30sIHBsdWdpbnNOb2RlLCBvcHRpb24ucGx1Z2lucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9ucy5wdXNoKG5ldyBvcHRpb24oKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob3B0aW9uLmluc3RydW1lbnRhdGlvbk5hbWUpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbnMucHVzaChvcHRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG9wdGlvbi5tb2R1bGVOYW1lKSB7XG4gICAgICAgICAgICBwbHVnaW5zV2ViLnB1c2gob3B0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBpbnN0cnVtZW50YXRpb25zLCBwbHVnaW5zTm9kZSwgcGx1Z2luc1dlYiB9O1xufVxuZXhwb3J0cy5wYXJzZUluc3RydW1lbnRhdGlvbk9wdGlvbnMgPSBwYXJzZUluc3RydW1lbnRhdGlvbk9wdGlvbnM7XG4vKipcbiAqIEVuYWJsZSBpbnN0cnVtZW50YXRpb25zXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGF0aW9uc1xuICogQHBhcmFtIGxvZ2dlclxuICogQHBhcmFtIHRyYWNlclByb3ZpZGVyXG4gKiBAcGFyYW0gbWV0ZXJQcm92aWRlclxuICovXG5mdW5jdGlvbiBlbmFibGVJbnN0cnVtZW50YXRpb25zKGluc3RydW1lbnRhdGlvbnMsIGxvZ2dlciwgdHJhY2VyUHJvdmlkZXIsIG1ldGVyUHJvdmlkZXIpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgaiA9IGluc3RydW1lbnRhdGlvbnMubGVuZ3RoOyBpIDwgajsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbiA9IGluc3RydW1lbnRhdGlvbnNbaV07XG4gICAgICAgIGlmICh0cmFjZXJQcm92aWRlcikge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldFRyYWNlclByb3ZpZGVyKHRyYWNlclByb3ZpZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWV0ZXJQcm92aWRlcikge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldE1ldGVyUHJvdmlkZXIobWV0ZXJQcm92aWRlcik7XG4gICAgICAgIH1cbiAgICAgICAgaW5zdHJ1bWVudGF0aW9uLmVuYWJsZSgpO1xuICAgIH1cbn1cbmV4cG9ydHMuZW5hYmxlSW5zdHJ1bWVudGF0aW9ucyA9IGVuYWJsZUluc3RydW1lbnRhdGlvbnM7XG4vKipcbiAqIERpc2FibGUgaW5zdHJ1bWVudGF0aW9uc1xuICogQHBhcmFtIGluc3RydW1lbnRhdGlvbnNcbiAqL1xuZnVuY3Rpb24gZGlzYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucykge1xuICAgIGluc3RydW1lbnRhdGlvbnMuZm9yRWFjaChpbnN0cnVtZW50YXRpb24gPT4gaW5zdHJ1bWVudGF0aW9uLmRpc2FibGUoKSk7XG59XG5leHBvcnRzLmRpc2FibGVJbnN0cnVtZW50YXRpb25zID0gZGlzYWJsZUluc3RydW1lbnRhdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRvTG9hZGVyVXRpbHMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./autoLoader */ \"./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/index */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/instrumentation/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@opentelemetry/instrumentation/build/src/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL2luZGV4LmpzP2NkNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2F1dG9Mb2FkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsYXRmb3JtL2luZGV4XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstrumentationAbstract = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst shimmer = __webpack_require__(/*! shimmer */ \"./node_modules/shimmer/index.js\");\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nclass InstrumentationAbstract {\n    constructor(instrumentationName, instrumentationVersion, config = {}) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        /* Api to wrap instrumented method */\n        this._wrap = shimmer.wrap;\n        /* Api to unwrap instrumented methods */\n        this._unwrap = shimmer.unwrap;\n        /* Api to mass wrap instrumented method */\n        this._massWrap = shimmer.massWrap;\n        /* Api to mass unwrap instrumented methods */\n        this._massUnwrap = shimmer.massUnwrap;\n        this._config = Object.assign({ enabled: true }, config);\n        this._logger = this._config.logger || new api.NoopLogger();\n        this._tracer = api.trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = api_metrics_1.metrics.getMeter(instrumentationName, instrumentationVersion);\n    }\n    /* Returns meter */\n    get meter() {\n        return this._meter;\n    }\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    setMeterProvider(meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n    }\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    setTracerProvider(tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    }\n    /* Returns tracer */\n    get tracer() {\n        return this._tracer;\n    }\n}\nexports.InstrumentationAbstract = InstrumentationAbstract;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9pbnN0cnVtZW50YXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9pbnN0cnVtZW50YXRpb24uanM/MTQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkluc3RydW1lbnRhdGlvbkFic3RyYWN0ID0gdm9pZCAwO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGFwaV9tZXRyaWNzXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG5jb25zdCBzaGltbWVyID0gcmVxdWlyZShcInNoaW1tZXJcIik7XG4vKipcbiAqIEJhc2UgYWJzdHJhY3QgaW50ZXJuYWwgY2xhc3MgZm9yIGluc3RydW1lbnRpbmcgbm9kZSBhbmQgd2ViIHBsdWdpbnNcbiAqL1xuY2xhc3MgSW5zdHJ1bWVudGF0aW9uQWJzdHJhY3Qge1xuICAgIGNvbnN0cnVjdG9yKGluc3RydW1lbnRhdGlvbk5hbWUsIGluc3RydW1lbnRhdGlvblZlcnNpb24sIGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uTmFtZSA9IGluc3RydW1lbnRhdGlvbk5hbWU7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uVmVyc2lvbiA9IGluc3RydW1lbnRhdGlvblZlcnNpb247XG4gICAgICAgIC8qIEFwaSB0byB3cmFwIGluc3RydW1lbnRlZCBtZXRob2QgKi9cbiAgICAgICAgdGhpcy5fd3JhcCA9IHNoaW1tZXIud3JhcDtcbiAgICAgICAgLyogQXBpIHRvIHVud3JhcCBpbnN0cnVtZW50ZWQgbWV0aG9kcyAqL1xuICAgICAgICB0aGlzLl91bndyYXAgPSBzaGltbWVyLnVud3JhcDtcbiAgICAgICAgLyogQXBpIHRvIG1hc3Mgd3JhcCBpbnN0cnVtZW50ZWQgbWV0aG9kICovXG4gICAgICAgIHRoaXMuX21hc3NXcmFwID0gc2hpbW1lci5tYXNzV3JhcDtcbiAgICAgICAgLyogQXBpIHRvIG1hc3MgdW53cmFwIGluc3RydW1lbnRlZCBtZXRob2RzICovXG4gICAgICAgIHRoaXMuX21hc3NVbndyYXAgPSBzaGltbWVyLm1hc3NVbndyYXA7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IE9iamVjdC5hc3NpZ24oeyBlbmFibGVkOiB0cnVlIH0sIGNvbmZpZyk7XG4gICAgICAgIHRoaXMuX2xvZ2dlciA9IHRoaXMuX2NvbmZpZy5sb2dnZXIgfHwgbmV3IGFwaS5Ob29wTG9nZ2VyKCk7XG4gICAgICAgIHRoaXMuX3RyYWNlciA9IGFwaS50cmFjZS5nZXRUcmFjZXIoaW5zdHJ1bWVudGF0aW9uTmFtZSwgaW5zdHJ1bWVudGF0aW9uVmVyc2lvbik7XG4gICAgICAgIHRoaXMuX21ldGVyID0gYXBpX21ldHJpY3NfMS5tZXRyaWNzLmdldE1ldGVyKGluc3RydW1lbnRhdGlvbk5hbWUsIGluc3RydW1lbnRhdGlvblZlcnNpb24pO1xuICAgIH1cbiAgICAvKiBSZXR1cm5zIG1ldGVyICovXG4gICAgZ2V0IG1ldGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbWV0ZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgTWV0ZXJQcm92aWRlciB0byB0aGlzIHBsdWdpblxuICAgICAqIEBwYXJhbSBtZXRlclByb3ZpZGVyXG4gICAgICovXG4gICAgc2V0TWV0ZXJQcm92aWRlcihtZXRlclByb3ZpZGVyKSB7XG4gICAgICAgIHRoaXMuX21ldGVyID0gbWV0ZXJQcm92aWRlci5nZXRNZXRlcih0aGlzLmluc3RydW1lbnRhdGlvbk5hbWUsIHRoaXMuaW5zdHJ1bWVudGF0aW9uVmVyc2lvbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgVHJhY2VQcm92aWRlciB0byB0aGlzIHBsdWdpblxuICAgICAqIEBwYXJhbSB0cmFjZXJQcm92aWRlclxuICAgICAqL1xuICAgIHNldFRyYWNlclByb3ZpZGVyKHRyYWNlclByb3ZpZGVyKSB7XG4gICAgICAgIHRoaXMuX3RyYWNlciA9IHRyYWNlclByb3ZpZGVyLmdldFRyYWNlcih0aGlzLmluc3RydW1lbnRhdGlvbk5hbWUsIHRoaXMuaW5zdHJ1bWVudGF0aW9uVmVyc2lvbik7XG4gICAgfVxuICAgIC8qIFJldHVybnMgdHJhY2VyICovXG4gICAgZ2V0IHRyYWNlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYWNlcjtcbiAgICB9XG59XG5leHBvcnRzLkluc3RydW1lbnRhdGlvbkFic3RyYWN0ID0gSW5zdHJ1bWVudGF0aW9uQWJzdHJhY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVtZW50YXRpb24uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./old/autoLoader */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/old/autoLoader.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz81ZGE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL29sZC9hdXRvTG9hZGVyXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstrumentationBase = void 0;\nconst instrumentation_1 = __webpack_require__(/*! ../../instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js\");\n/**\n * Base abstract class for instrumenting web plugins\n */\nclass InstrumentationBase extends instrumentation_1.InstrumentationAbstract {\n    constructor(instrumentationName, instrumentationVersion, config = {}) {\n        super(instrumentationName, instrumentationVersion, config);\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        if (this._config.enabled) {\n            this.enable();\n        }\n    }\n}\nexports.InstrumentationBase = InstrumentationBase;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luc3RydW1lbnRhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvaW5zdHJ1bWVudGF0aW9uLmpzP2JiNjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnN0cnVtZW50YXRpb25CYXNlID0gdm9pZCAwO1xuY29uc3QgaW5zdHJ1bWVudGF0aW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vaW5zdHJ1bWVudGF0aW9uXCIpO1xuLyoqXG4gKiBCYXNlIGFic3RyYWN0IGNsYXNzIGZvciBpbnN0cnVtZW50aW5nIHdlYiBwbHVnaW5zXG4gKi9cbmNsYXNzIEluc3RydW1lbnRhdGlvbkJhc2UgZXh0ZW5kcyBpbnN0cnVtZW50YXRpb25fMS5JbnN0cnVtZW50YXRpb25BYnN0cmFjdCB7XG4gICAgY29uc3RydWN0b3IoaW5zdHJ1bWVudGF0aW9uTmFtZSwgaW5zdHJ1bWVudGF0aW9uVmVyc2lvbiwgY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIoaW5zdHJ1bWVudGF0aW9uTmFtZSwgaW5zdHJ1bWVudGF0aW9uVmVyc2lvbiwgY29uZmlnKTtcbiAgICAgICAgdGhpcy5pbnN0cnVtZW50YXRpb25OYW1lID0gaW5zdHJ1bWVudGF0aW9uTmFtZTtcbiAgICAgICAgdGhpcy5pbnN0cnVtZW50YXRpb25WZXJzaW9uID0gaW5zdHJ1bWVudGF0aW9uVmVyc2lvbjtcbiAgICAgICAgaWYgKHRoaXMuX2NvbmZpZy5lbmFibGVkKSB7XG4gICAgICAgICAgICB0aGlzLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5JbnN0cnVtZW50YXRpb25CYXNlID0gSW5zdHJ1bWVudGF0aW9uQmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/old/autoLoader.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/old/autoLoader.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadOldPlugins = void 0;\n/**\n * Loads provided web plugins\n * @param pluginsNode\n * @param pluginsWeb\n * @param logger\n * @param tracerProvider\n * @return returns function to disable all plugins\n */\nfunction loadOldPlugins(pluginsNode, pluginsWeb, logger, tracerProvider) {\n    pluginsWeb.forEach(plugin => {\n        plugin.enable([], tracerProvider, logger);\n    });\n    return () => {\n        pluginsWeb.forEach(plugin => {\n            plugin.disable();\n        });\n    };\n}\nexports.loadOldPlugins = loadOldPlugins;\n//# sourceMappingURL=autoLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL29sZC9hdXRvTG9hZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9vbGQvYXV0b0xvYWRlci5qcz83NzMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9hZE9sZFBsdWdpbnMgPSB2b2lkIDA7XG4vKipcbiAqIExvYWRzIHByb3ZpZGVkIHdlYiBwbHVnaW5zXG4gKiBAcGFyYW0gcGx1Z2luc05vZGVcbiAqIEBwYXJhbSBwbHVnaW5zV2ViXG4gKiBAcGFyYW0gbG9nZ2VyXG4gKiBAcGFyYW0gdHJhY2VyUHJvdmlkZXJcbiAqIEByZXR1cm4gcmV0dXJucyBmdW5jdGlvbiB0byBkaXNhYmxlIGFsbCBwbHVnaW5zXG4gKi9cbmZ1bmN0aW9uIGxvYWRPbGRQbHVnaW5zKHBsdWdpbnNOb2RlLCBwbHVnaW5zV2ViLCBsb2dnZXIsIHRyYWNlclByb3ZpZGVyKSB7XG4gICAgcGx1Z2luc1dlYi5mb3JFYWNoKHBsdWdpbiA9PiB7XG4gICAgICAgIHBsdWdpbi5lbmFibGUoW10sIHRyYWNlclByb3ZpZGVyLCBsb2dnZXIpO1xuICAgIH0pO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHBsdWdpbnNXZWIuZm9yRWFjaChwbHVnaW4gPT4ge1xuICAgICAgICAgICAgcGx1Z2luLmRpc2FibGUoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cbmV4cG9ydHMubG9hZE9sZFBsdWdpbnMgPSBsb2FkT2xkUGx1Z2lucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dG9Mb2FkZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/old/autoLoader.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/types.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/types.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL3R5cGVzLmpzP2UzMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/utils.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapped = exports.safeExecuteInTheMiddleAsync = exports.safeExecuteInTheMiddle = void 0;\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nfunction safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\nexports.safeExecuteInTheMiddle = safeExecuteInTheMiddle;\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nasync function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = await execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\nexports.safeExecuteInTheMiddleAsync = safeExecuteInTheMiddleAsync;\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\nexports.isWrapped = isWrapped;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy91dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL3V0aWxzLmpzPzRhYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1dyYXBwZWQgPSBleHBvcnRzLnNhZmVFeGVjdXRlSW5UaGVNaWRkbGVBc3luYyA9IGV4cG9ydHMuc2FmZUV4ZWN1dGVJblRoZU1pZGRsZSA9IHZvaWQgMDtcbi8qKlxuICogZnVuY3Rpb24gdG8gZXhlY3V0ZSBwYXRjaGVkIGZ1bmN0aW9uIGFuZCBiZWluZyBhYmxlIHRvIGNhdGNoIGVycm9yc1xuICogQHBhcmFtIGV4ZWN1dGUgLSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICogQHBhcmFtIG9uRmluaXNoIC0gY2FsbGJhY2sgdG8gcnVuIHdoZW4gZXhlY3V0ZSBmaW5pc2hlc1xuICovXG5mdW5jdGlvbiBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlKGV4ZWN1dGUsIG9uRmluaXNoLCBwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgIGxldCBlcnJvcjtcbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IGV4ZWN1dGUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgZXJyb3IgPSBlO1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgb25GaW5pc2goZXJyb3IsIHJlc3VsdCk7XG4gICAgICAgIGlmIChlcnJvciAmJiAhcHJldmVudFRocm93aW5nRXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuZXhwb3J0cy5zYWZlRXhlY3V0ZUluVGhlTWlkZGxlID0gc2FmZUV4ZWN1dGVJblRoZU1pZGRsZTtcbi8qKlxuICogQXN5bmMgZnVuY3Rpb24gdG8gZXhlY3V0ZSBwYXRjaGVkIGZ1bmN0aW9uIGFuZCBiZWluZyBhYmxlIHRvIGNhdGNoIGVycm9yc1xuICogQHBhcmFtIGV4ZWN1dGUgLSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICogQHBhcmFtIG9uRmluaXNoIC0gY2FsbGJhY2sgdG8gcnVuIHdoZW4gZXhlY3V0ZSBmaW5pc2hlc1xuICovXG5hc3luYyBmdW5jdGlvbiBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlQXN5bmMoZXhlY3V0ZSwgb25GaW5pc2gsIHByZXZlbnRUaHJvd2luZ0Vycm9yKSB7XG4gICAgbGV0IGVycm9yO1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzdWx0ID0gYXdhaXQgZXhlY3V0ZSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBlcnJvciA9IGU7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBvbkZpbmlzaChlcnJvciwgcmVzdWx0KTtcbiAgICAgICAgaWYgKGVycm9yICYmICFwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLnNhZmVFeGVjdXRlSW5UaGVNaWRkbGVBc3luYyA9IHNhZmVFeGVjdXRlSW5UaGVNaWRkbGVBc3luYztcbi8qKlxuICogQ2hlY2tzIGlmIGNlcnRhaW4gZnVuY3Rpb24gaGFzIGJlZW4gYWxyZWFkeSB3cmFwcGVkXG4gKiBAcGFyYW0gZnVuY1xuICovXG5mdW5jdGlvbiBpc1dyYXBwZWQoZnVuYykge1xuICAgIHJldHVybiAodHlwZW9mIGZ1bmMgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgdHlwZW9mIGZ1bmMuX19vcmlnaW5hbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICB0eXBlb2YgZnVuYy5fX3Vud3JhcCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICBmdW5jLl9fd3JhcHBlZCA9PT0gdHJ1ZSk7XG59XG5leHBvcnRzLmlzV3JhcHBlZCA9IGlzV3JhcHBlZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseObserverMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\nconst ObserverResult_1 = __webpack_require__(/*! ./ObserverResult */ \"./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js\");\nconst NOOP_CALLBACK = () => { };\n/**\n * This is a SDK implementation of Base Observer Metric.\n * All observers should extend this class\n */\nclass BaseObserverMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, metricKind, instrumentationLibrary, callback) {\n        super(name, options, metricKind, resource, instrumentationLibrary);\n        this._processor = _processor;\n        this._callback = callback || NOOP_CALLBACK;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundObserver(labels, this._disabled, this._valueType, this._logger, this._processor.aggregatorFor(this._descriptor));\n    }\n    async getMetricRecord() {\n        const observerResult = new ObserverResult_1.ObserverResult();\n        await this._callback(observerResult);\n        this._processResults(observerResult);\n        return super.getMetricRecord();\n    }\n    _processResults(observerResult) {\n        observerResult.values.forEach((value, labels) => {\n            const instrument = this.bind(labels);\n            instrument.update(value);\n        });\n    }\n    observation(value) {\n        return {\n            value,\n            observer: this,\n        };\n    }\n}\nexports.BaseObserverMetric = BaseObserverMetric;\n//# sourceMappingURL=BaseObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmFzZU9ic2VydmVyTWV0cmljLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL0Jhc2VPYnNlcnZlck1ldHJpYy5qcz80MzBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNlT2JzZXJ2ZXJNZXRyaWMgPSB2b2lkIDA7XG5jb25zdCBCb3VuZEluc3RydW1lbnRfMSA9IHJlcXVpcmUoXCIuL0JvdW5kSW5zdHJ1bWVudFwiKTtcbmNvbnN0IE1ldHJpY18xID0gcmVxdWlyZShcIi4vTWV0cmljXCIpO1xuY29uc3QgT2JzZXJ2ZXJSZXN1bHRfMSA9IHJlcXVpcmUoXCIuL09ic2VydmVyUmVzdWx0XCIpO1xuY29uc3QgTk9PUF9DQUxMQkFDSyA9ICgpID0+IHsgfTtcbi8qKlxuICogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBCYXNlIE9ic2VydmVyIE1ldHJpYy5cbiAqIEFsbCBvYnNlcnZlcnMgc2hvdWxkIGV4dGVuZCB0aGlzIGNsYXNzXG4gKi9cbmNsYXNzIEJhc2VPYnNlcnZlck1ldHJpYyBleHRlbmRzIE1ldHJpY18xLk1ldHJpYyB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgb3B0aW9ucywgX3Byb2Nlc3NvciwgcmVzb3VyY2UsIG1ldHJpY0tpbmQsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIG1ldHJpY0tpbmQsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KTtcbiAgICAgICAgdGhpcy5fcHJvY2Vzc29yID0gX3Byb2Nlc3NvcjtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBOT09QX0NBTExCQUNLO1xuICAgIH1cbiAgICBfbWFrZUluc3RydW1lbnQobGFiZWxzKSB7XG4gICAgICAgIHJldHVybiBuZXcgQm91bmRJbnN0cnVtZW50XzEuQm91bmRPYnNlcnZlcihsYWJlbHMsIHRoaXMuX2Rpc2FibGVkLCB0aGlzLl92YWx1ZVR5cGUsIHRoaXMuX2xvZ2dlciwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICBhc3luYyBnZXRNZXRyaWNSZWNvcmQoKSB7XG4gICAgICAgIGNvbnN0IG9ic2VydmVyUmVzdWx0ID0gbmV3IE9ic2VydmVyUmVzdWx0XzEuT2JzZXJ2ZXJSZXN1bHQoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5fY2FsbGJhY2sob2JzZXJ2ZXJSZXN1bHQpO1xuICAgICAgICB0aGlzLl9wcm9jZXNzUmVzdWx0cyhvYnNlcnZlclJlc3VsdCk7XG4gICAgICAgIHJldHVybiBzdXBlci5nZXRNZXRyaWNSZWNvcmQoKTtcbiAgICB9XG4gICAgX3Byb2Nlc3NSZXN1bHRzKG9ic2VydmVyUmVzdWx0KSB7XG4gICAgICAgIG9ic2VydmVyUmVzdWx0LnZhbHVlcy5mb3JFYWNoKCh2YWx1ZSwgbGFiZWxzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnN0cnVtZW50ID0gdGhpcy5iaW5kKGxhYmVscyk7XG4gICAgICAgICAgICBpbnN0cnVtZW50LnVwZGF0ZSh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvYnNlcnZhdGlvbih2YWx1ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBvYnNlcnZlcjogdGhpcyxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLkJhc2VPYnNlcnZlck1ldHJpYyA9IEJhc2VPYnNlcnZlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VPYnNlcnZlck1ldHJpYy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchObserver = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst BatchObserverResult_1 = __webpack_require__(/*! ./BatchObserverResult */ \"./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js\");\nconst NOOP_CALLBACK = () => { };\nconst MAX_TIMEOUT_UPDATE_MS = 500;\n/** This is a SDK implementation of Batch Observer. */\nclass BatchObserver {\n    constructor(options, callback) {\n        var _a, _b;\n        this._logger = (_a = options.logger) !== null && _a !== void 0 ? _a : new api_1.NoopLogger();\n        this._maxTimeoutUpdateMS = (_b = options.maxTimeoutUpdateMS) !== null && _b !== void 0 ? _b : MAX_TIMEOUT_UPDATE_MS;\n        this._callback = callback || NOOP_CALLBACK;\n    }\n    collect() {\n        this._logger.debug('getMetricRecord - start');\n        return new Promise(resolve => {\n            const observerResult = new BatchObserverResult_1.BatchObserverResult();\n            // cancels after MAX_TIMEOUT_MS - no more waiting for results\n            const timer = setTimeout(() => {\n                observerResult.cancelled = true;\n                // remove callback to prevent user from updating the values later if\n                // for any reason the observerBatchResult will be referenced\n                observerResult.onObserveCalled();\n                resolve();\n                this._logger.debug('getMetricRecord - timeout');\n            }, this._maxTimeoutUpdateMS);\n            // sets callback for each \"observe\" method\n            observerResult.onObserveCalled(() => {\n                clearTimeout(timer);\n                resolve();\n                this._logger.debug('getMetricRecord - end');\n            });\n            // calls the BatchObserverResult callback\n            this._callback(observerResult);\n        });\n    }\n}\nexports.BatchObserver = BatchObserver;\n//# sourceMappingURL=BatchObserver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmF0Y2hPYnNlcnZlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9CYXRjaE9ic2VydmVyLmpzPzZmZjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXRjaE9ic2VydmVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgQmF0Y2hPYnNlcnZlclJlc3VsdF8xID0gcmVxdWlyZShcIi4vQmF0Y2hPYnNlcnZlclJlc3VsdFwiKTtcbmNvbnN0IE5PT1BfQ0FMTEJBQ0sgPSAoKSA9PiB7IH07XG5jb25zdCBNQVhfVElNRU9VVF9VUERBVEVfTVMgPSA1MDA7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBCYXRjaCBPYnNlcnZlci4gKi9cbmNsYXNzIEJhdGNoT2JzZXJ2ZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHRoaXMuX2xvZ2dlciA9IChfYSA9IG9wdGlvbnMubG9nZ2VyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgYXBpXzEuTm9vcExvZ2dlcigpO1xuICAgICAgICB0aGlzLl9tYXhUaW1lb3V0VXBkYXRlTVMgPSAoX2IgPSBvcHRpb25zLm1heFRpbWVvdXRVcGRhdGVNUykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogTUFYX1RJTUVPVVRfVVBEQVRFX01TO1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrIHx8IE5PT1BfQ0FMTEJBQ0s7XG4gICAgfVxuICAgIGNvbGxlY3QoKSB7XG4gICAgICAgIHRoaXMuX2xvZ2dlci5kZWJ1ZygnZ2V0TWV0cmljUmVjb3JkIC0gc3RhcnQnKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb2JzZXJ2ZXJSZXN1bHQgPSBuZXcgQmF0Y2hPYnNlcnZlclJlc3VsdF8xLkJhdGNoT2JzZXJ2ZXJSZXN1bHQoKTtcbiAgICAgICAgICAgIC8vIGNhbmNlbHMgYWZ0ZXIgTUFYX1RJTUVPVVRfTVMgLSBubyBtb3JlIHdhaXRpbmcgZm9yIHJlc3VsdHNcbiAgICAgICAgICAgIGNvbnN0IHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXJSZXN1bHQuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgY2FsbGJhY2sgdG8gcHJldmVudCB1c2VyIGZyb20gdXBkYXRpbmcgdGhlIHZhbHVlcyBsYXRlciBpZlxuICAgICAgICAgICAgICAgIC8vIGZvciBhbnkgcmVhc29uIHRoZSBvYnNlcnZlckJhdGNoUmVzdWx0IHdpbGwgYmUgcmVmZXJlbmNlZFxuICAgICAgICAgICAgICAgIG9ic2VydmVyUmVzdWx0Lm9uT2JzZXJ2ZUNhbGxlZCgpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2dnZXIuZGVidWcoJ2dldE1ldHJpY1JlY29yZCAtIHRpbWVvdXQnKTtcbiAgICAgICAgICAgIH0sIHRoaXMuX21heFRpbWVvdXRVcGRhdGVNUyk7XG4gICAgICAgICAgICAvLyBzZXRzIGNhbGxiYWNrIGZvciBlYWNoIFwib2JzZXJ2ZVwiIG1ldGhvZFxuICAgICAgICAgICAgb2JzZXJ2ZXJSZXN1bHQub25PYnNlcnZlQ2FsbGVkKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2dnZXIuZGVidWcoJ2dldE1ldHJpY1JlY29yZCAtIGVuZCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBjYWxscyB0aGUgQmF0Y2hPYnNlcnZlclJlc3VsdCBjYWxsYmFja1xuICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2sob2JzZXJ2ZXJSZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkJhdGNoT2JzZXJ2ZXIgPSBCYXRjaE9ic2VydmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmF0Y2hPYnNlcnZlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchObserverResult = void 0;\n/**\n * Implementation of api BatchObserverResult\n */\nclass BatchObserverResult {\n    constructor() {\n        /**\n         * Cancels the further updates.\n         * This is used to prevent updating the value of result that took too\n         * long to update. For example to avoid update after timeout.\n         * See {@link BatchObserver.collect}\n         */\n        this.cancelled = false;\n    }\n    /**\n     * used to save a callback that will be called after the observations are\n     *     updated\n     * @param [callback]\n     */\n    onObserveCalled(callback) {\n        this._callback = callback;\n    }\n    observe(labels, observations) {\n        if (this.cancelled || !this._callback) {\n            return;\n        }\n        observations.forEach(observation => {\n            observation.observer.bind(labels).update(observation.value);\n        });\n        if (!this._immediate) {\n            this._immediate = setImmediate(() => {\n                if (typeof this._callback === 'function') {\n                    this._callback();\n                    // prevent user from updating the values later if for any reason\n                    // the observerBatchResult will be referenced and then try to use\n                    this._callback = undefined;\n                }\n            });\n        }\n    }\n}\nexports.BatchObserverResult = BatchObserverResult;\n//# sourceMappingURL=BatchObserverResult.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmF0Y2hPYnNlcnZlclJlc3VsdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9CYXRjaE9ic2VydmVyUmVzdWx0LmpzPzFhOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXRjaE9ic2VydmVyUmVzdWx0ID0gdm9pZCAwO1xuLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiBhcGkgQmF0Y2hPYnNlcnZlclJlc3VsdFxuICovXG5jbGFzcyBCYXRjaE9ic2VydmVyUmVzdWx0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbmNlbHMgdGhlIGZ1cnRoZXIgdXBkYXRlcy5cbiAgICAgICAgICogVGhpcyBpcyB1c2VkIHRvIHByZXZlbnQgdXBkYXRpbmcgdGhlIHZhbHVlIG9mIHJlc3VsdCB0aGF0IHRvb2sgdG9vXG4gICAgICAgICAqIGxvbmcgdG8gdXBkYXRlLiBGb3IgZXhhbXBsZSB0byBhdm9pZCB1cGRhdGUgYWZ0ZXIgdGltZW91dC5cbiAgICAgICAgICogU2VlIHtAbGluayBCYXRjaE9ic2VydmVyLmNvbGxlY3R9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNhbmNlbGxlZCA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiB1c2VkIHRvIHNhdmUgYSBjYWxsYmFjayB0aGF0IHdpbGwgYmUgY2FsbGVkIGFmdGVyIHRoZSBvYnNlcnZhdGlvbnMgYXJlXG4gICAgICogICAgIHVwZGF0ZWRcbiAgICAgKiBAcGFyYW0gW2NhbGxiYWNrXVxuICAgICAqL1xuICAgIG9uT2JzZXJ2ZUNhbGxlZChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cbiAgICBvYnNlcnZlKGxhYmVscywgb2JzZXJ2YXRpb25zKSB7XG4gICAgICAgIGlmICh0aGlzLmNhbmNlbGxlZCB8fCAhdGhpcy5fY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBvYnNlcnZhdGlvbnMuZm9yRWFjaChvYnNlcnZhdGlvbiA9PiB7XG4gICAgICAgICAgICBvYnNlcnZhdGlvbi5vYnNlcnZlci5iaW5kKGxhYmVscykudXBkYXRlKG9ic2VydmF0aW9uLnZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdGhpcy5faW1tZWRpYXRlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbW1lZGlhdGUgPSBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5fY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gcHJldmVudCB1c2VyIGZyb20gdXBkYXRpbmcgdGhlIHZhbHVlcyBsYXRlciBpZiBmb3IgYW55IHJlYXNvblxuICAgICAgICAgICAgICAgICAgICAvLyB0aGUgb2JzZXJ2ZXJCYXRjaFJlc3VsdCB3aWxsIGJlIHJlZmVyZW5jZWQgYW5kIHRoZW4gdHJ5IHRvIHVzZVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYWxsYmFjayA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQmF0Y2hPYnNlcnZlclJlc3VsdCA9IEJhdGNoT2JzZXJ2ZXJSZXN1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXRjaE9ic2VydmVyUmVzdWx0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoundObserver = exports.BoundValueRecorder = exports.BoundUpDownCounter = exports.BoundCounter = exports.BaseBoundInstrument = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\n/**\n * This class represent the base to BoundInstrument, which is responsible for generating\n * the TimeSeries.\n */\nclass BaseBoundInstrument {\n    constructor(labels, logger, _disabled, _valueType, _aggregator) {\n        this._disabled = _disabled;\n        this._valueType = _valueType;\n        this._aggregator = _aggregator;\n        this._labels = labels;\n        this._logger = logger;\n    }\n    update(value) {\n        if (this._disabled)\n            return;\n        if (typeof value !== 'number') {\n            this._logger.error(`Metric cannot accept a non-number value for ${Object.values(this._labels)}.`);\n            return;\n        }\n        if (this._valueType === api.ValueType.INT && !Number.isInteger(value)) {\n            this._logger.warn(`INT value type cannot accept a floating-point value for ${Object.values(this._labels)}, ignoring the fractional digits.`);\n            value = Math.trunc(value);\n        }\n        this._aggregator.update(value);\n    }\n    getLabels() {\n        return this._labels;\n    }\n    getAggregator() {\n        return this._aggregator;\n    }\n}\nexports.BaseBoundInstrument = BaseBoundInstrument;\n/**\n * BoundCounter allows the SDK to observe/record a single metric event. The\n * value of single instrument in the `Counter` associated with specified Labels.\n */\nclass BoundCounter extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, logger, aggregator) {\n        super(labels, logger, disabled, valueType, aggregator);\n    }\n    add(value) {\n        if (value < 0) {\n            this._logger.error(`Counter cannot descend for ${Object.values(this._labels)}`);\n            return;\n        }\n        this.update(value);\n    }\n}\nexports.BoundCounter = BoundCounter;\n/**\n * BoundUpDownCounter allows the SDK to observe/record a single metric event.\n * The value of single instrument in the `UpDownCounter` associated with\n * specified Labels.\n */\nclass BoundUpDownCounter extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, logger, aggregator) {\n        super(labels, logger, disabled, valueType, aggregator);\n    }\n    add(value) {\n        this.update(value);\n    }\n}\nexports.BoundUpDownCounter = BoundUpDownCounter;\n/**\n * BoundMeasure is an implementation of the {@link BoundMeasure} interface.\n */\nclass BoundValueRecorder extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, logger, aggregator) {\n        super(labels, logger, disabled, valueType, aggregator);\n    }\n    record(value) {\n        this.update(value);\n    }\n}\nexports.BoundValueRecorder = BoundValueRecorder;\n/**\n * BoundObserver is an implementation of the {@link BoundObserver} interface.\n */\nclass BoundObserver extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, logger, aggregator) {\n        super(labels, logger, disabled, valueType, aggregator);\n    }\n}\nexports.BoundObserver = BoundObserver;\n//# sourceMappingURL=BoundInstrument.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQm91bmRJbnN0cnVtZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL0JvdW5kSW5zdHJ1bWVudC5qcz8wYTRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQm91bmRPYnNlcnZlciA9IGV4cG9ydHMuQm91bmRWYWx1ZVJlY29yZGVyID0gZXhwb3J0cy5Cb3VuZFVwRG93bkNvdW50ZXIgPSBleHBvcnRzLkJvdW5kQ291bnRlciA9IGV4cG9ydHMuQmFzZUJvdW5kSW5zdHJ1bWVudCA9IHZvaWQgMDtcbmNvbnN0IGFwaSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGktbWV0cmljc1wiKTtcbi8qKlxuICogVGhpcyBjbGFzcyByZXByZXNlbnQgdGhlIGJhc2UgdG8gQm91bmRJbnN0cnVtZW50LCB3aGljaCBpcyByZXNwb25zaWJsZSBmb3IgZ2VuZXJhdGluZ1xuICogdGhlIFRpbWVTZXJpZXMuXG4gKi9cbmNsYXNzIEJhc2VCb3VuZEluc3RydW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxhYmVscywgbG9nZ2VyLCBfZGlzYWJsZWQsIF92YWx1ZVR5cGUsIF9hZ2dyZWdhdG9yKSB7XG4gICAgICAgIHRoaXMuX2Rpc2FibGVkID0gX2Rpc2FibGVkO1xuICAgICAgICB0aGlzLl92YWx1ZVR5cGUgPSBfdmFsdWVUeXBlO1xuICAgICAgICB0aGlzLl9hZ2dyZWdhdG9yID0gX2FnZ3JlZ2F0b3I7XG4gICAgICAgIHRoaXMuX2xhYmVscyA9IGxhYmVscztcbiAgICAgICAgdGhpcy5fbG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWUpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc2FibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhpcy5fbG9nZ2VyLmVycm9yKGBNZXRyaWMgY2Fubm90IGFjY2VwdCBhIG5vbi1udW1iZXIgdmFsdWUgZm9yICR7T2JqZWN0LnZhbHVlcyh0aGlzLl9sYWJlbHMpfS5gKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fdmFsdWVUeXBlID09PSBhcGkuVmFsdWVUeXBlLklOVCAmJiAhTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2xvZ2dlci53YXJuKGBJTlQgdmFsdWUgdHlwZSBjYW5ub3QgYWNjZXB0IGEgZmxvYXRpbmctcG9pbnQgdmFsdWUgZm9yICR7T2JqZWN0LnZhbHVlcyh0aGlzLl9sYWJlbHMpfSwgaWdub3JpbmcgdGhlIGZyYWN0aW9uYWwgZGlnaXRzLmApO1xuICAgICAgICAgICAgdmFsdWUgPSBNYXRoLnRydW5jKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9hZ2dyZWdhdG9yLnVwZGF0ZSh2YWx1ZSk7XG4gICAgfVxuICAgIGdldExhYmVscygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhYmVscztcbiAgICB9XG4gICAgZ2V0QWdncmVnYXRvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FnZ3JlZ2F0b3I7XG4gICAgfVxufVxuZXhwb3J0cy5CYXNlQm91bmRJbnN0cnVtZW50ID0gQmFzZUJvdW5kSW5zdHJ1bWVudDtcbi8qKlxuICogQm91bmRDb3VudGVyIGFsbG93cyB0aGUgU0RLIHRvIG9ic2VydmUvcmVjb3JkIGEgc2luZ2xlIG1ldHJpYyBldmVudC4gVGhlXG4gKiB2YWx1ZSBvZiBzaW5nbGUgaW5zdHJ1bWVudCBpbiB0aGUgYENvdW50ZXJgIGFzc29jaWF0ZWQgd2l0aCBzcGVjaWZpZWQgTGFiZWxzLlxuICovXG5jbGFzcyBCb3VuZENvdW50ZXIgZXh0ZW5kcyBCYXNlQm91bmRJbnN0cnVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihsYWJlbHMsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGxvZ2dlciwgYWdncmVnYXRvcikge1xuICAgICAgICBzdXBlcihsYWJlbHMsIGxvZ2dlciwgZGlzYWJsZWQsIHZhbHVlVHlwZSwgYWdncmVnYXRvcik7XG4gICAgfVxuICAgIGFkZCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPCAwKSB7XG4gICAgICAgICAgICB0aGlzLl9sb2dnZXIuZXJyb3IoYENvdW50ZXIgY2Fubm90IGRlc2NlbmQgZm9yICR7T2JqZWN0LnZhbHVlcyh0aGlzLl9sYWJlbHMpfWApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlKHZhbHVlKTtcbiAgICB9XG59XG5leHBvcnRzLkJvdW5kQ291bnRlciA9IEJvdW5kQ291bnRlcjtcbi8qKlxuICogQm91bmRVcERvd25Db3VudGVyIGFsbG93cyB0aGUgU0RLIHRvIG9ic2VydmUvcmVjb3JkIGEgc2luZ2xlIG1ldHJpYyBldmVudC5cbiAqIFRoZSB2YWx1ZSBvZiBzaW5nbGUgaW5zdHJ1bWVudCBpbiB0aGUgYFVwRG93bkNvdW50ZXJgIGFzc29jaWF0ZWQgd2l0aFxuICogc3BlY2lmaWVkIExhYmVscy5cbiAqL1xuY2xhc3MgQm91bmRVcERvd25Db3VudGVyIGV4dGVuZHMgQmFzZUJvdW5kSW5zdHJ1bWVudCB7XG4gICAgY29uc3RydWN0b3IobGFiZWxzLCBkaXNhYmxlZCwgdmFsdWVUeXBlLCBsb2dnZXIsIGFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgc3VwZXIobGFiZWxzLCBsb2dnZXIsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpO1xuICAgIH1cbiAgICBhZGQodmFsdWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGUodmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQm91bmRVcERvd25Db3VudGVyID0gQm91bmRVcERvd25Db3VudGVyO1xuLyoqXG4gKiBCb3VuZE1lYXN1cmUgaXMgYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlIHtAbGluayBCb3VuZE1lYXN1cmV9IGludGVyZmFjZS5cbiAqL1xuY2xhc3MgQm91bmRWYWx1ZVJlY29yZGVyIGV4dGVuZHMgQmFzZUJvdW5kSW5zdHJ1bWVudCB7XG4gICAgY29uc3RydWN0b3IobGFiZWxzLCBkaXNhYmxlZCwgdmFsdWVUeXBlLCBsb2dnZXIsIGFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgc3VwZXIobGFiZWxzLCBsb2dnZXIsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpO1xuICAgIH1cbiAgICByZWNvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGUodmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQm91bmRWYWx1ZVJlY29yZGVyID0gQm91bmRWYWx1ZVJlY29yZGVyO1xuLyoqXG4gKiBCb3VuZE9ic2VydmVyIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgQm91bmRPYnNlcnZlcn0gaW50ZXJmYWNlLlxuICovXG5jbGFzcyBCb3VuZE9ic2VydmVyIGV4dGVuZHMgQmFzZUJvdW5kSW5zdHJ1bWVudCB7XG4gICAgY29uc3RydWN0b3IobGFiZWxzLCBkaXNhYmxlZCwgdmFsdWVUeXBlLCBsb2dnZXIsIGFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgc3VwZXIobGFiZWxzLCBsb2dnZXIsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpO1xuICAgIH1cbn1cbmV4cG9ydHMuQm91bmRPYnNlcnZlciA9IEJvdW5kT2JzZXJ2ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb3VuZEluc3RydW1lbnQuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CounterMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of Counter Metric. */\nclass CounterMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.COUNTER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundCounter(labels, this._disabled, this._valueType, this._logger, this._processor.aggregatorFor(this._descriptor));\n    }\n    /**\n     * Adds the given value to the current value. Values cannot be negative.\n     * @param value the value to add.\n     * @param [labels = {}] key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    add(value, labels = {}) {\n        this.bind(labels).add(value);\n    }\n}\nexports.CounterMetric = CounterMetric;\n//# sourceMappingURL=CounterMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQ291bnRlck1ldHJpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9Db3VudGVyTWV0cmljLmpzP2JhMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db3VudGVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQm91bmRJbnN0cnVtZW50XzEgPSByZXF1aXJlKFwiLi9Cb3VuZEluc3RydW1lbnRcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuY29uc3QgTWV0cmljXzEgPSByZXF1aXJlKFwiLi9NZXRyaWNcIik7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBDb3VudGVyIE1ldHJpYy4gKi9cbmNsYXNzIENvdW50ZXJNZXRyaWMgZXh0ZW5kcyBNZXRyaWNfMS5NZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIF9wcm9jZXNzb3IsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHR5cGVzXzEuTWV0cmljS2luZC5DT1VOVEVSLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSk7XG4gICAgICAgIHRoaXMuX3Byb2Nlc3NvciA9IF9wcm9jZXNzb3I7XG4gICAgfVxuICAgIF9tYWtlSW5zdHJ1bWVudChsYWJlbHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCb3VuZEluc3RydW1lbnRfMS5Cb3VuZENvdW50ZXIobGFiZWxzLCB0aGlzLl9kaXNhYmxlZCwgdGhpcy5fdmFsdWVUeXBlLCB0aGlzLl9sb2dnZXIsIHRoaXMuX3Byb2Nlc3Nvci5hZ2dyZWdhdG9yRm9yKHRoaXMuX2Rlc2NyaXB0b3IpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIGN1cnJlbnQgdmFsdWUuIFZhbHVlcyBjYW5ub3QgYmUgbmVnYXRpdmUuXG4gICAgICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byBhZGQuXG4gICAgICogQHBhcmFtIFtsYWJlbHMgPSB7fV0ga2V5LXZhbHVlcyBwYWlycyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggYSBzcGVjaWZpYyBtZXRyaWNcbiAgICAgKiAgICAgdGhhdCB5b3Ugd2FudCB0byByZWNvcmQuXG4gICAgICovXG4gICAgYWRkKHZhbHVlLCBsYWJlbHMgPSB7fSkge1xuICAgICAgICB0aGlzLmJpbmQobGFiZWxzKS5hZGQodmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ291bnRlck1ldHJpYyA9IENvdW50ZXJNZXRyaWM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db3VudGVyTWV0cmljLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Meter.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Meter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Meter = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst BatchObserver_1 = __webpack_require__(/*! ./BatchObserver */ \"./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js\");\nconst CounterMetric_1 = __webpack_require__(/*! ./CounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\");\nconst Controller_1 = __webpack_require__(/*! ./export/Controller */ \"./node_modules/@opentelemetry/metrics/build/src/export/Controller.js\");\nconst NoopExporter_1 = __webpack_require__(/*! ./export/NoopExporter */ \"./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js\");\nconst Processor_1 = __webpack_require__(/*! ./export/Processor */ \"./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\");\nconst SumObserverMetric_1 = __webpack_require__(/*! ./SumObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/types.js\");\nconst UpDownCounterMetric_1 = __webpack_require__(/*! ./UpDownCounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\");\nconst UpDownSumObserverMetric_1 = __webpack_require__(/*! ./UpDownSumObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js\");\nconst ValueObserverMetric_1 = __webpack_require__(/*! ./ValueObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\");\nconst ValueRecorderMetric_1 = __webpack_require__(/*! ./ValueRecorderMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * Meter is an implementation of the {@link Meter} interface.\n */\nclass Meter {\n    /**\n     * Constructs a new Meter instance.\n     */\n    constructor(instrumentationLibrary, config = {}) {\n        var _a;\n        this._batchObservers = [];\n        this._metrics = new Map();\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        const mergedConfig = merge({}, types_1.DEFAULT_CONFIG, config);\n        this._logger = mergedConfig.logger || new core_1.ConsoleLogger(config.logLevel);\n        this._processor = (_a = mergedConfig.processor) !== null && _a !== void 0 ? _a : new Processor_1.UngroupedProcessor();\n        this._resource =\n            mergedConfig.resource || resources_1.Resource.createTelemetrySDKResource();\n        this._instrumentationLibrary = instrumentationLibrary;\n        // start the push controller\n        const exporter = mergedConfig.exporter || new NoopExporter_1.NoopExporter();\n        const interval = mergedConfig.interval;\n        this._controller = new Controller_1.PushController(this, exporter, interval);\n    }\n    /**\n     * Creates and returns a new {@link ValueRecorder}.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createValueRecorder(name, options) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_VALUE_RECORDER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({ logger: this._logger }, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const valueRecorder = new ValueRecorderMetric_1.ValueRecorderMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, valueRecorder);\n        return valueRecorder;\n    }\n    /**\n     * Creates a new counter metric. Generally, this kind of metric when the\n     * value is a quantity, the sum is of primary interest, and the event count\n     * and value distribution are not of primary interest.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createCounter(name, options) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_COUNTER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({ logger: this._logger }, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const counter = new CounterMetric_1.CounterMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, counter);\n        return counter;\n    }\n    /**\n     * Creates a new `UpDownCounter` metric. UpDownCounter is a synchronous\n     * instrument and very similar to Counter except that Add(increment)\n     * supports negative increments. It is generally useful for capturing changes\n     * in an amount of resources used, or any quantity that rises and falls\n     * during a request.\n     *\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createUpDownCounter(name, options) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_COUNTER_METRIC;\n        }\n        const opt = Object.assign(Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), { logger: this._logger }), options);\n        const upDownCounter = new UpDownCounterMetric_1.UpDownCounterMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, upDownCounter);\n        return upDownCounter;\n    }\n    /**\n     * Creates a new `ValueObserver` metric.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    createValueObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_VALUE_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({ logger: this._logger }, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const valueObserver = new ValueObserverMetric_1.ValueObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, valueObserver);\n        return valueObserver;\n    }\n    createSumObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_SUM_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({ logger: this._logger }, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const sumObserver = new SumObserverMetric_1.SumObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, sumObserver);\n        return sumObserver;\n    }\n    /**\n     * Creates a new `UpDownSumObserver` metric.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    createUpDownSumObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            this._logger.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_UP_DOWN_SUM_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({ logger: this._logger }, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const upDownSumObserver = new UpDownSumObserverMetric_1.UpDownSumObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, upDownSumObserver);\n        return upDownSumObserver;\n    }\n    /**\n     * Creates a new batch observer.\n     * @param callback the batch observer callback\n     * @param [options] the batch options.\n     */\n    createBatchObserver(callback, options = {}) {\n        const opt = Object.assign({ logger: this._logger }, options);\n        const batchObserver = new BatchObserver_1.BatchObserver(opt, callback);\n        this._batchObservers.push(batchObserver);\n        return batchObserver;\n    }\n    /**\n     * Collects all the metrics created with this `Meter` for export.\n     *\n     * Utilizes the processor to create checkpoints of the current values in\n     * each aggregator belonging to the metrics that were created with this\n     * meter instance.\n     */\n    async collect() {\n        // call batch observers first\n        const observations = this._batchObservers.map(observer => {\n            return observer.collect();\n        });\n        await Promise.all(observations);\n        // after this all remaining metrics can be run\n        const metrics = Array.from(this._metrics.values()).map(metric => {\n            return metric.getMetricRecord();\n        });\n        await Promise.all(metrics).then(records => {\n            records.forEach(metrics => {\n                metrics.forEach(metric => this._processor.process(metric));\n            });\n        });\n    }\n    getProcessor() {\n        return this._processor;\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._controller.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n    /**\n     * Registers metric to register.\n     * @param name The name of the metric.\n     * @param metric The metric to register.\n     */\n    _registerMetric(name, metric) {\n        if (this._metrics.has(name)) {\n            this._logger.error(`A metric with the name ${name} has already been registered.`);\n            return;\n        }\n        this._metrics.set(name, metric);\n    }\n    /**\n     * Ensure a metric name conforms to the following rules:\n     *\n     * 1. They are non-empty strings\n     *\n     * 2. The first character must be non-numeric, non-space, non-punctuation\n     *\n     * 3. Subsequent characters must be belong to the alphanumeric characters,\n     *    '_', '.', and '-'.\n     *\n     * Names are case insensitive\n     *\n     * @param name Name of metric to be created\n     */\n    _isValidName(name) {\n        return Boolean(name.match(/^[a-z][a-z0-9_.-]*$/i));\n    }\n}\nexports.Meter = Meter;\n//# sourceMappingURL=Meter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Meter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeterProvider = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@opentelemetry/metrics/build/src/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/types.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * This class represents a meter provider which platform libraries can extend\n */\nclass MeterProvider {\n    constructor(config = {}) {\n        var _a, _b;\n        this._meters = new Map();\n        this._shuttingDownPromise = Promise.resolve();\n        this._isShutdown = false;\n        const mergedConfig = merge({}, types_1.DEFAULT_CONFIG, config);\n        this.logger = (_a = mergedConfig.logger) !== null && _a !== void 0 ? _a : new core_1.ConsoleLogger(mergedConfig.logLevel);\n        this.resource = (_b = mergedConfig.resource) !== null && _b !== void 0 ? _b : resources_1.Resource.createTelemetrySDKResource();\n        this._config = Object.assign({}, mergedConfig, {\n            logger: this.logger,\n            resource: this.resource,\n        });\n    }\n    /**\n     * Returns a Meter, creating one if one with the given name and version is not already created\n     *\n     * @returns Meter A Meter with the given name and version\n     */\n    getMeter(name, version, config) {\n        const key = `${name}@${version || ''}`;\n        if (!this._meters.has(key)) {\n            this._meters.set(key, new _1.Meter({ name, version }, config || this._config));\n        }\n        return this._meters.get(key);\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return Promise.all(Array.from(this._meters, ([_, meter]) => meter.shutdown()));\n            })\n                .then(() => {\n                if (this._config.exporter) {\n                    return this._config.exporter.shutdown();\n                }\n                return;\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.MeterProvider = MeterProvider;\n//# sourceMappingURL=MeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0ZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9NZXRlclByb3ZpZGVyLmpzPzYwMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXRlclByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG5jb25zdCByZXNvdXJjZXNfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9yZXNvdXJjZXNcIik7XG5jb25zdCBfMSA9IHJlcXVpcmUoXCIuXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuY29uc3QgbWVyZ2UgPSByZXF1aXJlKFwibG9kYXNoLm1lcmdlXCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgYSBtZXRlciBwcm92aWRlciB3aGljaCBwbGF0Zm9ybSBsaWJyYXJpZXMgY2FuIGV4dGVuZFxuICovXG5jbGFzcyBNZXRlclByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB0aGlzLl9tZXRlcnMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IGZhbHNlO1xuICAgICAgICBjb25zdCBtZXJnZWRDb25maWcgPSBtZXJnZSh7fSwgdHlwZXNfMS5ERUZBVUxUX0NPTkZJRywgY29uZmlnKTtcbiAgICAgICAgdGhpcy5sb2dnZXIgPSAoX2EgPSBtZXJnZWRDb25maWcubG9nZ2VyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgY29yZV8xLkNvbnNvbGVMb2dnZXIobWVyZ2VkQ29uZmlnLmxvZ0xldmVsKTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IChfYiA9IG1lcmdlZENvbmZpZy5yZXNvdXJjZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogcmVzb3VyY2VzXzEuUmVzb3VyY2UuY3JlYXRlVGVsZW1ldHJ5U0RLUmVzb3VyY2UoKTtcbiAgICAgICAgdGhpcy5fY29uZmlnID0gT2JqZWN0LmFzc2lnbih7fSwgbWVyZ2VkQ29uZmlnLCB7XG4gICAgICAgICAgICBsb2dnZXI6IHRoaXMubG9nZ2VyLFxuICAgICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgTWV0ZXIsIGNyZWF0aW5nIG9uZSBpZiBvbmUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBhbmQgdmVyc2lvbiBpcyBub3QgYWxyZWFkeSBjcmVhdGVkXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBNZXRlciBBIE1ldGVyIHdpdGggdGhlIGdpdmVuIG5hbWUgYW5kIHZlcnNpb25cbiAgICAgKi9cbiAgICBnZXRNZXRlcihuYW1lLCB2ZXJzaW9uLCBjb25maWcpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gYCR7bmFtZX1AJHt2ZXJzaW9uIHx8ICcnfWA7XG4gICAgICAgIGlmICghdGhpcy5fbWV0ZXJzLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICB0aGlzLl9tZXRlcnMuc2V0KGtleSwgbmV3IF8xLk1ldGVyKHsgbmFtZSwgdmVyc2lvbiB9LCBjb25maWcgfHwgdGhpcy5fY29uZmlnKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX21ldGVycy5nZXQoa2V5KTtcbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NodXRkb3duKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pc1NodXRkb3duID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChBcnJheS5mcm9tKHRoaXMuX21ldGVycywgKFtfLCBtZXRlcl0pID0+IG1ldGVyLnNodXRkb3duKCkpKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jb25maWcuZXhwb3J0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5leHBvcnRlci5zaHV0ZG93bigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgfVxufVxuZXhwb3J0cy5NZXRlclByb3ZpZGVyID0gTWV0ZXJQcm92aWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1ldGVyUHJvdmlkZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Metric.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Metric.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metric = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst Utils_1 = __webpack_require__(/*! ./Utils */ \"./node_modules/@opentelemetry/metrics/build/src/Utils.js\");\n/** This is a SDK implementation of {@link Metric} interface. */\nclass Metric {\n    constructor(_name, _options, _kind, resource, instrumentationLibrary) {\n        var _a;\n        this._name = _name;\n        this._options = _options;\n        this._kind = _kind;\n        this.resource = resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n        this._instruments = new Map();\n        this._disabled = !!_options.disabled;\n        this._valueType =\n            typeof _options.valueType === 'number'\n                ? _options.valueType\n                : api.ValueType.DOUBLE;\n        this._logger = (_a = _options.logger) !== null && _a !== void 0 ? _a : new api_1.NoopLogger();\n        this._boundaries = _options.boundaries;\n        this._descriptor = this._getMetricDescriptor();\n    }\n    /**\n     * Returns an Instrument associated with specified Labels.\n     * It is recommended to keep a reference to the Instrument instead of always\n     * calling this method for each operation.\n     * @param labels key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    bind(labels) {\n        const hash = Utils_1.hashLabels(labels);\n        if (this._instruments.has(hash))\n            return this._instruments.get(hash);\n        const instrument = this._makeInstrument(labels);\n        this._instruments.set(hash, instrument);\n        return instrument;\n    }\n    /**\n     * Removes the Instrument from the metric, if it is present.\n     * @param labels key-values pairs that are associated with a specific metric.\n     */\n    unbind(labels) {\n        this._instruments.delete(Utils_1.hashLabels(labels));\n    }\n    /**\n     * Clears all Instruments from the Metric.\n     */\n    clear() {\n        this._instruments.clear();\n    }\n    /**\n     * Returns kind of metric\n     */\n    getKind() {\n        return this._kind;\n    }\n    getMetricRecord() {\n        return new Promise(resolve => {\n            resolve(Array.from(this._instruments.values()).map(instrument => ({\n                descriptor: this._descriptor,\n                labels: instrument.getLabels(),\n                aggregator: instrument.getAggregator(),\n                resource: this.resource,\n                instrumentationLibrary: this.instrumentationLibrary,\n            })));\n        });\n    }\n    _getMetricDescriptor() {\n        return Object.assign({ name: this._name, description: this._options.description || '', unit: this._options.unit || '1', metricKind: this._kind, valueType: this._valueType }, (this._boundaries && { boundaries: this._boundaries }));\n    }\n}\nexports.Metric = Metric;\n//# sourceMappingURL=Metric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0cmljLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL01ldHJpYy5qcz9mMDcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXRyaWMgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzXCIpO1xuY29uc3QgVXRpbHNfMSA9IHJlcXVpcmUoXCIuL1V0aWxzXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2Yge0BsaW5rIE1ldHJpY30gaW50ZXJmYWNlLiAqL1xuY2xhc3MgTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihfbmFtZSwgX29wdGlvbnMsIF9raW5kLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMuX25hbWUgPSBfbmFtZTtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9vcHRpb25zO1xuICAgICAgICB0aGlzLl9raW5kID0gX2tpbmQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByZXNvdXJjZTtcbiAgICAgICAgdGhpcy5pbnN0cnVtZW50YXRpb25MaWJyYXJ5ID0gaW5zdHJ1bWVudGF0aW9uTGlicmFyeTtcbiAgICAgICAgdGhpcy5faW5zdHJ1bWVudHMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX2Rpc2FibGVkID0gISFfb3B0aW9ucy5kaXNhYmxlZDtcbiAgICAgICAgdGhpcy5fdmFsdWVUeXBlID1cbiAgICAgICAgICAgIHR5cGVvZiBfb3B0aW9ucy52YWx1ZVR5cGUgPT09ICdudW1iZXInXG4gICAgICAgICAgICAgICAgPyBfb3B0aW9ucy52YWx1ZVR5cGVcbiAgICAgICAgICAgICAgICA6IGFwaS5WYWx1ZVR5cGUuRE9VQkxFO1xuICAgICAgICB0aGlzLl9sb2dnZXIgPSAoX2EgPSBfb3B0aW9ucy5sb2dnZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBhcGlfMS5Ob29wTG9nZ2VyKCk7XG4gICAgICAgIHRoaXMuX2JvdW5kYXJpZXMgPSBfb3B0aW9ucy5ib3VuZGFyaWVzO1xuICAgICAgICB0aGlzLl9kZXNjcmlwdG9yID0gdGhpcy5fZ2V0TWV0cmljRGVzY3JpcHRvcigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIEluc3RydW1lbnQgYXNzb2NpYXRlZCB3aXRoIHNwZWNpZmllZCBMYWJlbHMuXG4gICAgICogSXQgaXMgcmVjb21tZW5kZWQgdG8ga2VlcCBhIHJlZmVyZW5jZSB0byB0aGUgSW5zdHJ1bWVudCBpbnN0ZWFkIG9mIGFsd2F5c1xuICAgICAqIGNhbGxpbmcgdGhpcyBtZXRob2QgZm9yIGVhY2ggb3BlcmF0aW9uLlxuICAgICAqIEBwYXJhbSBsYWJlbHMga2V5LXZhbHVlcyBwYWlycyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggYSBzcGVjaWZpYyBtZXRyaWNcbiAgICAgKiAgICAgdGhhdCB5b3Ugd2FudCB0byByZWNvcmQuXG4gICAgICovXG4gICAgYmluZChsYWJlbHMpIHtcbiAgICAgICAgY29uc3QgaGFzaCA9IFV0aWxzXzEuaGFzaExhYmVscyhsYWJlbHMpO1xuICAgICAgICBpZiAodGhpcy5faW5zdHJ1bWVudHMuaGFzKGhhc2gpKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RydW1lbnRzLmdldChoYXNoKTtcbiAgICAgICAgY29uc3QgaW5zdHJ1bWVudCA9IHRoaXMuX21ha2VJbnN0cnVtZW50KGxhYmVscyk7XG4gICAgICAgIHRoaXMuX2luc3RydW1lbnRzLnNldChoYXNoLCBpbnN0cnVtZW50KTtcbiAgICAgICAgcmV0dXJuIGluc3RydW1lbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgdGhlIEluc3RydW1lbnQgZnJvbSB0aGUgbWV0cmljLCBpZiBpdCBpcyBwcmVzZW50LlxuICAgICAqIEBwYXJhbSBsYWJlbHMga2V5LXZhbHVlcyBwYWlycyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggYSBzcGVjaWZpYyBtZXRyaWMuXG4gICAgICovXG4gICAgdW5iaW5kKGxhYmVscykge1xuICAgICAgICB0aGlzLl9pbnN0cnVtZW50cy5kZWxldGUoVXRpbHNfMS5oYXNoTGFiZWxzKGxhYmVscykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgYWxsIEluc3RydW1lbnRzIGZyb20gdGhlIE1ldHJpYy5cbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5faW5zdHJ1bWVudHMuY2xlYXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBraW5kIG9mIG1ldHJpY1xuICAgICAqL1xuICAgIGdldEtpbmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9raW5kO1xuICAgIH1cbiAgICBnZXRNZXRyaWNSZWNvcmQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoQXJyYXkuZnJvbSh0aGlzLl9pbnN0cnVtZW50cy52YWx1ZXMoKSkubWFwKGluc3RydW1lbnQgPT4gKHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdG9yOiB0aGlzLl9kZXNjcmlwdG9yLFxuICAgICAgICAgICAgICAgIGxhYmVsczogaW5zdHJ1bWVudC5nZXRMYWJlbHMoKSxcbiAgICAgICAgICAgICAgICBhZ2dyZWdhdG9yOiBpbnN0cnVtZW50LmdldEFnZ3JlZ2F0b3IoKSxcbiAgICAgICAgICAgICAgICByZXNvdXJjZTogdGhpcy5yZXNvdXJjZSxcbiAgICAgICAgICAgICAgICBpbnN0cnVtZW50YXRpb25MaWJyYXJ5OiB0aGlzLmluc3RydW1lbnRhdGlvbkxpYnJhcnksXG4gICAgICAgICAgICB9KSkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2dldE1ldHJpY0Rlc2NyaXB0b3IoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgbmFtZTogdGhpcy5fbmFtZSwgZGVzY3JpcHRpb246IHRoaXMuX29wdGlvbnMuZGVzY3JpcHRpb24gfHwgJycsIHVuaXQ6IHRoaXMuX29wdGlvbnMudW5pdCB8fCAnMScsIG1ldHJpY0tpbmQ6IHRoaXMuX2tpbmQsIHZhbHVlVHlwZTogdGhpcy5fdmFsdWVUeXBlIH0sICh0aGlzLl9ib3VuZGFyaWVzICYmIHsgYm91bmRhcmllczogdGhpcy5fYm91bmRhcmllcyB9KSk7XG4gICAgfVxufVxuZXhwb3J0cy5NZXRyaWMgPSBNZXRyaWM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXRyaWMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Metric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObserverResult = void 0;\n/**\n * Implementation of {@link TypeObserverResult}\n */\nclass ObserverResult {\n    constructor() {\n        this.values = new Map();\n    }\n    observe(value, labels) {\n        this.values.set(labels, value);\n    }\n}\nexports.ObserverResult = ObserverResult;\n//# sourceMappingURL=ObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvT2JzZXJ2ZXJSZXN1bHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvT2JzZXJ2ZXJSZXN1bHQuanM/NDZhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9ic2VydmVyUmVzdWx0ID0gdm9pZCAwO1xuLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiB7QGxpbmsgVHlwZU9ic2VydmVyUmVzdWx0fVxuICovXG5jbGFzcyBPYnNlcnZlclJlc3VsdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudmFsdWVzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBvYnNlcnZlKHZhbHVlLCBsYWJlbHMpIHtcbiAgICAgICAgdGhpcy52YWx1ZXMuc2V0KGxhYmVscywgdmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuT2JzZXJ2ZXJSZXN1bHQgPSBPYnNlcnZlclJlc3VsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9ic2VydmVyUmVzdWx0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SumObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of SumObserver Metric. */\nclass SumObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.SUM_OBSERVER, instrumentationLibrary, callback);\n    }\n    _processResults(observerResult) {\n        observerResult.values.forEach((value, labels) => {\n            const instrument = this.bind(labels);\n            // SumObserver is monotonic which means it should only accept values\n            // greater or equal then previous value\n            const previous = instrument.getAggregator().toPoint();\n            let previousValue = -Infinity;\n            if (previous.timestamp[0] !== 0 || previous.timestamp[1] !== 0) {\n                previousValue = previous.value;\n            }\n            if (value >= previousValue) {\n                instrument.update(value);\n            }\n        });\n    }\n}\nexports.SumObserverMetric = SumObserverMetric;\n//# sourceMappingURL=SumObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvU3VtT2JzZXJ2ZXJNZXRyaWMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvU3VtT2JzZXJ2ZXJNZXRyaWMuanM/YzBiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1bU9ic2VydmVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQmFzZU9ic2VydmVyTWV0cmljXzEgPSByZXF1aXJlKFwiLi9CYXNlT2JzZXJ2ZXJNZXRyaWNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgU3VtT2JzZXJ2ZXIgTWV0cmljLiAqL1xuY2xhc3MgU3VtT2JzZXJ2ZXJNZXRyaWMgZXh0ZW5kcyBCYXNlT2JzZXJ2ZXJNZXRyaWNfMS5CYXNlT2JzZXJ2ZXJNZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIHR5cGVzXzEuTWV0cmljS2luZC5TVU1fT0JTRVJWRVIsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgX3Byb2Nlc3NSZXN1bHRzKG9ic2VydmVyUmVzdWx0KSB7XG4gICAgICAgIG9ic2VydmVyUmVzdWx0LnZhbHVlcy5mb3JFYWNoKCh2YWx1ZSwgbGFiZWxzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnN0cnVtZW50ID0gdGhpcy5iaW5kKGxhYmVscyk7XG4gICAgICAgICAgICAvLyBTdW1PYnNlcnZlciBpcyBtb25vdG9uaWMgd2hpY2ggbWVhbnMgaXQgc2hvdWxkIG9ubHkgYWNjZXB0IHZhbHVlc1xuICAgICAgICAgICAgLy8gZ3JlYXRlciBvciBlcXVhbCB0aGVuIHByZXZpb3VzIHZhbHVlXG4gICAgICAgICAgICBjb25zdCBwcmV2aW91cyA9IGluc3RydW1lbnQuZ2V0QWdncmVnYXRvcigpLnRvUG9pbnQoKTtcbiAgICAgICAgICAgIGxldCBwcmV2aW91c1ZhbHVlID0gLUluZmluaXR5O1xuICAgICAgICAgICAgaWYgKHByZXZpb3VzLnRpbWVzdGFtcFswXSAhPT0gMCB8fCBwcmV2aW91cy50aW1lc3RhbXBbMV0gIT09IDApIHtcbiAgICAgICAgICAgICAgICBwcmV2aW91c1ZhbHVlID0gcHJldmlvdXMudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUgPj0gcHJldmlvdXNWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGluc3RydW1lbnQudXBkYXRlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdW1PYnNlcnZlck1ldHJpYyA9IFN1bU9ic2VydmVyTWV0cmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VtT2JzZXJ2ZXJNZXRyaWMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpDownCounterMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of UpDownCounter Metric. */\nclass UpDownCounterMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.UP_DOWN_COUNTER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundUpDownCounter(labels, this._disabled, this._valueType, this._logger, this._processor.aggregatorFor(this._descriptor));\n    }\n    /**\n     * Adds the given value to the current value. Values cannot be negative.\n     * @param value the value to add.\n     * @param [labels = {}] key-values pairs that are associated with a specific\n     *     metric that you want to record.\n     */\n    add(value, labels = {}) {\n        this.bind(labels).add(value);\n    }\n}\nexports.UpDownCounterMetric = UpDownCounterMetric;\n//# sourceMappingURL=UpDownCounterMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duQ291bnRlck1ldHJpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9VcERvd25Db3VudGVyTWV0cmljLmpzPzJjY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcERvd25Db3VudGVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQm91bmRJbnN0cnVtZW50XzEgPSByZXF1aXJlKFwiLi9Cb3VuZEluc3RydW1lbnRcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuY29uc3QgTWV0cmljXzEgPSByZXF1aXJlKFwiLi9NZXRyaWNcIik7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBVcERvd25Db3VudGVyIE1ldHJpYy4gKi9cbmNsYXNzIFVwRG93bkNvdW50ZXJNZXRyaWMgZXh0ZW5kcyBNZXRyaWNfMS5NZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIF9wcm9jZXNzb3IsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHR5cGVzXzEuTWV0cmljS2luZC5VUF9ET1dOX0NPVU5URVIsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KTtcbiAgICAgICAgdGhpcy5fcHJvY2Vzc29yID0gX3Byb2Nlc3NvcjtcbiAgICB9XG4gICAgX21ha2VJbnN0cnVtZW50KGxhYmVscykge1xuICAgICAgICByZXR1cm4gbmV3IEJvdW5kSW5zdHJ1bWVudF8xLkJvdW5kVXBEb3duQ291bnRlcihsYWJlbHMsIHRoaXMuX2Rpc2FibGVkLCB0aGlzLl92YWx1ZVR5cGUsIHRoaXMuX2xvZ2dlciwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRzIHRoZSBnaXZlbiB2YWx1ZSB0byB0aGUgY3VycmVudCB2YWx1ZS4gVmFsdWVzIGNhbm5vdCBiZSBuZWdhdGl2ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIGFkZC5cbiAgICAgKiBAcGFyYW0gW2xhYmVscyA9IHt9XSBrZXktdmFsdWVzIHBhaXJzIHRoYXQgYXJlIGFzc29jaWF0ZWQgd2l0aCBhIHNwZWNpZmljXG4gICAgICogICAgIG1ldHJpYyB0aGF0IHlvdSB3YW50IHRvIHJlY29yZC5cbiAgICAgKi9cbiAgICBhZGQodmFsdWUsIGxhYmVscyA9IHt9KSB7XG4gICAgICAgIHRoaXMuYmluZChsYWJlbHMpLmFkZCh2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5VcERvd25Db3VudGVyTWV0cmljID0gVXBEb3duQ291bnRlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVwRG93bkNvdW50ZXJNZXRyaWMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpDownSumObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of UpDownSumObserver Metric. */\nclass UpDownSumObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.UP_DOWN_SUM_OBSERVER, instrumentationLibrary, callback);\n    }\n}\nexports.UpDownSumObserverMetric = UpDownSumObserverMetric;\n//# sourceMappingURL=UpDownSumObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWMuanM/Mjg4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwRG93blN1bU9ic2VydmVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQmFzZU9ic2VydmVyTWV0cmljXzEgPSByZXF1aXJlKFwiLi9CYXNlT2JzZXJ2ZXJNZXRyaWNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgVXBEb3duU3VtT2JzZXJ2ZXIgTWV0cmljLiAqL1xuY2xhc3MgVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWMgZXh0ZW5kcyBCYXNlT2JzZXJ2ZXJNZXRyaWNfMS5CYXNlT2JzZXJ2ZXJNZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIHR5cGVzXzEuTWV0cmljS2luZC5VUF9ET1dOX1NVTV9PQlNFUlZFUiwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSwgY2FsbGJhY2spO1xuICAgIH1cbn1cbmV4cG9ydHMuVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWMgPSBVcERvd25TdW1PYnNlcnZlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVwRG93blN1bU9ic2VydmVyTWV0cmljLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Utils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashLabels = exports.notNull = void 0;\n/**\n * Type guard to remove nulls from arrays\n *\n * @param value value to be checked for null equality\n */\nfunction notNull(value) {\n    return value !== null;\n}\nexports.notNull = notNull;\n/**\n * Converting the unordered labels into unique identifier string.\n * @param labels user provided unordered Labels.\n */\nfunction hashLabels(labels) {\n    let keys = Object.keys(labels);\n    if (keys.length === 0)\n        return '';\n    keys = keys.sort();\n    return keys.reduce((result, key) => {\n        if (result.length > 2) {\n            result += ',';\n        }\n        return (result += key + ':' + labels[key]);\n    }, '|#');\n}\nexports.hashLabels = hashLabels;\n//# sourceMappingURL=Utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXRpbHMuanM/MDA1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hMYWJlbHMgPSBleHBvcnRzLm5vdE51bGwgPSB2b2lkIDA7XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gcmVtb3ZlIG51bGxzIGZyb20gYXJyYXlzXG4gKlxuICogQHBhcmFtIHZhbHVlIHZhbHVlIHRvIGJlIGNoZWNrZWQgZm9yIG51bGwgZXF1YWxpdHlcbiAqL1xuZnVuY3Rpb24gbm90TnVsbCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbDtcbn1cbmV4cG9ydHMubm90TnVsbCA9IG5vdE51bGw7XG4vKipcbiAqIENvbnZlcnRpbmcgdGhlIHVub3JkZXJlZCBsYWJlbHMgaW50byB1bmlxdWUgaWRlbnRpZmllciBzdHJpbmcuXG4gKiBAcGFyYW0gbGFiZWxzIHVzZXIgcHJvdmlkZWQgdW5vcmRlcmVkIExhYmVscy5cbiAqL1xuZnVuY3Rpb24gaGFzaExhYmVscyhsYWJlbHMpIHtcbiAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG4gICAgaWYgKGtleXMubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gJyc7XG4gICAga2V5cyA9IGtleXMuc29ydCgpO1xuICAgIHJldHVybiBrZXlzLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gJywnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAocmVzdWx0ICs9IGtleSArICc6JyArIGxhYmVsc1trZXldKTtcbiAgICB9LCAnfCMnKTtcbn1cbmV4cG9ydHMuaGFzaExhYmVscyA9IGhhc2hMYWJlbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VdGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of Value Observer Metric. */\nclass ValueObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.VALUE_OBSERVER, instrumentationLibrary, callback);\n    }\n}\nexports.ValueObserverMetric = ValueObserverMetric;\n//# sourceMappingURL=ValueObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVmFsdWVPYnNlcnZlck1ldHJpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9WYWx1ZU9ic2VydmVyTWV0cmljLmpzP2NlZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZhbHVlT2JzZXJ2ZXJNZXRyaWMgPSB2b2lkIDA7XG5jb25zdCBCYXNlT2JzZXJ2ZXJNZXRyaWNfMSA9IHJlcXVpcmUoXCIuL0Jhc2VPYnNlcnZlck1ldHJpY1wiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi9leHBvcnQvdHlwZXNcIik7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBWYWx1ZSBPYnNlcnZlciBNZXRyaWMuICovXG5jbGFzcyBWYWx1ZU9ic2VydmVyTWV0cmljIGV4dGVuZHMgQmFzZU9ic2VydmVyTWV0cmljXzEuQmFzZU9ic2VydmVyTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBwcm9jZXNzb3IsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5LCBjYWxsYmFjaykge1xuICAgICAgICBzdXBlcihuYW1lLCBvcHRpb25zLCBwcm9jZXNzb3IsIHJlc291cmNlLCB0eXBlc18xLk1ldHJpY0tpbmQuVkFMVUVfT0JTRVJWRVIsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKTtcbiAgICB9XG59XG5leHBvcnRzLlZhbHVlT2JzZXJ2ZXJNZXRyaWMgPSBWYWx1ZU9ic2VydmVyTWV0cmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VmFsdWVPYnNlcnZlck1ldHJpYy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueRecorderMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of Value Recorder Metric. */\nclass ValueRecorderMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.VALUE_RECORDER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundValueRecorder(labels, this._disabled, this._valueType, this._logger, this._processor.aggregatorFor(this._descriptor));\n    }\n    record(value, labels = {}) {\n        this.bind(labels).record(value);\n    }\n}\nexports.ValueRecorderMetric = ValueRecorderMetric;\n//# sourceMappingURL=ValueRecorderMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVmFsdWVSZWNvcmRlck1ldHJpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9WYWx1ZVJlY29yZGVyTWV0cmljLmpzPzI3NzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WYWx1ZVJlY29yZGVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQm91bmRJbnN0cnVtZW50XzEgPSByZXF1aXJlKFwiLi9Cb3VuZEluc3RydW1lbnRcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuY29uc3QgTWV0cmljXzEgPSByZXF1aXJlKFwiLi9NZXRyaWNcIik7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBWYWx1ZSBSZWNvcmRlciBNZXRyaWMuICovXG5jbGFzcyBWYWx1ZVJlY29yZGVyTWV0cmljIGV4dGVuZHMgTWV0cmljXzEuTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBfcHJvY2Vzc29yLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSkge1xuICAgICAgICBzdXBlcihuYW1lLCBvcHRpb25zLCB0eXBlc18xLk1ldHJpY0tpbmQuVkFMVUVfUkVDT1JERVIsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KTtcbiAgICAgICAgdGhpcy5fcHJvY2Vzc29yID0gX3Byb2Nlc3NvcjtcbiAgICB9XG4gICAgX21ha2VJbnN0cnVtZW50KGxhYmVscykge1xuICAgICAgICByZXR1cm4gbmV3IEJvdW5kSW5zdHJ1bWVudF8xLkJvdW5kVmFsdWVSZWNvcmRlcihsYWJlbHMsIHRoaXMuX2Rpc2FibGVkLCB0aGlzLl92YWx1ZVR5cGUsIHRoaXMuX2xvZ2dlciwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICByZWNvcmQodmFsdWUsIGxhYmVscyA9IHt9KSB7XG4gICAgICAgIHRoaXMuYmluZChsYWJlbHMpLnJlY29yZCh2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5WYWx1ZVJlY29yZGVyTWV0cmljID0gVmFsdWVSZWNvcmRlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZhbHVlUmVjb3JkZXJNZXRyaWMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleMetricExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This is implementation of {@link MetricExporter} that prints metrics data to\n * the console. This class can be used for diagnostic purposes.\n */\nclass ConsoleMetricExporter {\n    export(metrics, resultCallback) {\n        for (const metric of metrics) {\n            console.log(metric.descriptor);\n            console.log(metric.labels);\n            const point = metric.aggregator.toPoint();\n            if (typeof point.value === 'number') {\n                console.log('value: ' + point.value);\n            }\n            else if (typeof point.value.buckets === 'object') {\n                const histogram = point.value;\n                console.log(`count: ${histogram.count}, sum: ${histogram.sum}, buckets: ${histogram.buckets}`);\n            }\n            else {\n                console.log(point.value);\n            }\n        }\n        return resultCallback({ code: core_1.ExportResultCode.SUCCESS });\n    }\n    shutdown() {\n        // By default does nothing\n        return Promise.resolve();\n    }\n}\nexports.ConsoleMetricExporter = ConsoleMetricExporter;\n//# sourceMappingURL=ConsoleMetricExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L0NvbnNvbGVNZXRyaWNFeHBvcnRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvQ29uc29sZU1ldHJpY0V4cG9ydGVyLmpzPzRiMjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTWV0cmljRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogVGhpcyBpcyBpbXBsZW1lbnRhdGlvbiBvZiB7QGxpbmsgTWV0cmljRXhwb3J0ZXJ9IHRoYXQgcHJpbnRzIG1ldHJpY3MgZGF0YSB0b1xuICogdGhlIGNvbnNvbGUuIFRoaXMgY2xhc3MgY2FuIGJlIHVzZWQgZm9yIGRpYWdub3N0aWMgcHVycG9zZXMuXG4gKi9cbmNsYXNzIENvbnNvbGVNZXRyaWNFeHBvcnRlciB7XG4gICAgZXhwb3J0KG1ldHJpY3MsIHJlc3VsdENhbGxiYWNrKSB7XG4gICAgICAgIGZvciAoY29uc3QgbWV0cmljIG9mIG1ldHJpY3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1ldHJpYy5kZXNjcmlwdG9yKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1ldHJpYy5sYWJlbHMpO1xuICAgICAgICAgICAgY29uc3QgcG9pbnQgPSBtZXRyaWMuYWdncmVnYXRvci50b1BvaW50KCk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHBvaW50LnZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd2YWx1ZTogJyArIHBvaW50LnZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwb2ludC52YWx1ZS5idWNrZXRzID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhpc3RvZ3JhbSA9IHBvaW50LnZhbHVlO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBjb3VudDogJHtoaXN0b2dyYW0uY291bnR9LCBzdW06ICR7aGlzdG9ncmFtLnN1bX0sIGJ1Y2tldHM6ICR7aGlzdG9ncmFtLmJ1Y2tldHN9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwb2ludC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdENhbGxiYWNrKHsgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuU1VDQ0VTUyB9KTtcbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbnNvbGVNZXRyaWNFeHBvcnRlciA9IENvbnNvbGVNZXRyaWNFeHBvcnRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnNvbGVNZXRyaWNFeHBvcnRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/Controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/Controller.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushController = exports.Controller = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst DEFAULT_EXPORT_INTERVAL = 60000;\nclass Controller {\n}\nexports.Controller = Controller;\n/** Controller organizes a periodic push of metric data. */\nclass PushController extends Controller {\n    constructor(_meter, _exporter, interval = DEFAULT_EXPORT_INTERVAL) {\n        super();\n        this._meter = _meter;\n        this._exporter = _exporter;\n        this._timer = setInterval(() => {\n            this._collect();\n        }, interval);\n        core_1.unrefTimer(this._timer);\n    }\n    shutdown() {\n        clearInterval(this._timer);\n        return this._collect();\n    }\n    async _collect() {\n        await this._meter.collect();\n        return new Promise(resolve => {\n            this._exporter.export(this._meter.getProcessor().checkPointSet(), result => {\n                var _a;\n                if (result.code !== core_1.ExportResultCode.SUCCESS) {\n                    core_1.globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error('PushController: export failed in _collect'));\n                }\n                resolve();\n            });\n        });\n    }\n}\nexports.PushController = PushController;\n//# sourceMappingURL=Controller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L0NvbnRyb2xsZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L0NvbnRyb2xsZXIuanM/YjQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB1c2hDb250cm9sbGVyID0gZXhwb3J0cy5Db250cm9sbGVyID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG5jb25zdCBERUZBVUxUX0VYUE9SVF9JTlRFUlZBTCA9IDYwMDAwO1xuY2xhc3MgQ29udHJvbGxlciB7XG59XG5leHBvcnRzLkNvbnRyb2xsZXIgPSBDb250cm9sbGVyO1xuLyoqIENvbnRyb2xsZXIgb3JnYW5pemVzIGEgcGVyaW9kaWMgcHVzaCBvZiBtZXRyaWMgZGF0YS4gKi9cbmNsYXNzIFB1c2hDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoX21ldGVyLCBfZXhwb3J0ZXIsIGludGVydmFsID0gREVGQVVMVF9FWFBPUlRfSU5URVJWQUwpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fbWV0ZXIgPSBfbWV0ZXI7XG4gICAgICAgIHRoaXMuX2V4cG9ydGVyID0gX2V4cG9ydGVyO1xuICAgICAgICB0aGlzLl90aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NvbGxlY3QoKTtcbiAgICAgICAgfSwgaW50ZXJ2YWwpO1xuICAgICAgICBjb3JlXzEudW5yZWZUaW1lcih0aGlzLl90aW1lcik7XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuX3RpbWVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbGxlY3QoKTtcbiAgICB9XG4gICAgYXN5bmMgX2NvbGxlY3QoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuX21ldGVyLmNvbGxlY3QoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgdGhpcy5fZXhwb3J0ZXIuZXhwb3J0KHRoaXMuX21ldGVyLmdldFByb2Nlc3NvcigpLmNoZWNrUG9pbnRTZXQoKSwgcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlICE9PSBjb3JlXzEuRXhwb3J0UmVzdWx0Q29kZS5TVUNDRVNTKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvcmVfMS5nbG9iYWxFcnJvckhhbmRsZXIoKF9hID0gcmVzdWx0LmVycm9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgRXJyb3IoJ1B1c2hDb250cm9sbGVyOiBleHBvcnQgZmFpbGVkIGluIF9jb2xsZWN0JykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5QdXNoQ29udHJvbGxlciA9IFB1c2hDb250cm9sbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udHJvbGxlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/Controller.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopExporter = void 0;\nclass NoopExporter {\n    // By default does nothing\n    export(_metrics, _resultCallback) { }\n    // By default does nothing\n    shutdown() {\n        return Promise.resolve();\n    }\n}\nexports.NoopExporter = NoopExporter;\n//# sourceMappingURL=NoopExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L05vb3BFeHBvcnRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvTm9vcEV4cG9ydGVyLmpzPzU2MjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob29wRXhwb3J0ZXIgPSB2b2lkIDA7XG5jbGFzcyBOb29wRXhwb3J0ZXIge1xuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgZXhwb3J0KF9tZXRyaWNzLCBfcmVzdWx0Q2FsbGJhY2spIHsgfVxuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG5leHBvcnRzLk5vb3BFeHBvcnRlciA9IE5vb3BFeHBvcnRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BFeHBvcnRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/Processor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/Processor.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UngroupedProcessor = exports.Processor = void 0;\nconst aggregators = __webpack_require__(/*! ./aggregators */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/**\n * Base class for all processor types.\n *\n * The processor is responsible for storing the aggregators and aggregated\n * values received from updates from metrics in the meter. The stored values\n * will be sent to an exporter for exporting.\n */\nclass Processor {\n    constructor() {\n        this._batchMap = new Map();\n    }\n    checkPointSet() {\n        return Array.from(this._batchMap.values());\n    }\n}\nexports.Processor = Processor;\n/**\n * Processor which retains all dimensions/labels. It accepts all records and\n * passes them for exporting.\n */\nclass UngroupedProcessor extends Processor {\n    aggregatorFor(metricDescriptor) {\n        switch (metricDescriptor.metricKind) {\n            case types_1.MetricKind.COUNTER:\n            case types_1.MetricKind.UP_DOWN_COUNTER:\n                return new aggregators.SumAggregator();\n            case types_1.MetricKind.SUM_OBSERVER:\n            case types_1.MetricKind.UP_DOWN_SUM_OBSERVER:\n            case types_1.MetricKind.VALUE_OBSERVER:\n                return new aggregators.LastValueAggregator();\n            case types_1.MetricKind.VALUE_RECORDER:\n                return new aggregators.HistogramAggregator(metricDescriptor.boundaries || [Infinity]);\n            default:\n                return new aggregators.LastValueAggregator();\n        }\n    }\n    process(record) {\n        const labels = Object.keys(record.labels)\n            .map(k => `${k}=${record.labels[k]}`)\n            .join(',');\n        this._batchMap.set(record.descriptor.name + labels, record);\n    }\n}\nexports.UngroupedProcessor = UngroupedProcessor;\n//# sourceMappingURL=Processor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L1Byb2Nlc3Nvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvUHJvY2Vzc29yLmpzP2U3YTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vbmdyb3VwZWRQcm9jZXNzb3IgPSBleHBvcnRzLlByb2Nlc3NvciA9IHZvaWQgMDtcbmNvbnN0IGFnZ3JlZ2F0b3JzID0gcmVxdWlyZShcIi4vYWdncmVnYXRvcnNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIGFsbCBwcm9jZXNzb3IgdHlwZXMuXG4gKlxuICogVGhlIHByb2Nlc3NvciBpcyByZXNwb25zaWJsZSBmb3Igc3RvcmluZyB0aGUgYWdncmVnYXRvcnMgYW5kIGFnZ3JlZ2F0ZWRcbiAqIHZhbHVlcyByZWNlaXZlZCBmcm9tIHVwZGF0ZXMgZnJvbSBtZXRyaWNzIGluIHRoZSBtZXRlci4gVGhlIHN0b3JlZCB2YWx1ZXNcbiAqIHdpbGwgYmUgc2VudCB0byBhbiBleHBvcnRlciBmb3IgZXhwb3J0aW5nLlxuICovXG5jbGFzcyBQcm9jZXNzb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9iYXRjaE1hcCA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgY2hlY2tQb2ludFNldCgpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fYmF0Y2hNYXAudmFsdWVzKCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuUHJvY2Vzc29yID0gUHJvY2Vzc29yO1xuLyoqXG4gKiBQcm9jZXNzb3Igd2hpY2ggcmV0YWlucyBhbGwgZGltZW5zaW9ucy9sYWJlbHMuIEl0IGFjY2VwdHMgYWxsIHJlY29yZHMgYW5kXG4gKiBwYXNzZXMgdGhlbSBmb3IgZXhwb3J0aW5nLlxuICovXG5jbGFzcyBVbmdyb3VwZWRQcm9jZXNzb3IgZXh0ZW5kcyBQcm9jZXNzb3Ige1xuICAgIGFnZ3JlZ2F0b3JGb3IobWV0cmljRGVzY3JpcHRvcikge1xuICAgICAgICBzd2l0Y2ggKG1ldHJpY0Rlc2NyaXB0b3IubWV0cmljS2luZCkge1xuICAgICAgICAgICAgY2FzZSB0eXBlc18xLk1ldHJpY0tpbmQuQ09VTlRFUjpcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5NZXRyaWNLaW5kLlVQX0RPV05fQ09VTlRFUjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGFnZ3JlZ2F0b3JzLlN1bUFnZ3JlZ2F0b3IoKTtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5NZXRyaWNLaW5kLlNVTV9PQlNFUlZFUjpcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5NZXRyaWNLaW5kLlVQX0RPV05fU1VNX09CU0VSVkVSOlxuICAgICAgICAgICAgY2FzZSB0eXBlc18xLk1ldHJpY0tpbmQuVkFMVUVfT0JTRVJWRVI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBhZ2dyZWdhdG9ycy5MYXN0VmFsdWVBZ2dyZWdhdG9yKCk7XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuTWV0cmljS2luZC5WQUxVRV9SRUNPUkRFUjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGFnZ3JlZ2F0b3JzLkhpc3RvZ3JhbUFnZ3JlZ2F0b3IobWV0cmljRGVzY3JpcHRvci5ib3VuZGFyaWVzIHx8IFtJbmZpbml0eV0pO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGFnZ3JlZ2F0b3JzLkxhc3RWYWx1ZUFnZ3JlZ2F0b3IoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcm9jZXNzKHJlY29yZCkge1xuICAgICAgICBjb25zdCBsYWJlbHMgPSBPYmplY3Qua2V5cyhyZWNvcmQubGFiZWxzKVxuICAgICAgICAgICAgLm1hcChrID0+IGAke2t9PSR7cmVjb3JkLmxhYmVsc1trXX1gKVxuICAgICAgICAgICAgLmpvaW4oJywnKTtcbiAgICAgICAgdGhpcy5fYmF0Y2hNYXAuc2V0KHJlY29yZC5kZXNjcmlwdG9yLm5hbWUgKyBsYWJlbHMsIHJlY29yZCk7XG4gICAgfVxufVxuZXhwb3J0cy5Vbmdyb3VwZWRQcm9jZXNzb3IgPSBVbmdyb3VwZWRQcm9jZXNzb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm9jZXNzb3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistogramAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Basic aggregator which observes events and counts them in pre-defined buckets\n * and provides the total sum and count of all observations.\n */\nclass HistogramAggregator {\n    constructor(boundaries) {\n        this.kind = types_1.AggregatorKind.HISTOGRAM;\n        if (boundaries === undefined || boundaries.length === 0) {\n            throw new Error('HistogramAggregator should be created with boundaries.');\n        }\n        // we need to an ordered set to be able to correctly compute count for each\n        // boundary since we'll iterate on each in order.\n        this._boundaries = boundaries.sort((a, b) => a - b);\n        this._current = this._newEmptyCheckpoint();\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    update(value) {\n        this._lastUpdateTime = core_1.hrTime();\n        this._current.count += 1;\n        this._current.sum += value;\n        for (let i = 0; i < this._boundaries.length; i++) {\n            if (value < this._boundaries[i]) {\n                this._current.buckets.counts[i] += 1;\n                return;\n            }\n        }\n        // value is above all observed boundaries\n        this._current.buckets.counts[this._boundaries.length] += 1;\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n    _newEmptyCheckpoint() {\n        return {\n            buckets: {\n                boundaries: this._boundaries,\n                counts: this._boundaries.map(() => 0).concat([0]),\n            },\n            sum: 0,\n            count: 0,\n        };\n    }\n}\nexports.HistogramAggregator = HistogramAggregator;\n//# sourceMappingURL=Histogram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL0hpc3RvZ3JhbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvYWdncmVnYXRvcnMvSGlzdG9ncmFtLmpzPzAxMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IaXN0b2dyYW1BZ2dyZWdhdG9yID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi90eXBlc1wiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqXG4gKiBCYXNpYyBhZ2dyZWdhdG9yIHdoaWNoIG9ic2VydmVzIGV2ZW50cyBhbmQgY291bnRzIHRoZW0gaW4gcHJlLWRlZmluZWQgYnVja2V0c1xuICogYW5kIHByb3ZpZGVzIHRoZSB0b3RhbCBzdW0gYW5kIGNvdW50IG9mIGFsbCBvYnNlcnZhdGlvbnMuXG4gKi9cbmNsYXNzIEhpc3RvZ3JhbUFnZ3JlZ2F0b3Ige1xuICAgIGNvbnN0cnVjdG9yKGJvdW5kYXJpZXMpIHtcbiAgICAgICAgdGhpcy5raW5kID0gdHlwZXNfMS5BZ2dyZWdhdG9yS2luZC5ISVNUT0dSQU07XG4gICAgICAgIGlmIChib3VuZGFyaWVzID09PSB1bmRlZmluZWQgfHwgYm91bmRhcmllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSGlzdG9ncmFtQWdncmVnYXRvciBzaG91bGQgYmUgY3JlYXRlZCB3aXRoIGJvdW5kYXJpZXMuJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgbmVlZCB0byBhbiBvcmRlcmVkIHNldCB0byBiZSBhYmxlIHRvIGNvcnJlY3RseSBjb21wdXRlIGNvdW50IGZvciBlYWNoXG4gICAgICAgIC8vIGJvdW5kYXJ5IHNpbmNlIHdlJ2xsIGl0ZXJhdGUgb24gZWFjaCBpbiBvcmRlci5cbiAgICAgICAgdGhpcy5fYm91bmRhcmllcyA9IGJvdW5kYXJpZXMuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgICB0aGlzLl9jdXJyZW50ID0gdGhpcy5fbmV3RW1wdHlDaGVja3BvaW50KCk7XG4gICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lID0gY29yZV8xLmhyVGltZSgpO1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBjb3JlXzEuaHJUaW1lKCk7XG4gICAgICAgIHRoaXMuX2N1cnJlbnQuY291bnQgKz0gMTtcbiAgICAgICAgdGhpcy5fY3VycmVudC5zdW0gKz0gdmFsdWU7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fYm91bmRhcmllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHZhbHVlIDwgdGhpcy5fYm91bmRhcmllc1tpXSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnQuYnVja2V0cy5jb3VudHNbaV0gKz0gMTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gdmFsdWUgaXMgYWJvdmUgYWxsIG9ic2VydmVkIGJvdW5kYXJpZXNcbiAgICAgICAgdGhpcy5fY3VycmVudC5idWNrZXRzLmNvdW50c1t0aGlzLl9ib3VuZGFyaWVzLmxlbmd0aF0gKz0gMTtcbiAgICB9XG4gICAgdG9Qb2ludCgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9jdXJyZW50LFxuICAgICAgICAgICAgdGltZXN0YW1wOiB0aGlzLl9sYXN0VXBkYXRlVGltZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgX25ld0VtcHR5Q2hlY2twb2ludCgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJ1Y2tldHM6IHtcbiAgICAgICAgICAgICAgICBib3VuZGFyaWVzOiB0aGlzLl9ib3VuZGFyaWVzLFxuICAgICAgICAgICAgICAgIGNvdW50czogdGhpcy5fYm91bmRhcmllcy5tYXAoKCkgPT4gMCkuY29uY2F0KFswXSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VtOiAwLFxuICAgICAgICAgICAgY291bnQ6IDAsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5IaXN0b2dyYW1BZ2dyZWdhdG9yID0gSGlzdG9ncmFtQWdncmVnYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhpc3RvZ3JhbS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LastValueAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/** Basic aggregator for LastValue which keeps the last recorded value. */\nclass LastValueAggregator {\n    constructor() {\n        this._current = 0;\n        this._lastUpdateTime = [0, 0];\n        this.kind = types_1.AggregatorKind.LAST_VALUE;\n    }\n    update(value) {\n        this._current = value;\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n}\nexports.LastValueAggregator = LastValueAggregator;\n//# sourceMappingURL=LastValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL0xhc3RWYWx1ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvYWdncmVnYXRvcnMvTGFzdFZhbHVlLmpzP2FlYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5MYXN0VmFsdWVBZ2dyZWdhdG9yID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi90eXBlc1wiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqIEJhc2ljIGFnZ3JlZ2F0b3IgZm9yIExhc3RWYWx1ZSB3aGljaCBrZWVwcyB0aGUgbGFzdCByZWNvcmRlZCB2YWx1ZS4gKi9cbmNsYXNzIExhc3RWYWx1ZUFnZ3JlZ2F0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9jdXJyZW50ID0gMDtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBbMCwgMF07XG4gICAgICAgIHRoaXMua2luZCA9IHR5cGVzXzEuQWdncmVnYXRvcktpbmQuTEFTVF9WQUxVRTtcbiAgICB9XG4gICAgdXBkYXRlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2N1cnJlbnQgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBjb3JlXzEuaHJUaW1lKCk7XG4gICAgfVxuICAgIHRvUG9pbnQoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fY3VycmVudCxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogdGhpcy5fbGFzdFVwZGF0ZVRpbWUsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5MYXN0VmFsdWVBZ2dyZWdhdG9yID0gTGFzdFZhbHVlQWdncmVnYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxhc3RWYWx1ZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SumAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/** Basic aggregator which calculates a Sum from individual measurements. */\nclass SumAggregator {\n    constructor() {\n        this.kind = types_1.AggregatorKind.SUM;\n        this._current = 0;\n        this._lastUpdateTime = [0, 0];\n    }\n    update(value) {\n        this._current += value;\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n}\nexports.SumAggregator = SumAggregator;\n//# sourceMappingURL=Sum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL1N1bS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvYWdncmVnYXRvcnMvU3VtLmpzP2FkY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdW1BZ2dyZWdhdG9yID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi90eXBlc1wiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqIEJhc2ljIGFnZ3JlZ2F0b3Igd2hpY2ggY2FsY3VsYXRlcyBhIFN1bSBmcm9tIGluZGl2aWR1YWwgbWVhc3VyZW1lbnRzLiAqL1xuY2xhc3MgU3VtQWdncmVnYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMua2luZCA9IHR5cGVzXzEuQWdncmVnYXRvcktpbmQuU1VNO1xuICAgICAgICB0aGlzLl9jdXJyZW50ID0gMDtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBbMCwgMF07XG4gICAgfVxuICAgIHVwZGF0ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9jdXJyZW50ICs9IHZhbHVlO1xuICAgICAgICB0aGlzLl9sYXN0VXBkYXRlVGltZSA9IGNvcmVfMS5oclRpbWUoKTtcbiAgICB9XG4gICAgdG9Qb2ludCgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9jdXJyZW50LFxuICAgICAgICAgICAgdGltZXN0YW1wOiB0aGlzLl9sYXN0VXBkYXRlVGltZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlN1bUFnZ3JlZ2F0b3IgPSBTdW1BZ2dyZWdhdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VtLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Histogram */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js\"), exports);\n__exportStar(__webpack_require__(/*! ./LastValue */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Sum */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL2V4cG9ydC9hZ2dyZWdhdG9ycy9pbmRleC5qcz8yYjRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9IaXN0b2dyYW1cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0xhc3RWYWx1ZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3VtXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/types.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregatorKind = exports.MetricKindValues = exports.MetricKind = void 0;\n/** The kind of metric. */\nvar MetricKind;\n(function (MetricKind) {\n    MetricKind[MetricKind[\"COUNTER\"] = 0] = \"COUNTER\";\n    MetricKind[MetricKind[\"UP_DOWN_COUNTER\"] = 1] = \"UP_DOWN_COUNTER\";\n    MetricKind[MetricKind[\"VALUE_RECORDER\"] = 2] = \"VALUE_RECORDER\";\n    MetricKind[MetricKind[\"SUM_OBSERVER\"] = 3] = \"SUM_OBSERVER\";\n    MetricKind[MetricKind[\"UP_DOWN_SUM_OBSERVER\"] = 4] = \"UP_DOWN_SUM_OBSERVER\";\n    MetricKind[MetricKind[\"VALUE_OBSERVER\"] = 5] = \"VALUE_OBSERVER\";\n    MetricKind[MetricKind[\"BATCH_OBSERVER\"] = 6] = \"BATCH_OBSERVER\";\n})(MetricKind = exports.MetricKind || (exports.MetricKind = {}));\nexports.MetricKindValues = Object.values(MetricKind);\n/** The kind of aggregator. */\nvar AggregatorKind;\n(function (AggregatorKind) {\n    AggregatorKind[AggregatorKind[\"SUM\"] = 0] = \"SUM\";\n    AggregatorKind[AggregatorKind[\"LAST_VALUE\"] = 1] = \"LAST_VALUE\";\n    AggregatorKind[AggregatorKind[\"HISTOGRAM\"] = 2] = \"HISTOGRAM\";\n})(AggregatorKind = exports.AggregatorKind || (exports.AggregatorKind = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L3R5cGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL2V4cG9ydC90eXBlcy5qcz82OGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWdncmVnYXRvcktpbmQgPSBleHBvcnRzLk1ldHJpY0tpbmRWYWx1ZXMgPSBleHBvcnRzLk1ldHJpY0tpbmQgPSB2b2lkIDA7XG4vKiogVGhlIGtpbmQgb2YgbWV0cmljLiAqL1xudmFyIE1ldHJpY0tpbmQ7XG4oZnVuY3Rpb24gKE1ldHJpY0tpbmQpIHtcbiAgICBNZXRyaWNLaW5kW01ldHJpY0tpbmRbXCJDT1VOVEVSXCJdID0gMF0gPSBcIkNPVU5URVJcIjtcbiAgICBNZXRyaWNLaW5kW01ldHJpY0tpbmRbXCJVUF9ET1dOX0NPVU5URVJcIl0gPSAxXSA9IFwiVVBfRE9XTl9DT1VOVEVSXCI7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiVkFMVUVfUkVDT1JERVJcIl0gPSAyXSA9IFwiVkFMVUVfUkVDT1JERVJcIjtcbiAgICBNZXRyaWNLaW5kW01ldHJpY0tpbmRbXCJTVU1fT0JTRVJWRVJcIl0gPSAzXSA9IFwiU1VNX09CU0VSVkVSXCI7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiVVBfRE9XTl9TVU1fT0JTRVJWRVJcIl0gPSA0XSA9IFwiVVBfRE9XTl9TVU1fT0JTRVJWRVJcIjtcbiAgICBNZXRyaWNLaW5kW01ldHJpY0tpbmRbXCJWQUxVRV9PQlNFUlZFUlwiXSA9IDVdID0gXCJWQUxVRV9PQlNFUlZFUlwiO1xuICAgIE1ldHJpY0tpbmRbTWV0cmljS2luZFtcIkJBVENIX09CU0VSVkVSXCJdID0gNl0gPSBcIkJBVENIX09CU0VSVkVSXCI7XG59KShNZXRyaWNLaW5kID0gZXhwb3J0cy5NZXRyaWNLaW5kIHx8IChleHBvcnRzLk1ldHJpY0tpbmQgPSB7fSkpO1xuZXhwb3J0cy5NZXRyaWNLaW5kVmFsdWVzID0gT2JqZWN0LnZhbHVlcyhNZXRyaWNLaW5kKTtcbi8qKiBUaGUga2luZCBvZiBhZ2dyZWdhdG9yLiAqL1xudmFyIEFnZ3JlZ2F0b3JLaW5kO1xuKGZ1bmN0aW9uIChBZ2dyZWdhdG9yS2luZCkge1xuICAgIEFnZ3JlZ2F0b3JLaW5kW0FnZ3JlZ2F0b3JLaW5kW1wiU1VNXCJdID0gMF0gPSBcIlNVTVwiO1xuICAgIEFnZ3JlZ2F0b3JLaW5kW0FnZ3JlZ2F0b3JLaW5kW1wiTEFTVF9WQUxVRVwiXSA9IDFdID0gXCJMQVNUX1ZBTFVFXCI7XG4gICAgQWdncmVnYXRvcktpbmRbQWdncmVnYXRvcktpbmRbXCJISVNUT0dSQU1cIl0gPSAyXSA9IFwiSElTVE9HUkFNXCI7XG59KShBZ2dyZWdhdG9yS2luZCA9IGV4cG9ydHMuQWdncmVnYXRvcktpbmQgfHwgKGV4cG9ydHMuQWdncmVnYXRvcktpbmQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ValueRecorderMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Meter */ \"./node_modules/@opentelemetry/metrics/build/src/Meter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./MeterProvider */ \"./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ValueObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/aggregators */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ConsoleMetricExporter */ \"./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/Processor */ \"./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpDownCounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvaW5kZXguanM/N2YxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQm91bmRJbnN0cnVtZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db3VudGVyTWV0cmljXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9WYWx1ZVJlY29yZGVyTWV0cmljXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9NZXRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTWV0ZXJQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTWV0cmljXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9WYWx1ZU9ic2VydmVyTWV0cmljXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvYWdncmVnYXRvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC9Db25zb2xlTWV0cmljRXhwb3J0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC9Qcm9jZXNzb3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVXBEb3duQ291bnRlck1ldHJpY1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/types.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_METRIC_OPTIONS = exports.DEFAULT_CONFIG = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/** Default Meter configuration. */\nexports.DEFAULT_CONFIG = {\n    logLevel: core_1.getEnv().OTEL_LOG_LEVEL,\n};\n/** The default metric creation options value. */\nexports.DEFAULT_METRIC_OPTIONS = {\n    disabled: false,\n    description: '',\n    unit: '1',\n    valueType: api.ValueType.DOUBLE,\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvdHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvdHlwZXMuanM/NThlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfTUVUUklDX09QVElPTlMgPSBleHBvcnRzLkRFRkFVTFRfQ09ORklHID0gdm9pZCAwO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKiogRGVmYXVsdCBNZXRlciBjb25maWd1cmF0aW9uLiAqL1xuZXhwb3J0cy5ERUZBVUxUX0NPTkZJRyA9IHtcbiAgICBsb2dMZXZlbDogY29yZV8xLmdldEVudigpLk9URUxfTE9HX0xFVkVMLFxufTtcbi8qKiBUaGUgZGVmYXVsdCBtZXRyaWMgY3JlYXRpb24gb3B0aW9ucyB2YWx1ZS4gKi9cbmV4cG9ydHMuREVGQVVMVF9NRVRSSUNfT1BUSU9OUyA9IHtcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgZGVzY3JpcHRpb246ICcnLFxuICAgIHVuaXQ6ICcxJyxcbiAgICB2YWx1ZVR5cGU6IGFwaS5WYWx1ZVR5cGUuRE9VQkxFLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/B3MultiPropagator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/B3MultiPropagator.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.B3MultiPropagator = exports.parseHeader = exports.X_B3_FLAGS = exports.X_B3_PARENT_SPAN_ID = exports.X_B3_SAMPLED = exports.X_B3_SPAN_ID = exports.X_B3_TRACE_ID = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst common_1 = __webpack_require__(/*! ./common */ \"./node_modules/@opentelemetry/propagator-b3/build/src/common.js\");\n/* b3 multi-header keys */\nexports.X_B3_TRACE_ID = 'x-b3-traceid';\nexports.X_B3_SPAN_ID = 'x-b3-spanid';\nexports.X_B3_SAMPLED = 'x-b3-sampled';\nexports.X_B3_PARENT_SPAN_ID = 'x-b3-parentspanid';\nexports.X_B3_FLAGS = 'x-b3-flags';\nconst VALID_SAMPLED_VALUES = new Set([true, 'true', 'True', '1', 1]);\nconst VALID_UNSAMPLED_VALUES = new Set([false, 'false', 'False', '0', 0]);\nfunction isValidSampledValue(sampled) {\n    return sampled === api_1.TraceFlags.SAMPLED || sampled === api_1.TraceFlags.NONE;\n}\nfunction parseHeader(header) {\n    return Array.isArray(header) ? header[0] : header;\n}\nexports.parseHeader = parseHeader;\nfunction getHeaderValue(carrier, getter, key) {\n    const header = getter.get(carrier, key);\n    return parseHeader(header);\n}\nfunction getTraceId(carrier, getter) {\n    const traceId = getHeaderValue(carrier, getter, exports.X_B3_TRACE_ID);\n    if (typeof traceId === 'string') {\n        return traceId.padStart(32, '0');\n    }\n    return '';\n}\nfunction getSpanId(carrier, getter) {\n    const spanId = getHeaderValue(carrier, getter, exports.X_B3_SPAN_ID);\n    if (typeof spanId === 'string') {\n        return spanId;\n    }\n    return '';\n}\nfunction getDebug(carrier, getter) {\n    const debug = getHeaderValue(carrier, getter, exports.X_B3_FLAGS);\n    return debug === '1' ? '1' : undefined;\n}\nfunction getTraceFlags(carrier, getter) {\n    const traceFlags = getHeaderValue(carrier, getter, exports.X_B3_SAMPLED);\n    const debug = getDebug(carrier, getter);\n    if (debug === '1' || VALID_SAMPLED_VALUES.has(traceFlags)) {\n        return api_1.TraceFlags.SAMPLED;\n    }\n    if (traceFlags === undefined || VALID_UNSAMPLED_VALUES.has(traceFlags)) {\n        return api_1.TraceFlags.NONE;\n    }\n    // This indicates to isValidSampledValue that this is not valid\n    return;\n}\n/**\n * Propagator for the B3 multiple-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nclass B3MultiPropagator {\n    inject(context, carrier, setter) {\n        const spanContext = api_1.getSpanContext(context);\n        if (!spanContext || !api_1.isSpanContextValid(spanContext))\n            return;\n        const debug = context.getValue(common_1.B3_DEBUG_FLAG_KEY);\n        setter.set(carrier, exports.X_B3_TRACE_ID, spanContext.traceId);\n        setter.set(carrier, exports.X_B3_SPAN_ID, spanContext.spanId);\n        // According to the B3 spec, if the debug flag is set,\n        // the sampled flag shouldn't be propagated as well.\n        if (debug === '1') {\n            setter.set(carrier, exports.X_B3_FLAGS, debug);\n        }\n        else if (spanContext.traceFlags !== undefined) {\n            // We set the header only if there is an existing sampling decision.\n            // Otherwise we will omit it => Absent.\n            setter.set(carrier, exports.X_B3_SAMPLED, (api_1.TraceFlags.SAMPLED & spanContext.traceFlags) === api_1.TraceFlags.SAMPLED\n                ? '1'\n                : '0');\n        }\n    }\n    extract(context, carrier, getter) {\n        const traceId = getTraceId(carrier, getter);\n        const spanId = getSpanId(carrier, getter);\n        const traceFlags = getTraceFlags(carrier, getter);\n        const debug = getDebug(carrier, getter);\n        if (api_1.isValidTraceId(traceId) &&\n            api_1.isValidSpanId(spanId) &&\n            isValidSampledValue(traceFlags)) {\n            context = context.setValue(common_1.B3_DEBUG_FLAG_KEY, debug);\n            return api_1.setSpanContext(context, {\n                traceId,\n                spanId,\n                isRemote: true,\n                traceFlags,\n            });\n        }\n        return context;\n    }\n    fields() {\n        return [\n            exports.X_B3_TRACE_ID,\n            exports.X_B3_SPAN_ID,\n            exports.X_B3_FLAGS,\n            exports.X_B3_SAMPLED,\n            exports.X_B3_PARENT_SPAN_ID,\n        ];\n    }\n}\nexports.B3MultiPropagator = B3MultiPropagator;\n//# sourceMappingURL=B3MultiPropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvQjNNdWx0aVByb3BhZ2F0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvQjNNdWx0aVByb3BhZ2F0b3IuanM/ZTgzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkIzTXVsdGlQcm9wYWdhdG9yID0gZXhwb3J0cy5wYXJzZUhlYWRlciA9IGV4cG9ydHMuWF9CM19GTEFHUyA9IGV4cG9ydHMuWF9CM19QQVJFTlRfU1BBTl9JRCA9IGV4cG9ydHMuWF9CM19TQU1QTEVEID0gZXhwb3J0cy5YX0IzX1NQQU5fSUQgPSBleHBvcnRzLlhfQjNfVFJBQ0VfSUQgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBjb21tb25fMSA9IHJlcXVpcmUoXCIuL2NvbW1vblwiKTtcbi8qIGIzIG11bHRpLWhlYWRlciBrZXlzICovXG5leHBvcnRzLlhfQjNfVFJBQ0VfSUQgPSAneC1iMy10cmFjZWlkJztcbmV4cG9ydHMuWF9CM19TUEFOX0lEID0gJ3gtYjMtc3BhbmlkJztcbmV4cG9ydHMuWF9CM19TQU1QTEVEID0gJ3gtYjMtc2FtcGxlZCc7XG5leHBvcnRzLlhfQjNfUEFSRU5UX1NQQU5fSUQgPSAneC1iMy1wYXJlbnRzcGFuaWQnO1xuZXhwb3J0cy5YX0IzX0ZMQUdTID0gJ3gtYjMtZmxhZ3MnO1xuY29uc3QgVkFMSURfU0FNUExFRF9WQUxVRVMgPSBuZXcgU2V0KFt0cnVlLCAndHJ1ZScsICdUcnVlJywgJzEnLCAxXSk7XG5jb25zdCBWQUxJRF9VTlNBTVBMRURfVkFMVUVTID0gbmV3IFNldChbZmFsc2UsICdmYWxzZScsICdGYWxzZScsICcwJywgMF0pO1xuZnVuY3Rpb24gaXNWYWxpZFNhbXBsZWRWYWx1ZShzYW1wbGVkKSB7XG4gICAgcmV0dXJuIHNhbXBsZWQgPT09IGFwaV8xLlRyYWNlRmxhZ3MuU0FNUExFRCB8fCBzYW1wbGVkID09PSBhcGlfMS5UcmFjZUZsYWdzLk5PTkU7XG59XG5mdW5jdGlvbiBwYXJzZUhlYWRlcihoZWFkZXIpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShoZWFkZXIpID8gaGVhZGVyWzBdIDogaGVhZGVyO1xufVxuZXhwb3J0cy5wYXJzZUhlYWRlciA9IHBhcnNlSGVhZGVyO1xuZnVuY3Rpb24gZ2V0SGVhZGVyVmFsdWUoY2FycmllciwgZ2V0dGVyLCBrZXkpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBnZXR0ZXIuZ2V0KGNhcnJpZXIsIGtleSk7XG4gICAgcmV0dXJuIHBhcnNlSGVhZGVyKGhlYWRlcik7XG59XG5mdW5jdGlvbiBnZXRUcmFjZUlkKGNhcnJpZXIsIGdldHRlcikge1xuICAgIGNvbnN0IHRyYWNlSWQgPSBnZXRIZWFkZXJWYWx1ZShjYXJyaWVyLCBnZXR0ZXIsIGV4cG9ydHMuWF9CM19UUkFDRV9JRCk7XG4gICAgaWYgKHR5cGVvZiB0cmFjZUlkID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdHJhY2VJZC5wYWRTdGFydCgzMiwgJzAnKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xufVxuZnVuY3Rpb24gZ2V0U3BhbklkKGNhcnJpZXIsIGdldHRlcikge1xuICAgIGNvbnN0IHNwYW5JZCA9IGdldEhlYWRlclZhbHVlKGNhcnJpZXIsIGdldHRlciwgZXhwb3J0cy5YX0IzX1NQQU5fSUQpO1xuICAgIGlmICh0eXBlb2Ygc3BhbklkID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gc3BhbklkO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59XG5mdW5jdGlvbiBnZXREZWJ1ZyhjYXJyaWVyLCBnZXR0ZXIpIHtcbiAgICBjb25zdCBkZWJ1ZyA9IGdldEhlYWRlclZhbHVlKGNhcnJpZXIsIGdldHRlciwgZXhwb3J0cy5YX0IzX0ZMQUdTKTtcbiAgICByZXR1cm4gZGVidWcgPT09ICcxJyA/ICcxJyA6IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGdldFRyYWNlRmxhZ3MoY2FycmllciwgZ2V0dGVyKSB7XG4gICAgY29uc3QgdHJhY2VGbGFncyA9IGdldEhlYWRlclZhbHVlKGNhcnJpZXIsIGdldHRlciwgZXhwb3J0cy5YX0IzX1NBTVBMRUQpO1xuICAgIGNvbnN0IGRlYnVnID0gZ2V0RGVidWcoY2FycmllciwgZ2V0dGVyKTtcbiAgICBpZiAoZGVidWcgPT09ICcxJyB8fCBWQUxJRF9TQU1QTEVEX1ZBTFVFUy5oYXModHJhY2VGbGFncykpIHtcbiAgICAgICAgcmV0dXJuIGFwaV8xLlRyYWNlRmxhZ3MuU0FNUExFRDtcbiAgICB9XG4gICAgaWYgKHRyYWNlRmxhZ3MgPT09IHVuZGVmaW5lZCB8fCBWQUxJRF9VTlNBTVBMRURfVkFMVUVTLmhhcyh0cmFjZUZsYWdzKSkge1xuICAgICAgICByZXR1cm4gYXBpXzEuVHJhY2VGbGFncy5OT05FO1xuICAgIH1cbiAgICAvLyBUaGlzIGluZGljYXRlcyB0byBpc1ZhbGlkU2FtcGxlZFZhbHVlIHRoYXQgdGhpcyBpcyBub3QgdmFsaWRcbiAgICByZXR1cm47XG59XG4vKipcbiAqIFByb3BhZ2F0b3IgZm9yIHRoZSBCMyBtdWx0aXBsZS1oZWFkZXIgSFRUUCBmb3JtYXQuXG4gKiBCYXNlZCBvbjogaHR0cHM6Ly9naXRodWIuY29tL29wZW56aXBraW4vYjMtcHJvcGFnYXRpb25cbiAqL1xuY2xhc3MgQjNNdWx0aVByb3BhZ2F0b3Ige1xuICAgIGluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpIHtcbiAgICAgICAgY29uc3Qgc3BhbkNvbnRleHQgPSBhcGlfMS5nZXRTcGFuQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgaWYgKCFzcGFuQ29udGV4dCB8fCAhYXBpXzEuaXNTcGFuQ29udGV4dFZhbGlkKHNwYW5Db250ZXh0KSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgZGVidWcgPSBjb250ZXh0LmdldFZhbHVlKGNvbW1vbl8xLkIzX0RFQlVHX0ZMQUdfS0VZKTtcbiAgICAgICAgc2V0dGVyLnNldChjYXJyaWVyLCBleHBvcnRzLlhfQjNfVFJBQ0VfSUQsIHNwYW5Db250ZXh0LnRyYWNlSWQpO1xuICAgICAgICBzZXR0ZXIuc2V0KGNhcnJpZXIsIGV4cG9ydHMuWF9CM19TUEFOX0lELCBzcGFuQ29udGV4dC5zcGFuSWQpO1xuICAgICAgICAvLyBBY2NvcmRpbmcgdG8gdGhlIEIzIHNwZWMsIGlmIHRoZSBkZWJ1ZyBmbGFnIGlzIHNldCxcbiAgICAgICAgLy8gdGhlIHNhbXBsZWQgZmxhZyBzaG91bGRuJ3QgYmUgcHJvcGFnYXRlZCBhcyB3ZWxsLlxuICAgICAgICBpZiAoZGVidWcgPT09ICcxJykge1xuICAgICAgICAgICAgc2V0dGVyLnNldChjYXJyaWVyLCBleHBvcnRzLlhfQjNfRkxBR1MsIGRlYnVnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzcGFuQ29udGV4dC50cmFjZUZsYWdzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIFdlIHNldCB0aGUgaGVhZGVyIG9ubHkgaWYgdGhlcmUgaXMgYW4gZXhpc3Rpbmcgc2FtcGxpbmcgZGVjaXNpb24uXG4gICAgICAgICAgICAvLyBPdGhlcndpc2Ugd2Ugd2lsbCBvbWl0IGl0ID0+IEFic2VudC5cbiAgICAgICAgICAgIHNldHRlci5zZXQoY2FycmllciwgZXhwb3J0cy5YX0IzX1NBTVBMRUQsIChhcGlfMS5UcmFjZUZsYWdzLlNBTVBMRUQgJiBzcGFuQ29udGV4dC50cmFjZUZsYWdzKSA9PT0gYXBpXzEuVHJhY2VGbGFncy5TQU1QTEVEXG4gICAgICAgICAgICAgICAgPyAnMSdcbiAgICAgICAgICAgICAgICA6ICcwJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXh0cmFjdChjb250ZXh0LCBjYXJyaWVyLCBnZXR0ZXIpIHtcbiAgICAgICAgY29uc3QgdHJhY2VJZCA9IGdldFRyYWNlSWQoY2FycmllciwgZ2V0dGVyKTtcbiAgICAgICAgY29uc3Qgc3BhbklkID0gZ2V0U3BhbklkKGNhcnJpZXIsIGdldHRlcik7XG4gICAgICAgIGNvbnN0IHRyYWNlRmxhZ3MgPSBnZXRUcmFjZUZsYWdzKGNhcnJpZXIsIGdldHRlcik7XG4gICAgICAgIGNvbnN0IGRlYnVnID0gZ2V0RGVidWcoY2FycmllciwgZ2V0dGVyKTtcbiAgICAgICAgaWYgKGFwaV8xLmlzVmFsaWRUcmFjZUlkKHRyYWNlSWQpICYmXG4gICAgICAgICAgICBhcGlfMS5pc1ZhbGlkU3BhbklkKHNwYW5JZCkgJiZcbiAgICAgICAgICAgIGlzVmFsaWRTYW1wbGVkVmFsdWUodHJhY2VGbGFncykpIHtcbiAgICAgICAgICAgIGNvbnRleHQgPSBjb250ZXh0LnNldFZhbHVlKGNvbW1vbl8xLkIzX0RFQlVHX0ZMQUdfS0VZLCBkZWJ1Zyk7XG4gICAgICAgICAgICByZXR1cm4gYXBpXzEuc2V0U3BhbkNvbnRleHQoY29udGV4dCwge1xuICAgICAgICAgICAgICAgIHRyYWNlSWQsXG4gICAgICAgICAgICAgICAgc3BhbklkLFxuICAgICAgICAgICAgICAgIGlzUmVtb3RlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRyYWNlRmxhZ3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9XG4gICAgZmllbGRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgZXhwb3J0cy5YX0IzX1RSQUNFX0lELFxuICAgICAgICAgICAgZXhwb3J0cy5YX0IzX1NQQU5fSUQsXG4gICAgICAgICAgICBleHBvcnRzLlhfQjNfRkxBR1MsXG4gICAgICAgICAgICBleHBvcnRzLlhfQjNfU0FNUExFRCxcbiAgICAgICAgICAgIGV4cG9ydHMuWF9CM19QQVJFTlRfU1BBTl9JRCxcbiAgICAgICAgXTtcbiAgICB9XG59XG5leHBvcnRzLkIzTXVsdGlQcm9wYWdhdG9yID0gQjNNdWx0aVByb3BhZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CM011bHRpUHJvcGFnYXRvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/B3MultiPropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/B3Propagator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/B3Propagator.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.B3Propagator = void 0;\nconst B3MultiPropagator_1 = __webpack_require__(/*! ./B3MultiPropagator */ \"./node_modules/@opentelemetry/propagator-b3/build/src/B3MultiPropagator.js\");\nconst B3SinglePropagator_1 = __webpack_require__(/*! ./B3SinglePropagator */ \"./node_modules/@opentelemetry/propagator-b3/build/src/B3SinglePropagator.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/propagator-b3/build/src/types.js\");\n/**\n * Propagator that extracts B3 context in both single and multi-header variants,\n * with configurable injection format defaulting to B3 single-header. Due to\n * the asymmetry in injection and extraction formats this is not suitable to\n * be implemented as a composite propagator.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nclass B3Propagator {\n    constructor(config = {}) {\n        this._b3MultiPropagator = new B3MultiPropagator_1.B3MultiPropagator();\n        this._b3SinglePropagator = new B3SinglePropagator_1.B3SinglePropagator();\n        if (config.injectEncoding === types_1.B3InjectEncoding.MULTI_HEADER) {\n            this._inject = this._b3MultiPropagator.inject;\n            this._fields = this._b3MultiPropagator.fields();\n        }\n        else {\n            this._inject = this._b3SinglePropagator.inject;\n            this._fields = this._b3SinglePropagator.fields();\n        }\n    }\n    inject(context, carrier, setter) {\n        this._inject(context, carrier, setter);\n    }\n    extract(context, carrier, getter) {\n        if (getter.get(carrier, B3SinglePropagator_1.B3_CONTEXT_HEADER)) {\n            return this._b3SinglePropagator.extract(context, carrier, getter);\n        }\n        else {\n            return this._b3MultiPropagator.extract(context, carrier, getter);\n        }\n    }\n    fields() {\n        return this._fields;\n    }\n}\nexports.B3Propagator = B3Propagator;\n//# sourceMappingURL=B3Propagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvQjNQcm9wYWdhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Byb3BhZ2F0b3ItYjMvYnVpbGQvc3JjL0IzUHJvcGFnYXRvci5qcz8wNDU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQjNQcm9wYWdhdG9yID0gdm9pZCAwO1xuY29uc3QgQjNNdWx0aVByb3BhZ2F0b3JfMSA9IHJlcXVpcmUoXCIuL0IzTXVsdGlQcm9wYWdhdG9yXCIpO1xuY29uc3QgQjNTaW5nbGVQcm9wYWdhdG9yXzEgPSByZXF1aXJlKFwiLi9CM1NpbmdsZVByb3BhZ2F0b3JcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG4vKipcbiAqIFByb3BhZ2F0b3IgdGhhdCBleHRyYWN0cyBCMyBjb250ZXh0IGluIGJvdGggc2luZ2xlIGFuZCBtdWx0aS1oZWFkZXIgdmFyaWFudHMsXG4gKiB3aXRoIGNvbmZpZ3VyYWJsZSBpbmplY3Rpb24gZm9ybWF0IGRlZmF1bHRpbmcgdG8gQjMgc2luZ2xlLWhlYWRlci4gRHVlIHRvXG4gKiB0aGUgYXN5bW1ldHJ5IGluIGluamVjdGlvbiBhbmQgZXh0cmFjdGlvbiBmb3JtYXRzIHRoaXMgaXMgbm90IHN1aXRhYmxlIHRvXG4gKiBiZSBpbXBsZW1lbnRlZCBhcyBhIGNvbXBvc2l0ZSBwcm9wYWdhdG9yLlxuICogQmFzZWQgb246IGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuemlwa2luL2IzLXByb3BhZ2F0aW9uXG4gKi9cbmNsYXNzIEIzUHJvcGFnYXRvciB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgdGhpcy5fYjNNdWx0aVByb3BhZ2F0b3IgPSBuZXcgQjNNdWx0aVByb3BhZ2F0b3JfMS5CM011bHRpUHJvcGFnYXRvcigpO1xuICAgICAgICB0aGlzLl9iM1NpbmdsZVByb3BhZ2F0b3IgPSBuZXcgQjNTaW5nbGVQcm9wYWdhdG9yXzEuQjNTaW5nbGVQcm9wYWdhdG9yKCk7XG4gICAgICAgIGlmIChjb25maWcuaW5qZWN0RW5jb2RpbmcgPT09IHR5cGVzXzEuQjNJbmplY3RFbmNvZGluZy5NVUxUSV9IRUFERVIpIHtcbiAgICAgICAgICAgIHRoaXMuX2luamVjdCA9IHRoaXMuX2IzTXVsdGlQcm9wYWdhdG9yLmluamVjdDtcbiAgICAgICAgICAgIHRoaXMuX2ZpZWxkcyA9IHRoaXMuX2IzTXVsdGlQcm9wYWdhdG9yLmZpZWxkcygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faW5qZWN0ID0gdGhpcy5fYjNTaW5nbGVQcm9wYWdhdG9yLmluamVjdDtcbiAgICAgICAgICAgIHRoaXMuX2ZpZWxkcyA9IHRoaXMuX2IzU2luZ2xlUHJvcGFnYXRvci5maWVsZHMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpbmplY3QoY29udGV4dCwgY2Fycmllciwgc2V0dGVyKSB7XG4gICAgICAgIHRoaXMuX2luamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpO1xuICAgIH1cbiAgICBleHRyYWN0KGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICBpZiAoZ2V0dGVyLmdldChjYXJyaWVyLCBCM1NpbmdsZVByb3BhZ2F0b3JfMS5CM19DT05URVhUX0hFQURFUikpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9iM1NpbmdsZVByb3BhZ2F0b3IuZXh0cmFjdChjb250ZXh0LCBjYXJyaWVyLCBnZXR0ZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2IzTXVsdGlQcm9wYWdhdG9yLmV4dHJhY3QoY29udGV4dCwgY2FycmllciwgZ2V0dGVyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9maWVsZHM7XG4gICAgfVxufVxuZXhwb3J0cy5CM1Byb3BhZ2F0b3IgPSBCM1Byb3BhZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CM1Byb3BhZ2F0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/B3Propagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/B3SinglePropagator.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/B3SinglePropagator.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.B3SinglePropagator = exports.B3_CONTEXT_HEADER = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst common_1 = __webpack_require__(/*! ./common */ \"./node_modules/@opentelemetry/propagator-b3/build/src/common.js\");\n/** B3 single-header name */\nexports.B3_CONTEXT_HEADER = 'b3';\nconst B3_CONTEXT_REGEX = /((?:[0-9a-f]{16}){1,2})-([0-9a-f]{16})(?:-([01d](?![0-9a-f])))?(?:-([0-9a-f]{16}))?/;\nconst PADDING = '0'.repeat(16);\nconst SAMPLED_VALUES = new Set(['d', '1']);\nconst DEBUG_STATE = 'd';\nfunction convertToTraceId128(traceId) {\n    return traceId.length == 32 ? traceId : `${PADDING}${traceId}`;\n}\nfunction convertToTraceFlags(samplingState) {\n    if (samplingState && SAMPLED_VALUES.has(samplingState)) {\n        return api_1.TraceFlags.SAMPLED;\n    }\n    return api_1.TraceFlags.NONE;\n}\n/**\n * Propagator for the B3 single-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nclass B3SinglePropagator {\n    inject(context, carrier, setter) {\n        const spanContext = api_1.getSpanContext(context);\n        if (!spanContext || !api_1.isSpanContextValid(spanContext))\n            return;\n        const samplingState = context.getValue(common_1.B3_DEBUG_FLAG_KEY) || spanContext.traceFlags & 0x1;\n        const value = `${spanContext.traceId}-${spanContext.spanId}-${samplingState}`;\n        setter.set(carrier, exports.B3_CONTEXT_HEADER, value);\n    }\n    extract(context, carrier, getter) {\n        const header = getter.get(carrier, exports.B3_CONTEXT_HEADER);\n        const b3Context = Array.isArray(header) ? header[0] : header;\n        if (typeof b3Context !== 'string')\n            return context;\n        const match = b3Context.match(B3_CONTEXT_REGEX);\n        if (!match)\n            return context;\n        const [, extractedTraceId, spanId, samplingState] = match;\n        const traceId = convertToTraceId128(extractedTraceId);\n        if (!api_1.isValidTraceId(traceId) || !api_1.isValidSpanId(spanId))\n            return context;\n        const traceFlags = convertToTraceFlags(samplingState);\n        if (samplingState === DEBUG_STATE) {\n            context = context.setValue(common_1.B3_DEBUG_FLAG_KEY, samplingState);\n        }\n        return api_1.setSpanContext(context, {\n            traceId,\n            spanId,\n            isRemote: true,\n            traceFlags,\n        });\n    }\n    fields() {\n        return [exports.B3_CONTEXT_HEADER];\n    }\n}\nexports.B3SinglePropagator = B3SinglePropagator;\n//# sourceMappingURL=B3SinglePropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvQjNTaW5nbGVQcm9wYWdhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Byb3BhZ2F0b3ItYjMvYnVpbGQvc3JjL0IzU2luZ2xlUHJvcGFnYXRvci5qcz8zYjZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQjNTaW5nbGVQcm9wYWdhdG9yID0gZXhwb3J0cy5CM19DT05URVhUX0hFQURFUiA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGNvbW1vbl8xID0gcmVxdWlyZShcIi4vY29tbW9uXCIpO1xuLyoqIEIzIHNpbmdsZS1oZWFkZXIgbmFtZSAqL1xuZXhwb3J0cy5CM19DT05URVhUX0hFQURFUiA9ICdiMyc7XG5jb25zdCBCM19DT05URVhUX1JFR0VYID0gLygoPzpbMC05YS1mXXsxNn0pezEsMn0pLShbMC05YS1mXXsxNn0pKD86LShbMDFkXSg/IVswLTlhLWZdKSkpPyg/Oi0oWzAtOWEtZl17MTZ9KSk/LztcbmNvbnN0IFBBRERJTkcgPSAnMCcucmVwZWF0KDE2KTtcbmNvbnN0IFNBTVBMRURfVkFMVUVTID0gbmV3IFNldChbJ2QnLCAnMSddKTtcbmNvbnN0IERFQlVHX1NUQVRFID0gJ2QnO1xuZnVuY3Rpb24gY29udmVydFRvVHJhY2VJZDEyOCh0cmFjZUlkKSB7XG4gICAgcmV0dXJuIHRyYWNlSWQubGVuZ3RoID09IDMyID8gdHJhY2VJZCA6IGAke1BBRERJTkd9JHt0cmFjZUlkfWA7XG59XG5mdW5jdGlvbiBjb252ZXJ0VG9UcmFjZUZsYWdzKHNhbXBsaW5nU3RhdGUpIHtcbiAgICBpZiAoc2FtcGxpbmdTdGF0ZSAmJiBTQU1QTEVEX1ZBTFVFUy5oYXMoc2FtcGxpbmdTdGF0ZSkpIHtcbiAgICAgICAgcmV0dXJuIGFwaV8xLlRyYWNlRmxhZ3MuU0FNUExFRDtcbiAgICB9XG4gICAgcmV0dXJuIGFwaV8xLlRyYWNlRmxhZ3MuTk9ORTtcbn1cbi8qKlxuICogUHJvcGFnYXRvciBmb3IgdGhlIEIzIHNpbmdsZS1oZWFkZXIgSFRUUCBmb3JtYXQuXG4gKiBCYXNlZCBvbjogaHR0cHM6Ly9naXRodWIuY29tL29wZW56aXBraW4vYjMtcHJvcGFnYXRpb25cbiAqL1xuY2xhc3MgQjNTaW5nbGVQcm9wYWdhdG9yIHtcbiAgICBpbmplY3QoY29udGV4dCwgY2Fycmllciwgc2V0dGVyKSB7XG4gICAgICAgIGNvbnN0IHNwYW5Db250ZXh0ID0gYXBpXzEuZ2V0U3BhbkNvbnRleHQoY29udGV4dCk7XG4gICAgICAgIGlmICghc3BhbkNvbnRleHQgfHwgIWFwaV8xLmlzU3BhbkNvbnRleHRWYWxpZChzcGFuQ29udGV4dCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHNhbXBsaW5nU3RhdGUgPSBjb250ZXh0LmdldFZhbHVlKGNvbW1vbl8xLkIzX0RFQlVHX0ZMQUdfS0VZKSB8fCBzcGFuQ29udGV4dC50cmFjZUZsYWdzICYgMHgxO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGAke3NwYW5Db250ZXh0LnRyYWNlSWR9LSR7c3BhbkNvbnRleHQuc3BhbklkfS0ke3NhbXBsaW5nU3RhdGV9YDtcbiAgICAgICAgc2V0dGVyLnNldChjYXJyaWVyLCBleHBvcnRzLkIzX0NPTlRFWFRfSEVBREVSLCB2YWx1ZSk7XG4gICAgfVxuICAgIGV4dHJhY3QoY29udGV4dCwgY2FycmllciwgZ2V0dGVyKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGdldHRlci5nZXQoY2FycmllciwgZXhwb3J0cy5CM19DT05URVhUX0hFQURFUik7XG4gICAgICAgIGNvbnN0IGIzQ29udGV4dCA9IEFycmF5LmlzQXJyYXkoaGVhZGVyKSA/IGhlYWRlclswXSA6IGhlYWRlcjtcbiAgICAgICAgaWYgKHR5cGVvZiBiM0NvbnRleHQgIT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IG1hdGNoID0gYjNDb250ZXh0Lm1hdGNoKEIzX0NPTlRFWFRfUkVHRVgpO1xuICAgICAgICBpZiAoIW1hdGNoKVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IFssIGV4dHJhY3RlZFRyYWNlSWQsIHNwYW5JZCwgc2FtcGxpbmdTdGF0ZV0gPSBtYXRjaDtcbiAgICAgICAgY29uc3QgdHJhY2VJZCA9IGNvbnZlcnRUb1RyYWNlSWQxMjgoZXh0cmFjdGVkVHJhY2VJZCk7XG4gICAgICAgIGlmICghYXBpXzEuaXNWYWxpZFRyYWNlSWQodHJhY2VJZCkgfHwgIWFwaV8xLmlzVmFsaWRTcGFuSWQoc3BhbklkKSlcbiAgICAgICAgICAgIHJldHVybiBjb250ZXh0O1xuICAgICAgICBjb25zdCB0cmFjZUZsYWdzID0gY29udmVydFRvVHJhY2VGbGFncyhzYW1wbGluZ1N0YXRlKTtcbiAgICAgICAgaWYgKHNhbXBsaW5nU3RhdGUgPT09IERFQlVHX1NUQVRFKSB7XG4gICAgICAgICAgICBjb250ZXh0ID0gY29udGV4dC5zZXRWYWx1ZShjb21tb25fMS5CM19ERUJVR19GTEFHX0tFWSwgc2FtcGxpbmdTdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFwaV8xLnNldFNwYW5Db250ZXh0KGNvbnRleHQsIHtcbiAgICAgICAgICAgIHRyYWNlSWQsXG4gICAgICAgICAgICBzcGFuSWQsXG4gICAgICAgICAgICBpc1JlbW90ZTogdHJ1ZSxcbiAgICAgICAgICAgIHRyYWNlRmxhZ3MsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIHJldHVybiBbZXhwb3J0cy5CM19DT05URVhUX0hFQURFUl07XG4gICAgfVxufVxuZXhwb3J0cy5CM1NpbmdsZVByb3BhZ2F0b3IgPSBCM1NpbmdsZVByb3BhZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CM1NpbmdsZVByb3BhZ2F0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/B3SinglePropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/common.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/common.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.B3_DEBUG_FLAG_KEY = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** shared context for storing an extracted b3 debug flag */\nexports.B3_DEBUG_FLAG_KEY = api_1.createContextKey('OpenTelemetry Context Key B3 Debug Flag');\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvY29tbW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Byb3BhZ2F0b3ItYjMvYnVpbGQvc3JjL2NvbW1vbi5qcz84NDUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQjNfREVCVUdfRkxBR19LRVkgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKiogc2hhcmVkIGNvbnRleHQgZm9yIHN0b3JpbmcgYW4gZXh0cmFjdGVkIGIzIGRlYnVnIGZsYWcgKi9cbmV4cG9ydHMuQjNfREVCVUdfRkxBR19LRVkgPSBhcGlfMS5jcmVhdGVDb250ZXh0S2V5KCdPcGVuVGVsZW1ldHJ5IENvbnRleHQgS2V5IEIzIERlYnVnIEZsYWcnKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/common.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./B3Propagator */ \"./node_modules/@opentelemetry/propagator-b3/build/src/B3Propagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./B3SinglePropagator */ \"./node_modules/@opentelemetry/propagator-b3/build/src/B3SinglePropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./B3MultiPropagator */ \"./node_modules/@opentelemetry/propagator-b3/build/src/B3MultiPropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/propagator-b3/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvaW5kZXguanM/OTIxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQjNQcm9wYWdhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CM1NpbmdsZVByb3BhZ2F0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0IzTXVsdGlQcm9wYWdhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/propagator-b3/build/src/types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/propagator-b3/build/src/types.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.B3InjectEncoding = void 0;\n/** Enumeration of B3 inject encodings */\nvar B3InjectEncoding;\n(function (B3InjectEncoding) {\n    B3InjectEncoding[B3InjectEncoding[\"SINGLE_HEADER\"] = 0] = \"SINGLE_HEADER\";\n    B3InjectEncoding[B3InjectEncoding[\"MULTI_HEADER\"] = 1] = \"MULTI_HEADER\";\n})(B3InjectEncoding = exports.B3InjectEncoding || (exports.B3InjectEncoding = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvdHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMy9idWlsZC9zcmMvdHlwZXMuanM/YTc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkIzSW5qZWN0RW5jb2RpbmcgPSB2b2lkIDA7XG4vKiogRW51bWVyYXRpb24gb2YgQjMgaW5qZWN0IGVuY29kaW5ncyAqL1xudmFyIEIzSW5qZWN0RW5jb2Rpbmc7XG4oZnVuY3Rpb24gKEIzSW5qZWN0RW5jb2RpbmcpIHtcbiAgICBCM0luamVjdEVuY29kaW5nW0IzSW5qZWN0RW5jb2RpbmdbXCJTSU5HTEVfSEVBREVSXCJdID0gMF0gPSBcIlNJTkdMRV9IRUFERVJcIjtcbiAgICBCM0luamVjdEVuY29kaW5nW0IzSW5qZWN0RW5jb2RpbmdbXCJNVUxUSV9IRUFERVJcIl0gPSAxXSA9IFwiTVVMVElfSEVBREVSXCI7XG59KShCM0luamVjdEVuY29kaW5nID0gZXhwb3J0cy5CM0luamVjdEVuY29kaW5nIHx8IChleHBvcnRzLkIzSW5qZWN0RW5jb2RpbmcgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/propagator-b3/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/Resource.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/Resource.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Resource = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@opentelemetry/resources/build/src/constants.js\");\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nclass Resource {\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    static empty() {\n        return Resource.EMPTY;\n    }\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    static createTelemetrySDKResource() {\n        return new Resource({\n            [constants_1.TELEMETRY_SDK_RESOURCE.LANGUAGE]: core_1.SDK_INFO.LANGUAGE,\n            [constants_1.TELEMETRY_SDK_RESOURCE.NAME]: core_1.SDK_INFO.NAME,\n            [constants_1.TELEMETRY_SDK_RESOURCE.VERSION]: core_1.SDK_INFO.VERSION,\n        });\n    }\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, current Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    merge(other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // Attributes from resource overwrite attributes from other resource.\n        const mergedAttributes = Object.assign({}, other.attributes, this.attributes);\n        return new Resource(mergedAttributes);\n    }\n}\nexports.Resource = Resource;\nResource.EMPTY = new Resource({});\n//# sourceMappingURL=Resource.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9SZXNvdXJjZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL1Jlc291cmNlLmpzPzkyMmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXNvdXJjZSA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vKipcbiAqIEEgUmVzb3VyY2UgZGVzY3JpYmVzIHRoZSBlbnRpdHkgZm9yIHdoaWNoIGEgc2lnbmFscyAobWV0cmljcyBvciB0cmFjZSkgYXJlXG4gKiBjb2xsZWN0ZWQuXG4gKi9cbmNsYXNzIFJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBBIGRpY3Rpb25hcnkgb2YgYXR0cmlidXRlcyB3aXRoIHN0cmluZyBrZXlzIGFuZCB2YWx1ZXMgdGhhdCBwcm92aWRlXG4gICAgICogaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVudGl0eSBhcyBudW1iZXJzLCBzdHJpbmdzIG9yIGJvb2xlYW5zXG4gICAgICogVE9ETzogQ29uc2lkZXIgdG8gYWRkIGNoZWNrL3ZhbGlkYXRpb24gb24gYXR0cmlidXRlcy5cbiAgICAgKi9cbiAgICBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gZW1wdHkgUmVzb3VyY2VcbiAgICAgKi9cbiAgICBzdGF0aWMgZW1wdHkoKSB7XG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5FTVBUWTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIFJlc291cmNlIHRoYXQgaW5kZW50aWZpZXMgdGhlIFNESyBpbiB1c2UuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVRlbGVtZXRyeVNES1Jlc291cmNlKCkge1xuICAgICAgICByZXR1cm4gbmV3IFJlc291cmNlKHtcbiAgICAgICAgICAgIFtjb25zdGFudHNfMS5URUxFTUVUUllfU0RLX1JFU09VUkNFLkxBTkdVQUdFXTogY29yZV8xLlNES19JTkZPLkxBTkdVQUdFLFxuICAgICAgICAgICAgW2NvbnN0YW50c18xLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UuTkFNRV06IGNvcmVfMS5TREtfSU5GTy5OQU1FLFxuICAgICAgICAgICAgW2NvbnN0YW50c18xLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UuVkVSU0lPTl06IGNvcmVfMS5TREtfSU5GTy5WRVJTSU9OLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldywgbWVyZ2VkIHtAbGluayBSZXNvdXJjZX0gYnkgbWVyZ2luZyB0aGUgY3VycmVudCBSZXNvdXJjZVxuICAgICAqIHdpdGggdGhlIG90aGVyIFJlc291cmNlLiBJbiBjYXNlIG9mIGEgY29sbGlzaW9uLCBjdXJyZW50IFJlc291cmNlIHRha2VzXG4gICAgICogcHJlY2VkZW5jZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvdGhlciB0aGUgUmVzb3VyY2UgdGhhdCB3aWxsIGJlIG1lcmdlZCB3aXRoIHRoaXMuXG4gICAgICogQHJldHVybnMgdGhlIG5ld2x5IG1lcmdlZCBSZXNvdXJjZS5cbiAgICAgKi9cbiAgICBtZXJnZShvdGhlcikge1xuICAgICAgICBpZiAoIW90aGVyIHx8ICFPYmplY3Qua2V5cyhvdGhlci5hdHRyaWJ1dGVzKS5sZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgLy8gQXR0cmlidXRlcyBmcm9tIHJlc291cmNlIG92ZXJ3cml0ZSBhdHRyaWJ1dGVzIGZyb20gb3RoZXIgcmVzb3VyY2UuXG4gICAgICAgIGNvbnN0IG1lcmdlZEF0dHJpYnV0ZXMgPSBPYmplY3QuYXNzaWduKHt9LCBvdGhlci5hdHRyaWJ1dGVzLCB0aGlzLmF0dHJpYnV0ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IFJlc291cmNlKG1lcmdlZEF0dHJpYnV0ZXMpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVzb3VyY2UgPSBSZXNvdXJjZTtcblJlc291cmNlLkVNUFRZID0gbmV3IFJlc291cmNlKHt9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlc291cmNlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/Resource.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/config.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/config.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25maWcuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25maWcuanM/NTkwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/config.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/constants.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROCESS_RESOURCE = exports.SERVICE_RESOURCE = exports.TELEMETRY_SDK_RESOURCE = exports.K8S_RESOURCE = exports.HOST_RESOURCE = exports.CONTAINER_RESOURCE = exports.CLOUD_RESOURCE = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.CLOUD_RESOURCE = {\n    /** Name of the cloud provider. Example values are aws, azure, gcp. */\n    PROVIDER: 'cloud.provider',\n    /** The cloud account id used to identify different entities. */\n    ACCOUNT_ID: 'cloud.account.id',\n    /** A specific geographical location where different entities can run. */\n    REGION: 'cloud.region',\n    /** Zones are a sub set of the region connected through low-latency links. */\n    ZONE: 'cloud.zone',\n};\n/**\n * Attributes defining a compute unit (e.g. Container, Process, Lambda\n * Function).\n * */\nexports.CONTAINER_RESOURCE = {\n    /** The container name. */\n    NAME: 'container.name',\n    /** The container id. */\n    ID: 'container.id',\n    /** The name of the image the container was built on. */\n    IMAGE_NAME: 'container.image.name',\n    /** The container image tag. */\n    IMAGE_TAG: 'container.image.tag',\n};\n/** Attributes defining a computing instance (e.g. host). */\nexports.HOST_RESOURCE = {\n    /**\n     * Unique host id. For Cloud this must be the instance_id assigned by the\n     * cloud provider\n     */\n    ID: 'host.id',\n    /**\n     * Name of the host. It may contain what hostname returns on Unix systems,\n     * the fully qualified, or a name specified by the user.\n     */\n    NAME: 'host.name',\n    /** Type of host. For Cloud this must be the machine type.*/\n    TYPE: 'host.type',\n    /** Name of the VM image or OS install the host was instantiated from. */\n    IMAGE_NAME: 'host.image.name',\n    /** VM image id. For Cloud, this value is from the provider. */\n    IMAGE_ID: 'host.image.id',\n    /** The version string of the VM image */\n    IMAGE_VERSION: 'host.image.version',\n};\n/** Attributes defining a deployment service (e.g. Kubernetes). */\nexports.K8S_RESOURCE = {\n    /** The name of the cluster that the pod is running in. */\n    CLUSTER_NAME: 'k8s.cluster.name',\n    /** The name of the namespace that the pod is running in. */\n    NAMESPACE_NAME: 'k8s.namespace.name',\n    /** The name of the pod. */\n    POD_NAME: 'k8s.pod.name',\n    /** The name of the deployment. */\n    DEPLOYMENT_NAME: 'k8s.deployment.name',\n};\n/** Attributes describing the telemetry library. */\nexports.TELEMETRY_SDK_RESOURCE = {\n    /** The name of the telemetry library. */\n    NAME: 'telemetry.sdk.name',\n    /** The language of telemetry library and of the code instrumented with it. */\n    LANGUAGE: 'telemetry.sdk.language',\n    /** The version string of the telemetry library */\n    VERSION: 'telemetry.sdk.version',\n};\n/** Attributes describing a service instance. */\nexports.SERVICE_RESOURCE = {\n    /** Logical name of the service.  */\n    NAME: 'service.name',\n    /** A namespace for `service.name`. */\n    NAMESPACE: 'service.namespace',\n    /** The string ID of the service instance. */\n    INSTANCE_ID: 'service.instance.id',\n    /** The version string of the service API or implementation. */\n    VERSION: 'service.version',\n};\n/** Attributes describing a Process. */\nexports.PROCESS_RESOURCE = {\n    /** A command which launced this proces.  */\n    COMMAND: 'process.command',\n    /** The full command with arguments as string.  */\n    COMMAND_LINE: 'process.command_line',\n    /** A name given to currently running porcess defaults to executable (process.title) .  */\n    NAME: 'process.executable.name',\n    /** An owner of currently running process.  */\n    OWNER: 'process.owner',\n    /** The full path to the process executable.  */\n    PATH: 'process.executable.path',\n    /** Process identifier of currently running process.  */\n    PID: 'process.id',\n};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25zdGFudHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25zdGFudHMuanM/ZTNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUFJPQ0VTU19SRVNPVVJDRSA9IGV4cG9ydHMuU0VSVklDRV9SRVNPVVJDRSA9IGV4cG9ydHMuVEVMRU1FVFJZX1NES19SRVNPVVJDRSA9IGV4cG9ydHMuSzhTX1JFU09VUkNFID0gZXhwb3J0cy5IT1NUX1JFU09VUkNFID0gZXhwb3J0cy5DT05UQUlORVJfUkVTT1VSQ0UgPSBleHBvcnRzLkNMT1VEX1JFU09VUkNFID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydHMuQ0xPVURfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIE5hbWUgb2YgdGhlIGNsb3VkIHByb3ZpZGVyLiBFeGFtcGxlIHZhbHVlcyBhcmUgYXdzLCBhenVyZSwgZ2NwLiAqL1xuICAgIFBST1ZJREVSOiAnY2xvdWQucHJvdmlkZXInLFxuICAgIC8qKiBUaGUgY2xvdWQgYWNjb3VudCBpZCB1c2VkIHRvIGlkZW50aWZ5IGRpZmZlcmVudCBlbnRpdGllcy4gKi9cbiAgICBBQ0NPVU5UX0lEOiAnY2xvdWQuYWNjb3VudC5pZCcsXG4gICAgLyoqIEEgc3BlY2lmaWMgZ2VvZ3JhcGhpY2FsIGxvY2F0aW9uIHdoZXJlIGRpZmZlcmVudCBlbnRpdGllcyBjYW4gcnVuLiAqL1xuICAgIFJFR0lPTjogJ2Nsb3VkLnJlZ2lvbicsXG4gICAgLyoqIFpvbmVzIGFyZSBhIHN1YiBzZXQgb2YgdGhlIHJlZ2lvbiBjb25uZWN0ZWQgdGhyb3VnaCBsb3ctbGF0ZW5jeSBsaW5rcy4gKi9cbiAgICBaT05FOiAnY2xvdWQuem9uZScsXG59O1xuLyoqXG4gKiBBdHRyaWJ1dGVzIGRlZmluaW5nIGEgY29tcHV0ZSB1bml0IChlLmcuIENvbnRhaW5lciwgUHJvY2VzcywgTGFtYmRhXG4gKiBGdW5jdGlvbikuXG4gKiAqL1xuZXhwb3J0cy5DT05UQUlORVJfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIFRoZSBjb250YWluZXIgbmFtZS4gKi9cbiAgICBOQU1FOiAnY29udGFpbmVyLm5hbWUnLFxuICAgIC8qKiBUaGUgY29udGFpbmVyIGlkLiAqL1xuICAgIElEOiAnY29udGFpbmVyLmlkJyxcbiAgICAvKiogVGhlIG5hbWUgb2YgdGhlIGltYWdlIHRoZSBjb250YWluZXIgd2FzIGJ1aWx0IG9uLiAqL1xuICAgIElNQUdFX05BTUU6ICdjb250YWluZXIuaW1hZ2UubmFtZScsXG4gICAgLyoqIFRoZSBjb250YWluZXIgaW1hZ2UgdGFnLiAqL1xuICAgIElNQUdFX1RBRzogJ2NvbnRhaW5lci5pbWFnZS50YWcnLFxufTtcbi8qKiBBdHRyaWJ1dGVzIGRlZmluaW5nIGEgY29tcHV0aW5nIGluc3RhbmNlIChlLmcuIGhvc3QpLiAqL1xuZXhwb3J0cy5IT1NUX1JFU09VUkNFID0ge1xuICAgIC8qKlxuICAgICAqIFVuaXF1ZSBob3N0IGlkLiBGb3IgQ2xvdWQgdGhpcyBtdXN0IGJlIHRoZSBpbnN0YW5jZV9pZCBhc3NpZ25lZCBieSB0aGVcbiAgICAgKiBjbG91ZCBwcm92aWRlclxuICAgICAqL1xuICAgIElEOiAnaG9zdC5pZCcsXG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgaG9zdC4gSXQgbWF5IGNvbnRhaW4gd2hhdCBob3N0bmFtZSByZXR1cm5zIG9uIFVuaXggc3lzdGVtcyxcbiAgICAgKiB0aGUgZnVsbHkgcXVhbGlmaWVkLCBvciBhIG5hbWUgc3BlY2lmaWVkIGJ5IHRoZSB1c2VyLlxuICAgICAqL1xuICAgIE5BTUU6ICdob3N0Lm5hbWUnLFxuICAgIC8qKiBUeXBlIG9mIGhvc3QuIEZvciBDbG91ZCB0aGlzIG11c3QgYmUgdGhlIG1hY2hpbmUgdHlwZS4qL1xuICAgIFRZUEU6ICdob3N0LnR5cGUnLFxuICAgIC8qKiBOYW1lIG9mIHRoZSBWTSBpbWFnZSBvciBPUyBpbnN0YWxsIHRoZSBob3N0IHdhcyBpbnN0YW50aWF0ZWQgZnJvbS4gKi9cbiAgICBJTUFHRV9OQU1FOiAnaG9zdC5pbWFnZS5uYW1lJyxcbiAgICAvKiogVk0gaW1hZ2UgaWQuIEZvciBDbG91ZCwgdGhpcyB2YWx1ZSBpcyBmcm9tIHRoZSBwcm92aWRlci4gKi9cbiAgICBJTUFHRV9JRDogJ2hvc3QuaW1hZ2UuaWQnLFxuICAgIC8qKiBUaGUgdmVyc2lvbiBzdHJpbmcgb2YgdGhlIFZNIGltYWdlICovXG4gICAgSU1BR0VfVkVSU0lPTjogJ2hvc3QuaW1hZ2UudmVyc2lvbicsXG59O1xuLyoqIEF0dHJpYnV0ZXMgZGVmaW5pbmcgYSBkZXBsb3ltZW50IHNlcnZpY2UgKGUuZy4gS3ViZXJuZXRlcykuICovXG5leHBvcnRzLks4U19SRVNPVVJDRSA9IHtcbiAgICAvKiogVGhlIG5hbWUgb2YgdGhlIGNsdXN0ZXIgdGhhdCB0aGUgcG9kIGlzIHJ1bm5pbmcgaW4uICovXG4gICAgQ0xVU1RFUl9OQU1FOiAnazhzLmNsdXN0ZXIubmFtZScsXG4gICAgLyoqIFRoZSBuYW1lIG9mIHRoZSBuYW1lc3BhY2UgdGhhdCB0aGUgcG9kIGlzIHJ1bm5pbmcgaW4uICovXG4gICAgTkFNRVNQQUNFX05BTUU6ICdrOHMubmFtZXNwYWNlLm5hbWUnLFxuICAgIC8qKiBUaGUgbmFtZSBvZiB0aGUgcG9kLiAqL1xuICAgIFBPRF9OQU1FOiAnazhzLnBvZC5uYW1lJyxcbiAgICAvKiogVGhlIG5hbWUgb2YgdGhlIGRlcGxveW1lbnQuICovXG4gICAgREVQTE9ZTUVOVF9OQU1FOiAnazhzLmRlcGxveW1lbnQubmFtZScsXG59O1xuLyoqIEF0dHJpYnV0ZXMgZGVzY3JpYmluZyB0aGUgdGVsZW1ldHJ5IGxpYnJhcnkuICovXG5leHBvcnRzLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIFRoZSBuYW1lIG9mIHRoZSB0ZWxlbWV0cnkgbGlicmFyeS4gKi9cbiAgICBOQU1FOiAndGVsZW1ldHJ5LnNkay5uYW1lJyxcbiAgICAvKiogVGhlIGxhbmd1YWdlIG9mIHRlbGVtZXRyeSBsaWJyYXJ5IGFuZCBvZiB0aGUgY29kZSBpbnN0cnVtZW50ZWQgd2l0aCBpdC4gKi9cbiAgICBMQU5HVUFHRTogJ3RlbGVtZXRyeS5zZGsubGFuZ3VhZ2UnLFxuICAgIC8qKiBUaGUgdmVyc2lvbiBzdHJpbmcgb2YgdGhlIHRlbGVtZXRyeSBsaWJyYXJ5ICovXG4gICAgVkVSU0lPTjogJ3RlbGVtZXRyeS5zZGsudmVyc2lvbicsXG59O1xuLyoqIEF0dHJpYnV0ZXMgZGVzY3JpYmluZyBhIHNlcnZpY2UgaW5zdGFuY2UuICovXG5leHBvcnRzLlNFUlZJQ0VfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIExvZ2ljYWwgbmFtZSBvZiB0aGUgc2VydmljZS4gICovXG4gICAgTkFNRTogJ3NlcnZpY2UubmFtZScsXG4gICAgLyoqIEEgbmFtZXNwYWNlIGZvciBgc2VydmljZS5uYW1lYC4gKi9cbiAgICBOQU1FU1BBQ0U6ICdzZXJ2aWNlLm5hbWVzcGFjZScsXG4gICAgLyoqIFRoZSBzdHJpbmcgSUQgb2YgdGhlIHNlcnZpY2UgaW5zdGFuY2UuICovXG4gICAgSU5TVEFOQ0VfSUQ6ICdzZXJ2aWNlLmluc3RhbmNlLmlkJyxcbiAgICAvKiogVGhlIHZlcnNpb24gc3RyaW5nIG9mIHRoZSBzZXJ2aWNlIEFQSSBvciBpbXBsZW1lbnRhdGlvbi4gKi9cbiAgICBWRVJTSU9OOiAnc2VydmljZS52ZXJzaW9uJyxcbn07XG4vKiogQXR0cmlidXRlcyBkZXNjcmliaW5nIGEgUHJvY2Vzcy4gKi9cbmV4cG9ydHMuUFJPQ0VTU19SRVNPVVJDRSA9IHtcbiAgICAvKiogQSBjb21tYW5kIHdoaWNoIGxhdW5jZWQgdGhpcyBwcm9jZXMuICAqL1xuICAgIENPTU1BTkQ6ICdwcm9jZXNzLmNvbW1hbmQnLFxuICAgIC8qKiBUaGUgZnVsbCBjb21tYW5kIHdpdGggYXJndW1lbnRzIGFzIHN0cmluZy4gICovXG4gICAgQ09NTUFORF9MSU5FOiAncHJvY2Vzcy5jb21tYW5kX2xpbmUnLFxuICAgIC8qKiBBIG5hbWUgZ2l2ZW4gdG8gY3VycmVudGx5IHJ1bm5pbmcgcG9yY2VzcyBkZWZhdWx0cyB0byBleGVjdXRhYmxlIChwcm9jZXNzLnRpdGxlKSAuICAqL1xuICAgIE5BTUU6ICdwcm9jZXNzLmV4ZWN1dGFibGUubmFtZScsXG4gICAgLyoqIEFuIG93bmVyIG9mIGN1cnJlbnRseSBydW5uaW5nIHByb2Nlc3MuICAqL1xuICAgIE9XTkVSOiAncHJvY2Vzcy5vd25lcicsXG4gICAgLyoqIFRoZSBmdWxsIHBhdGggdG8gdGhlIHByb2Nlc3MgZXhlY3V0YWJsZS4gICovXG4gICAgUEFUSDogJ3Byb2Nlc3MuZXhlY3V0YWJsZS5wYXRoJyxcbiAgICAvKiogUHJvY2VzcyBpZGVudGlmaWVyIG9mIGN1cnJlbnRseSBydW5uaW5nIHByb2Nlc3MuICAqL1xuICAgIFBJRDogJ3Byb2Nlc3MuaWQnLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/constants.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Resource */ \"./node_modules/@opentelemetry/resources/build/src/Resource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@opentelemetry/resources/build/src/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/resources/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/resources/build/src/config.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL2luZGV4LmpzPzNmYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Jlc291cmNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbGF0Zm9ybVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uZmlnXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectResources = void 0;\nconst Resource_1 = __webpack_require__(/*! ../../Resource */ \"./node_modules/@opentelemetry/resources/build/src/Resource.js\");\n/**\n * Detects resources for the browser platform, which is currently only the\n * telemetry SDK resource. More could be added in the future. This method\n * is async to match the signature of corresponding method for node.\n */\nexports.detectResources = async () => {\n    return Resource_1.Resource.createTelemetrySDKResource();\n};\n//# sourceMappingURL=detect-resources.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2RldGVjdC1yZXNvdXJjZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2RldGVjdC1yZXNvdXJjZXMuanM/ZmIyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRldGVjdFJlc291cmNlcyA9IHZvaWQgMDtcbmNvbnN0IFJlc291cmNlXzEgPSByZXF1aXJlKFwiLi4vLi4vUmVzb3VyY2VcIik7XG4vKipcbiAqIERldGVjdHMgcmVzb3VyY2VzIGZvciB0aGUgYnJvd3NlciBwbGF0Zm9ybSwgd2hpY2ggaXMgY3VycmVudGx5IG9ubHkgdGhlXG4gKiB0ZWxlbWV0cnkgU0RLIHJlc291cmNlLiBNb3JlIGNvdWxkIGJlIGFkZGVkIGluIHRoZSBmdXR1cmUuIFRoaXMgbWV0aG9kXG4gKiBpcyBhc3luYyB0byBtYXRjaCB0aGUgc2lnbmF0dXJlIG9mIGNvcnJlc3BvbmRpbmcgbWV0aG9kIGZvciBub2RlLlxuICovXG5leHBvcnRzLmRldGVjdFJlc291cmNlcyA9IGFzeW5jICgpID0+IHtcbiAgICByZXR1cm4gUmVzb3VyY2VfMS5SZXNvdXJjZS5jcmVhdGVUZWxlbWV0cnlTREtSZXNvdXJjZSgpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1yZXNvdXJjZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./detect-resources */ \"./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz81M2ZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZXRlY3QtcmVzb3VyY2VzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/types.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL3R5cGVzLmpzPzJhMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./trace */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy9pbmRleC5qcz8xZjI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/database.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/database.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseAttribute = void 0;\n/**\n * Database attribute names defined by the Opetelemetry Semantic Conventions specification\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/database.md\n */\nexports.DatabaseAttribute = {\n    // Connection-level attributes\n    /**\n     * An identifier for the database management system (DBMS) product being used.\n     *\n     * @remarks\n     * Required.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database.\n     * It is recommended to remove embedded credentials.\n     *\n     * @remarks\n     * Optional.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database, e.g., \"readonly_user\" or \"reporting_user\".\n     *\n     * @remarks\n     * Optional.\n     */\n    DB_USER: 'db.user',\n    // Please see ./general.ts for NET_PEER_NAME, NET_PEER_IP, NET_PEER_PORT, NET_TRANSPORT\n    // Call-level attributes\n    /**\n     * If no [tech-specific attribute](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/database.md#call-level-attributes-for-specific-technologies)\n     * is defined in the list below,\n     * this attribute is used to report the name of the database being accessed.\n     * For commands that switch the database,this should be set to the\n     * target database (even if the command fails).\n     *\n     * @remarks\n     * Required if applicable and no more specific attribute is defined.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     * Note that the value may be sanitized to exclude sensitive information.\n     * E.g., for db.system=\"other_sql\", \"SELECT * FROM wuser_table\";\n     * for db.system=\"redis\", \"SET mykey 'WuValue'\".\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed,\n     * e.g. the MongoDB command name such as findAndModify.\n     * While it would semantically make sense to set this,\n     * e.g., to an SQL keyword like SELECT or INSERT,\n     * it is not recommended to attempt any client-side parsing of\n     * db.statement just to get this property (the back end can do that if required).\n     *\n     * @remarks\n     * Required if db.statement is not applicable.\n     */\n    DB_OPERATION: 'db.operation',\n    // Connection-level attributes for specific technologies\n    /**\n     * The instance name connecting to.\n     * This name is used to determine the port of a named instance.\n     *\n     * @remarks\n     * If setting a `db.mssql.instance_name`,\n     * `net.peer.port` is no longer required (but still recommended if non-standard)\n     */\n    DB_MSSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The fully-qualified class name of the Java Database Connectivity (JDBC) driver used to connect,\n     * e.g., \"org.postgresql.Driver\" or \"com.microsoft.sqlserver.jdbc.SQLServerDriver\".\n     *\n     * @remarks\n     * Optional.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    // Call-level attributes for specific technologies\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic db.name attribute.\n     *\n     * @remarks\n     * Required.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed.\n     * To be used instead of the generic db.name attribute.\n     *\n     * @remarks\n     * Required.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [SELECT command](https://redis.io/commands/select),\n     * provided as an integer. To be used instead of the generic db.name attribute.\n     *\n     * @remarks\n     * Required if other than the default database (0).\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in db.name.\n     *\n     * @remarks\n     * Required.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    // Not in spec.\n    /** Deprecated. Not in spec. */\n    DB_TYPE: 'db.type',\n    /** Deprecated. Not in spec. */\n    DB_INSTANCE: 'db.instance',\n    /** Deprecated. Not in spec. */\n    DB_URL: 'db.url',\n};\n//# sourceMappingURL=database.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/database.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/exception.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/exception.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExceptionEventName = exports.ExceptionAttribute = void 0;\nexports.ExceptionAttribute = {\n    MESSAGE: 'exception.message',\n    STACKTRACE: 'exception.stacktrace',\n    TYPE: 'exception.type',\n};\nexports.ExceptionEventName = 'exception';\n//# sourceMappingURL=exception.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2V4Y2VwdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9ucy9idWlsZC9zcmMvdHJhY2UvZXhjZXB0aW9uLmpzP2ZmNDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FeGNlcHRpb25FdmVudE5hbWUgPSBleHBvcnRzLkV4Y2VwdGlvbkF0dHJpYnV0ZSA9IHZvaWQgMDtcbmV4cG9ydHMuRXhjZXB0aW9uQXR0cmlidXRlID0ge1xuICAgIE1FU1NBR0U6ICdleGNlcHRpb24ubWVzc2FnZScsXG4gICAgU1RBQ0tUUkFDRTogJ2V4Y2VwdGlvbi5zdGFja3RyYWNlJyxcbiAgICBUWVBFOiAnZXhjZXB0aW9uLnR5cGUnLFxufTtcbmV4cG9ydHMuRXhjZXB0aW9uRXZlbnROYW1lID0gJ2V4Y2VwdGlvbic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leGNlcHRpb24uanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/exception.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/faas.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/faas.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaasAttribute = void 0;\n/**\n * FaaS (Function as a Service) attribute names defined by the Opetelemetry Semantic Conventions specification\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/faas.md\n */\nexports.FaasAttribute = {\n    // General attributes\n    /**\n     * The name of the function being executed.\n     *\n     * @remarks\n     * Required.\n     */\n    FAAS_NAME: 'faas.name',\n    /**\n     * The unique ID of the function being executed.\n     * For example, in AWS Lambda this field corresponds to the ARN value, in GCP to the URI of the resource, and in Azure to the FunctionDirectory field.\n     *\n     * @remarks\n     * Required.\n     */\n    FAAS_ID: 'faas.id',\n    /**\n     * The version string of the function being executed.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_VERSION: 'faas.version',\n    /**\n     * The execution environment ID as a string.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n     * Type of the trigger on which the function is executed.\n     * Possible values: datasource, http, pubsub, timer, other\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    // Incoming Invocations\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_COLD_START: 'faas.coldstart',\n    // Outgoing Invocations\n    // This section describes outgoing FaaS invocations as they are reported by a client calling a FaaS instance.\n    /**\n     * The name of the invoked function.\n     * SHOULD be equal to the faas.name resource attribute of the invoked function.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     * SHOULD be equal to the cloud.provider resource attribute of the invoked function.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *  SHOULD be equal to the cloud.region resource attribute of the invoked function.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    // Datesource Trigger\n    /**\n     * The name of the source on which the triggering operation was performed.\n     * For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    FAAS_DOC_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     * MUST be one of the following or, if none of the listed values apply, a custom value: insert, edit, delete\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    FAAS_DOC_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the ISO 8601 format expressed in UTC.\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    FAAS_DOC_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation.\n     * For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_DOC_NAME: 'faas.document.name',\n    // Timer Trigger\n    /**\n     * A string containing the function invocation time in the ISO 8601 format expressed in UTC.\n     * Example: \"2020-01-23T13:47:06Z\"\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as Cron Expression.\n     * Example: \"0/5 * * * ? *\"\n     *\n     * @remarks\n     * Optional.\n     */\n    FAAS_CRON: 'faas.cron',\n};\n//# sourceMappingURL=faas.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2ZhYXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2ZhYXMuanM/NDgyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZhYXNBdHRyaWJ1dGUgPSB2b2lkIDA7XG4vKipcbiAqIEZhYVMgKEZ1bmN0aW9uIGFzIGEgU2VydmljZSkgYXR0cmlidXRlIG5hbWVzIGRlZmluZWQgYnkgdGhlIE9wZXRlbGVtZXRyeSBTZW1hbnRpYyBDb252ZW50aW9ucyBzcGVjaWZpY2F0aW9uXG4gKiBodHRwczovL2dpdGh1Yi5jb20vb3Blbi10ZWxlbWV0cnkvb3BlbnRlbGVtZXRyeS1zcGVjaWZpY2F0aW9uL2Jsb2IvbWFzdGVyL3NwZWNpZmljYXRpb24vdHJhY2Uvc2VtYW50aWNfY29udmVudGlvbnMvZmFhcy5tZFxuICovXG5leHBvcnRzLkZhYXNBdHRyaWJ1dGUgPSB7XG4gICAgLy8gR2VuZXJhbCBhdHRyaWJ1dGVzXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGZ1bmN0aW9uIGJlaW5nIGV4ZWN1dGVkLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZC5cbiAgICAgKi9cbiAgICBGQUFTX05BTUU6ICdmYWFzLm5hbWUnLFxuICAgIC8qKlxuICAgICAqIFRoZSB1bmlxdWUgSUQgb2YgdGhlIGZ1bmN0aW9uIGJlaW5nIGV4ZWN1dGVkLlxuICAgICAqIEZvciBleGFtcGxlLCBpbiBBV1MgTGFtYmRhIHRoaXMgZmllbGQgY29ycmVzcG9uZHMgdG8gdGhlIEFSTiB2YWx1ZSwgaW4gR0NQIHRvIHRoZSBVUkkgb2YgdGhlIHJlc291cmNlLCBhbmQgaW4gQXp1cmUgdG8gdGhlIEZ1bmN0aW9uRGlyZWN0b3J5IGZpZWxkLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZC5cbiAgICAgKi9cbiAgICBGQUFTX0lEOiAnZmFhcy5pZCcsXG4gICAgLyoqXG4gICAgICogVGhlIHZlcnNpb24gc3RyaW5nIG9mIHRoZSBmdW5jdGlvbiBiZWluZyBleGVjdXRlZC5cbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgRkFBU19WRVJTSU9OOiAnZmFhcy52ZXJzaW9uJyxcbiAgICAvKipcbiAgICAgKiBUaGUgZXhlY3V0aW9uIGVudmlyb25tZW50IElEIGFzIGEgc3RyaW5nLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBGQUFTX0lOU1RBTkNFOiAnZmFhcy5pbnN0YW5jZScsXG4gICAgLyoqXG4gICAgICogVHlwZSBvZiB0aGUgdHJpZ2dlciBvbiB3aGljaCB0aGUgZnVuY3Rpb24gaXMgZXhlY3V0ZWQuXG4gICAgICogUG9zc2libGUgdmFsdWVzOiBkYXRhc291cmNlLCBodHRwLCBwdWJzdWIsIHRpbWVyLCBvdGhlclxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZCBpZiBhcHBsaWNhYmxlLlxuICAgICAqL1xuICAgIEZBQVNfVFJJR0dFUjogJ2ZhYXMudHJpZ2dlcicsXG4gICAgLyoqXG4gICAgICogVGhlIGV4ZWN1dGlvbiBJRCBvZiB0aGUgY3VycmVudCBmdW5jdGlvbiBleGVjdXRpb24uXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIE9wdGlvbmFsLlxuICAgICAqL1xuICAgIEZBQVNfRVhFQ1VUSU9OOiAnZmFhcy5leGVjdXRpb24nLFxuICAgIC8vIEluY29taW5nIEludm9jYXRpb25zXG4gICAgLyoqXG4gICAgICogQSBib29sZWFuIHRoYXQgaXMgdHJ1ZSBpZiB0aGUgc2VydmVybGVzcyBmdW5jdGlvbiBpcyBleGVjdXRlZCBmb3IgdGhlIGZpcnN0IHRpbWUgKGFrYSBjb2xkLXN0YXJ0KS5cbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgRkFBU19DT0xEX1NUQVJUOiAnZmFhcy5jb2xkc3RhcnQnLFxuICAgIC8vIE91dGdvaW5nIEludm9jYXRpb25zXG4gICAgLy8gVGhpcyBzZWN0aW9uIGRlc2NyaWJlcyBvdXRnb2luZyBGYWFTIGludm9jYXRpb25zIGFzIHRoZXkgYXJlIHJlcG9ydGVkIGJ5IGEgY2xpZW50IGNhbGxpbmcgYSBGYWFTIGluc3RhbmNlLlxuICAgIC8qKlxuICAgICAqIFRoZSBuYW1lIG9mIHRoZSBpbnZva2VkIGZ1bmN0aW9uLlxuICAgICAqIFNIT1VMRCBiZSBlcXVhbCB0byB0aGUgZmFhcy5uYW1lIHJlc291cmNlIGF0dHJpYnV0ZSBvZiB0aGUgaW52b2tlZCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgRkFBU19JTlZPS0VEX05BTUU6ICdmYWFzLmludm9rZWRfbmFtZScsXG4gICAgLyoqXG4gICAgICogVGhlIGNsb3VkIHByb3ZpZGVyIG9mIHRoZSBpbnZva2VkIGZ1bmN0aW9uLlxuICAgICAqIFNIT1VMRCBiZSBlcXVhbCB0byB0aGUgY2xvdWQucHJvdmlkZXIgcmVzb3VyY2UgYXR0cmlidXRlIG9mIHRoZSBpbnZva2VkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBGQUFTX0lOVk9LRURfUFJPVklERVI6ICdmYWFzLmludm9rZWRfcHJvdmlkZXInLFxuICAgIC8qKlxuICAgICAqIFRoZSBjbG91ZCByZWdpb24gb2YgdGhlIGludm9rZWQgZnVuY3Rpb24uXG4gICAgICogIFNIT1VMRCBiZSBlcXVhbCB0byB0aGUgY2xvdWQucmVnaW9uIHJlc291cmNlIGF0dHJpYnV0ZSBvZiB0aGUgaW52b2tlZCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgRkFBU19JTlZPS0VEX1JFR0lPTjogJ2ZhYXMuaW52b2tlZF9yZWdpb24nLFxuICAgIC8vIERhdGVzb3VyY2UgVHJpZ2dlclxuICAgIC8qKlxuICAgICAqIFRoZSBuYW1lIG9mIHRoZSBzb3VyY2Ugb24gd2hpY2ggdGhlIHRyaWdnZXJpbmcgb3BlcmF0aW9uIHdhcyBwZXJmb3JtZWQuXG4gICAgICogRm9yIGV4YW1wbGUsIGluIENsb3VkIFN0b3JhZ2Ugb3IgUzMgY29ycmVzcG9uZHMgdG8gdGhlIGJ1Y2tldCBuYW1lLCBhbmQgaW4gQ29zbW9zIERCIHRvIHRoZSBkYXRhYmFzZSBuYW1lLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZCBpZiBhcHBsaWNhYmxlLlxuICAgICAqL1xuICAgIEZBQVNfRE9DX0NPTExFQ1RJT046ICdmYWFzLmRvY3VtZW50LmNvbGxlY3Rpb24nLFxuICAgIC8qKlxuICAgICAqIERlc2NyaWJlcyB0aGUgdHlwZSBvZiB0aGUgb3BlcmF0aW9uIHRoYXQgd2FzIHBlcmZvcm1lZCBvbiB0aGUgZGF0YS5cbiAgICAgKiBNVVNUIGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nIG9yLCBpZiBub25lIG9mIHRoZSBsaXN0ZWQgdmFsdWVzIGFwcGx5LCBhIGN1c3RvbSB2YWx1ZTogaW5zZXJ0LCBlZGl0LCBkZWxldGVcbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogUmVxdWlyZWQgaWYgYXBwbGljYWJsZS5cbiAgICAgKi9cbiAgICBGQUFTX0RPQ19PUEVSQVRJT046ICdmYWFzLmRvY3VtZW50Lm9wZXJhdGlvbicsXG4gICAgLyoqXG4gICAgICogQSBzdHJpbmcgY29udGFpbmluZyB0aGUgdGltZSB3aGVuIHRoZSBkYXRhIHdhcyBhY2Nlc3NlZCBpbiB0aGUgSVNPIDg2MDEgZm9ybWF0IGV4cHJlc3NlZCBpbiBVVEMuXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIFJlcXVpcmVkIGlmIGFwcGxpY2FibGUuXG4gICAgICovXG4gICAgRkFBU19ET0NfVElNRTogJ2ZhYXMuZG9jdW1lbnQudGltZScsXG4gICAgLyoqXG4gICAgICogVGhlIGRvY3VtZW50IG5hbWUvdGFibGUgc3ViamVjdGVkIHRvIHRoZSBvcGVyYXRpb24uXG4gICAgICogRm9yIGV4YW1wbGUsIGluIENsb3VkIFN0b3JhZ2Ugb3IgUzMgaXMgdGhlIG5hbWUgb2YgdGhlIGZpbGUsIGFuZCBpbiBDb3Ntb3MgREIgdGhlIHRhYmxlIG5hbWUuXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIE9wdGlvbmFsLlxuICAgICAqL1xuICAgIEZBQVNfRE9DX05BTUU6ICdmYWFzLmRvY3VtZW50Lm5hbWUnLFxuICAgIC8vIFRpbWVyIFRyaWdnZXJcbiAgICAvKipcbiAgICAgKiBBIHN0cmluZyBjb250YWluaW5nIHRoZSBmdW5jdGlvbiBpbnZvY2F0aW9uIHRpbWUgaW4gdGhlIElTTyA4NjAxIGZvcm1hdCBleHByZXNzZWQgaW4gVVRDLlxuICAgICAqIEV4YW1wbGU6IFwiMjAyMC0wMS0yM1QxMzo0NzowNlpcIlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZCBpZiBhcHBsaWNhYmxlLlxuICAgICAqL1xuICAgIEZBQVNfVElNRTogJ2ZhYXMudGltZScsXG4gICAgLyoqXG4gICAgICogQSBzdHJpbmcgY29udGFpbmluZyB0aGUgc2NoZWR1bGUgcGVyaW9kIGFzIENyb24gRXhwcmVzc2lvbi5cbiAgICAgKiBFeGFtcGxlOiBcIjAvNSAqICogKiA/ICpcIlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBGQUFTX0NST046ICdmYWFzLmNyb24nLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZhYXMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/faas.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/general.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/general.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneralAttribute = void 0;\n/**\n * General purpose networking attributes defined by the OpenTelemetry Semantic Conventions Specification\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/span-general.md\n */\nexports.GeneralAttribute = {\n    NET_PEER_IP: 'net.peer.ip',\n    NET_PEER_ADDRESS: 'net.peer.address',\n    NET_PEER_HOSTNAME: 'net.peer.host',\n    NET_PEER_PORT: 'net.peer.port',\n    NET_PEER_NAME: 'net.peer.name',\n    NET_PEER_IPV4: 'net.peer.ipv4',\n    NET_PEER_IPV6: 'net.peer.ipv6',\n    NET_PEER_SERVICE: 'net.peer.service',\n    NET_HOST_IP: 'net.host.ip',\n    NET_HOST_PORT: 'net.host.port',\n    NET_HOST_NAME: 'net.host.name',\n    NET_TRANSPORT: 'net.transport',\n    // These are used as potential values to NET_TRANSPORT\n    IP_TCP: 'IP.TCP',\n    IP_UDP: 'IP.UDP',\n    INPROC: 'inproc',\n};\n//# sourceMappingURL=general.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2dlbmVyYWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2dlbmVyYWwuanM/YzM5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdlbmVyYWxBdHRyaWJ1dGUgPSB2b2lkIDA7XG4vKipcbiAqIEdlbmVyYWwgcHVycG9zZSBuZXR3b3JraW5nIGF0dHJpYnV0ZXMgZGVmaW5lZCBieSB0aGUgT3BlblRlbGVtZXRyeSBTZW1hbnRpYyBDb252ZW50aW9ucyBTcGVjaWZpY2F0aW9uXG4gKiBodHRwczovL2dpdGh1Yi5jb20vb3Blbi10ZWxlbWV0cnkvb3BlbnRlbGVtZXRyeS1zcGVjaWZpY2F0aW9uL2Jsb2IvbWFzdGVyL3NwZWNpZmljYXRpb24vdHJhY2Uvc2VtYW50aWNfY29udmVudGlvbnMvc3Bhbi1nZW5lcmFsLm1kXG4gKi9cbmV4cG9ydHMuR2VuZXJhbEF0dHJpYnV0ZSA9IHtcbiAgICBORVRfUEVFUl9JUDogJ25ldC5wZWVyLmlwJyxcbiAgICBORVRfUEVFUl9BRERSRVNTOiAnbmV0LnBlZXIuYWRkcmVzcycsXG4gICAgTkVUX1BFRVJfSE9TVE5BTUU6ICduZXQucGVlci5ob3N0JyxcbiAgICBORVRfUEVFUl9QT1JUOiAnbmV0LnBlZXIucG9ydCcsXG4gICAgTkVUX1BFRVJfTkFNRTogJ25ldC5wZWVyLm5hbWUnLFxuICAgIE5FVF9QRUVSX0lQVjQ6ICduZXQucGVlci5pcHY0JyxcbiAgICBORVRfUEVFUl9JUFY2OiAnbmV0LnBlZXIuaXB2NicsXG4gICAgTkVUX1BFRVJfU0VSVklDRTogJ25ldC5wZWVyLnNlcnZpY2UnLFxuICAgIE5FVF9IT1NUX0lQOiAnbmV0Lmhvc3QuaXAnLFxuICAgIE5FVF9IT1NUX1BPUlQ6ICduZXQuaG9zdC5wb3J0JyxcbiAgICBORVRfSE9TVF9OQU1FOiAnbmV0Lmhvc3QubmFtZScsXG4gICAgTkVUX1RSQU5TUE9SVDogJ25ldC50cmFuc3BvcnQnLFxuICAgIC8vIFRoZXNlIGFyZSB1c2VkIGFzIHBvdGVudGlhbCB2YWx1ZXMgdG8gTkVUX1RSQU5TUE9SVFxuICAgIElQX1RDUDogJ0lQLlRDUCcsXG4gICAgSVBfVURQOiAnSVAuVURQJyxcbiAgICBJTlBST0M6ICdpbnByb2MnLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlbmVyYWwuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/general.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/http.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/http.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpAttribute = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.HttpAttribute = {\n    HTTP_HOST: 'http.host',\n    HTTP_METHOD: 'http.method',\n    HTTP_TARGET: 'http.target',\n    HTTP_ROUTE: 'http.route',\n    HTTP_URL: 'http.url',\n    HTTP_STATUS_CODE: 'http.status_code',\n    HTTP_STATUS_TEXT: 'http.status_text',\n    HTTP_FLAVOR: 'http.flavor',\n    HTTP_SERVER_NAME: 'http.server_name',\n    HTTP_CLIENT_IP: 'http.client_ip',\n    HTTP_SCHEME: 'http.scheme',\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    // NOT ON OFFICIAL SPEC\n    HTTP_ERROR_NAME: 'http.error_name',\n    HTTP_ERROR_MESSAGE: 'http.error_message',\n    HTTP_USER_AGENT: 'http.user_agent',\n};\n//# sourceMappingURL=http.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2h0dHAuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2h0dHAuanM/MWM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSHR0cEF0dHJpYnV0ZSA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnRzLkh0dHBBdHRyaWJ1dGUgPSB7XG4gICAgSFRUUF9IT1NUOiAnaHR0cC5ob3N0JyxcbiAgICBIVFRQX01FVEhPRDogJ2h0dHAubWV0aG9kJyxcbiAgICBIVFRQX1RBUkdFVDogJ2h0dHAudGFyZ2V0JyxcbiAgICBIVFRQX1JPVVRFOiAnaHR0cC5yb3V0ZScsXG4gICAgSFRUUF9VUkw6ICdodHRwLnVybCcsXG4gICAgSFRUUF9TVEFUVVNfQ09ERTogJ2h0dHAuc3RhdHVzX2NvZGUnLFxuICAgIEhUVFBfU1RBVFVTX1RFWFQ6ICdodHRwLnN0YXR1c190ZXh0JyxcbiAgICBIVFRQX0ZMQVZPUjogJ2h0dHAuZmxhdm9yJyxcbiAgICBIVFRQX1NFUlZFUl9OQU1FOiAnaHR0cC5zZXJ2ZXJfbmFtZScsXG4gICAgSFRUUF9DTElFTlRfSVA6ICdodHRwLmNsaWVudF9pcCcsXG4gICAgSFRUUF9TQ0hFTUU6ICdodHRwLnNjaGVtZScsXG4gICAgSFRUUF9SRVNQT05TRV9DT05URU5UX0xFTkdUSDogJ2h0dHAucmVzcG9uc2VfY29udGVudF9sZW5ndGgnLFxuICAgIEhUVFBfUkVTUE9OU0VfQ09OVEVOVF9MRU5HVEhfVU5DT01QUkVTU0VEOiAnaHR0cC5yZXNwb25zZV9jb250ZW50X2xlbmd0aF91bmNvbXByZXNzZWQnLFxuICAgIEhUVFBfUkVRVUVTVF9DT05URU5UX0xFTkdUSDogJ2h0dHAucmVxdWVzdF9jb250ZW50X2xlbmd0aCcsXG4gICAgSFRUUF9SRVFVRVNUX0NPTlRFTlRfTEVOR1RIX1VOQ09NUFJFU1NFRDogJ2h0dHAucmVxdWVzdF9jb250ZW50X2xlbmd0aF91bmNvbXByZXNzZWQnLFxuICAgIC8vIE5PVCBPTiBPRkZJQ0lBTCBTUEVDXG4gICAgSFRUUF9FUlJPUl9OQU1FOiAnaHR0cC5lcnJvcl9uYW1lJyxcbiAgICBIVFRQX0VSUk9SX01FU1NBR0U6ICdodHRwLmVycm9yX21lc3NhZ2UnLFxuICAgIEhUVFBfVVNFUl9BR0VOVDogJ2h0dHAudXNlcl9hZ2VudCcsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/http.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./database */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/database.js\"), exports);\n__exportStar(__webpack_require__(/*! ./exception */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/exception.js\"), exports);\n__exportStar(__webpack_require__(/*! ./general */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/general.js\"), exports);\n__exportStar(__webpack_require__(/*! ./http */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/http.js\"), exports);\n__exportStar(__webpack_require__(/*! ./os */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/os.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rpc */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/rpc.js\"), exports);\n__exportStar(__webpack_require__(/*! ./faas */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/faas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messaging */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/messaging.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy90cmFjZS9pbmRleC5qcz9iYWQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kYXRhYmFzZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhjZXB0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nZW5lcmFsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9odHRwXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcnBjXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mYWFzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdpbmdcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/messaging.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/messaging.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessagingOperationName = exports.MessagingAttribute = void 0;\n/**\n * messaging attribute names defined by the Opetelemetry Semantic Conventions specification\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/messaging.md\n */\nexports.MessagingAttribute = {\n    /**\n     * A string identifying the messaging system.\n     * example: kafka, rabbitmq, sqs, sns\n     *\n     * @remarks\n     * Required.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     * example: MyQueue, MyTopic\n     *\n     * @remarks\n     * Required.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination\n     * allowed values: queue, topic,\n     *\n     * @remarks\n     * Required only if the message destination is either a queue or topic.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary\n     *\n     * @remarks\n     * Conditional If missing, it is assumed to be false.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The kind of message destination\n     * allowed values: queue, topic,\n     *\n     * @remarks\n     * Required only if the message destination is either a queue or topic.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     * example: https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The conversation ID identifying the conversation to which the message belongs, represented as a string. Sometimes called \"Correlation ID\".\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     * Should be number.\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     * Should be number.\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * For message consumers only.\n     * allowed values: receive, process,\n     *\n     * @remarks\n     * Optional.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    // System specific attributes\n    MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n};\nexports.MessagingOperationName = {\n    /**\n     *  A message is sent to a destination by a message producer/client.\n     */\n    SEND: 'send',\n    /**\n     *  A message is received from a destination by a message consumer/server.\n     */\n    RECEIVE: 'receive',\n    /**\n     *  A message that was previously received from a destination is processed by a message consumer/server.\n     */\n    PROCESS: 'process',\n};\n//# sourceMappingURL=messaging.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL21lc3NhZ2luZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9ucy9idWlsZC9zcmMvdHJhY2UvbWVzc2FnaW5nLmpzPzBkZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXNzYWdpbmdPcGVyYXRpb25OYW1lID0gZXhwb3J0cy5NZXNzYWdpbmdBdHRyaWJ1dGUgPSB2b2lkIDA7XG4vKipcbiAqIG1lc3NhZ2luZyBhdHRyaWJ1dGUgbmFtZXMgZGVmaW5lZCBieSB0aGUgT3BldGVsZW1ldHJ5IFNlbWFudGljIENvbnZlbnRpb25zIHNwZWNpZmljYXRpb25cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LXNwZWNpZmljYXRpb24vYmxvYi9tYXN0ZXIvc3BlY2lmaWNhdGlvbi90cmFjZS9zZW1hbnRpY19jb252ZW50aW9ucy9tZXNzYWdpbmcubWRcbiAqL1xuZXhwb3J0cy5NZXNzYWdpbmdBdHRyaWJ1dGUgPSB7XG4gICAgLyoqXG4gICAgICogQSBzdHJpbmcgaWRlbnRpZnlpbmcgdGhlIG1lc3NhZ2luZyBzeXN0ZW0uXG4gICAgICogZXhhbXBsZToga2Fma2EsIHJhYmJpdG1xLCBzcXMsIHNuc1xuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZC5cbiAgICAgKi9cbiAgICBNRVNTQUdJTkdfU1lTVEVNOiAnbWVzc2FnaW5nLnN5c3RlbScsXG4gICAgLyoqXG4gICAgICogVGhlIG1lc3NhZ2UgZGVzdGluYXRpb24gbmFtZS4gVGhpcyBtaWdodCBiZSBlcXVhbCB0byB0aGUgc3BhbiBuYW1lIGJ1dCBpcyByZXF1aXJlZCBuZXZlcnRoZWxlc3MuXG4gICAgICogZXhhbXBsZTogTXlRdWV1ZSwgTXlUb3BpY1xuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZC5cbiAgICAgKi9cbiAgICBNRVNTQUdJTkdfREVTVElOQVRJT046ICdtZXNzYWdpbmcuZGVzdGluYXRpb24nLFxuICAgIC8qKlxuICAgICAqIFRoZSBraW5kIG9mIG1lc3NhZ2UgZGVzdGluYXRpb25cbiAgICAgKiBhbGxvd2VkIHZhbHVlczogcXVldWUsIHRvcGljLFxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBSZXF1aXJlZCBvbmx5IGlmIHRoZSBtZXNzYWdlIGRlc3RpbmF0aW9uIGlzIGVpdGhlciBhIHF1ZXVlIG9yIHRvcGljLlxuICAgICAqL1xuICAgIE1FU1NBR0lOR19ERVNUSU5BVElPTl9LSU5EOiAnbWVzc2FnaW5nLmRlc3RpbmF0aW9uX2tpbmQnLFxuICAgIC8qKlxuICAgICAqIEEgYm9vbGVhbiB0aGF0IGlzIHRydWUgaWYgdGhlIG1lc3NhZ2UgZGVzdGluYXRpb24gaXMgdGVtcG9yYXJ5XG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIENvbmRpdGlvbmFsIElmIG1pc3NpbmcsIGl0IGlzIGFzc3VtZWQgdG8gYmUgZmFsc2UuXG4gICAgICovXG4gICAgTUVTU0FHSU5HX1RFTVBfREVTVElOQVRJT046ICdtZXNzYWdpbmcudGVtcF9kZXN0aW5hdGlvbicsXG4gICAgLyoqXG4gICAgICogVGhlIGtpbmQgb2YgbWVzc2FnZSBkZXN0aW5hdGlvblxuICAgICAqIGFsbG93ZWQgdmFsdWVzOiBxdWV1ZSwgdG9waWMsXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIFJlcXVpcmVkIG9ubHkgaWYgdGhlIG1lc3NhZ2UgZGVzdGluYXRpb24gaXMgZWl0aGVyIGEgcXVldWUgb3IgdG9waWMuXG4gICAgICovXG4gICAgTUVTU0FHSU5HX1BST1RPQ09MOiAnbWVzc2FnaW5nLnByb3RvY29sJyxcbiAgICAvKipcbiAgICAgKiBUaGUgdmVyc2lvbiBvZiB0aGUgdHJhbnNwb3J0IHByb3RvY29sLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBNRVNTQUdJTkdfUFJPVE9DT0xfVkVSU0lPTjogJ21lc3NhZ2luZy5wcm90b2NvbF92ZXJzaW9uJyxcbiAgICAvKipcbiAgICAgKiBDb25uZWN0aW9uIHN0cmluZy5cbiAgICAgKiBleGFtcGxlOiBodHRwczovL3F1ZXVlLmFtYXpvbmF3cy5jb20vODAzOThFWEFNUExFL015UXVldWVcbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgTUVTU0FHSU5HX1VSTDogJ21lc3NhZ2luZy51cmwnLFxuICAgIC8qKlxuICAgICAqIEEgdmFsdWUgdXNlZCBieSB0aGUgbWVzc2FnaW5nIHN5c3RlbSBhcyBhbiBpZGVudGlmaWVyIGZvciB0aGUgbWVzc2FnZSwgcmVwcmVzZW50ZWQgYXMgYSBzdHJpbmcuXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIE9wdGlvbmFsLlxuICAgICAqL1xuICAgIE1FU1NBR0lOR19NRVNTQUdFX0lEOiAnbWVzc2FnaW5nLm1lc3NhZ2VfaWQnLFxuICAgIC8qKlxuICAgICAqIFRoZSBjb252ZXJzYXRpb24gSUQgaWRlbnRpZnlpbmcgdGhlIGNvbnZlcnNhdGlvbiB0byB3aGljaCB0aGUgbWVzc2FnZSBiZWxvbmdzLCByZXByZXNlbnRlZCBhcyBhIHN0cmluZy4gU29tZXRpbWVzIGNhbGxlZCBcIkNvcnJlbGF0aW9uIElEXCIuXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIE9wdGlvbmFsLlxuICAgICAqL1xuICAgIE1FU1NBR0lOR19DT05WRVJTQVRJT05fSUQ6ICdtZXNzYWdpbmcuY29udmVyc2F0aW9uX2lkJyxcbiAgICAvKipcbiAgICAgKiBUaGUgKHVuY29tcHJlc3NlZCkgc2l6ZSBvZiB0aGUgbWVzc2FnZSBwYXlsb2FkIGluIGJ5dGVzLiBBbHNvIHVzZSB0aGlzIGF0dHJpYnV0ZSBpZiBpdCBpcyB1bmtub3duIHdoZXRoZXIgdGhlIGNvbXByZXNzZWQgb3IgdW5jb21wcmVzc2VkIHBheWxvYWQgc2l6ZSBpcyByZXBvcnRlZC5cbiAgICAgKiBTaG91bGQgYmUgbnVtYmVyLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBNRVNTQUdJTkdfTUVTU0FHRV9QQVlMT0FEX1NJWkVfQllURVM6ICdtZXNzYWdpbmcubWVzc2FnZV9wYXlsb2FkX3NpemVfYnl0ZXMnLFxuICAgIC8qKlxuICAgICAqIFRoZSBjb21wcmVzc2VkIHNpemUgb2YgdGhlIG1lc3NhZ2UgcGF5bG9hZCBpbiBieXRlcy5cbiAgICAgKiBTaG91bGQgYmUgbnVtYmVyLlxuICAgICAqXG4gICAgICogQHJlbWFya3NcbiAgICAgKiBPcHRpb25hbC5cbiAgICAgKi9cbiAgICBNRVNTQUdJTkdfTUVTU0FHRV9QQVlMT0FEX0NPTVBSRVNTRURfU0laRV9CWVRFUzogJ21lc3NhZ2luZy5tZXNzYWdlX3BheWxvYWRfY29tcHJlc3NlZF9zaXplX2J5dGVzJyxcbiAgICAvKipcbiAgICAgKiBGb3IgbWVzc2FnZSBjb25zdW1lcnMgb25seS5cbiAgICAgKiBhbGxvd2VkIHZhbHVlczogcmVjZWl2ZSwgcHJvY2VzcyxcbiAgICAgKlxuICAgICAqIEByZW1hcmtzXG4gICAgICogT3B0aW9uYWwuXG4gICAgICovXG4gICAgTUVTU0FHSU5HX09QRVJBVElPTjogJ21lc3NhZ2luZy5vcGVyYXRpb24nLFxuICAgIC8vIFN5c3RlbSBzcGVjaWZpYyBhdHRyaWJ1dGVzXG4gICAgTUVTU0FHSU5HX1JBQkJJVE1RX1JPVVRJTkdfS0VZOiAnbWVzc2FnaW5nLnJhYmJpdG1xLnJvdXRpbmdfa2V5JyxcbiAgICBNRVNTQUdJTkdfS0FGS0FfTUVTU0FHRV9LRVk6ICdtZXNzYWdpbmcua2Fma2EubWVzc2FnZV9rZXknLFxuICAgIE1FU1NBR0lOR19LQUZLQV9DT05TVU1FUl9HUk9VUDogJ21lc3NhZ2luZy5rYWZrYS5jb25zdW1lcl9ncm91cCcsXG4gICAgTUVTU0FHSU5HX0tBRktBX0NMSUVOVF9JRDogJ21lc3NhZ2luZy5rYWZrYS5jbGllbnRfaWQnLFxuICAgIE1FU1NBR0lOR19LQUZLQV9QQVJUSVRJT046ICdtZXNzYWdpbmcua2Fma2EucGFydGl0aW9uJyxcbiAgICBNRVNTQUdJTkdfS0FGS0FfVE9NQlNUT05FOiAnbWVzc2FnaW5nLmthZmthLnRvbWJzdG9uZScsXG59O1xuZXhwb3J0cy5NZXNzYWdpbmdPcGVyYXRpb25OYW1lID0ge1xuICAgIC8qKlxuICAgICAqICBBIG1lc3NhZ2UgaXMgc2VudCB0byBhIGRlc3RpbmF0aW9uIGJ5IGEgbWVzc2FnZSBwcm9kdWNlci9jbGllbnQuXG4gICAgICovXG4gICAgU0VORDogJ3NlbmQnLFxuICAgIC8qKlxuICAgICAqICBBIG1lc3NhZ2UgaXMgcmVjZWl2ZWQgZnJvbSBhIGRlc3RpbmF0aW9uIGJ5IGEgbWVzc2FnZSBjb25zdW1lci9zZXJ2ZXIuXG4gICAgICovXG4gICAgUkVDRUlWRTogJ3JlY2VpdmUnLFxuICAgIC8qKlxuICAgICAqICBBIG1lc3NhZ2UgdGhhdCB3YXMgcHJldmlvdXNseSByZWNlaXZlZCBmcm9tIGEgZGVzdGluYXRpb24gaXMgcHJvY2Vzc2VkIGJ5IGEgbWVzc2FnZSBjb25zdW1lci9zZXJ2ZXIuXG4gICAgICovXG4gICAgUFJPQ0VTUzogJ3Byb2Nlc3MnLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2luZy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/messaging.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/os.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/os.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperatingSystemValues = exports.OperatingSystem = void 0;\n/**\n * The operating system (OS) on which the process represented by this resource is running.\n *\n * In case of virtualized environments, this is the operating system as it\n * is observed by the process, i.e., the virtualized guest rather than the\n * underlying host.\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/resource/semantic_conventions/os.md\n */\nexports.OperatingSystem = {\n    /**\n     * The operating system type.\n     * This should be set to one of {@link OperatingSystemValues}\n     * E.g., \"WINDOWS\"\n     *\n     * @remarks\n     * Required.\n     */\n    TYPE: 'os.type',\n    /**\n     * Human readable (not intended to be parsed) OS version information.\n     * E.g., \"Microsoft Windows [Version 10.0.18363.778]\"\n     *\n     * @remarks\n     * Required if applicable.\n     */\n    DESCRIPTION: 'os.description',\n};\n/**\n * {@link OperatingSystem.TYPE} SHOULD be set to one of the values\n * listed below.\n * If none of the listed values apply, a custom value best describing\n * the family the operating system belongs to CAN be used.\n */\nexports.OperatingSystemValues = {\n    WINDOWS: 'WINDOWS',\n    LINUX: 'LINUX',\n    DARWIN: 'DARWIN',\n    FREEBSD: 'FREEBSD',\n    NETBSD: 'NETBSD',\n    OPENBSD: 'OPENBSD',\n    DRAGONFLYBSD: 'DRAGONFLYBSD',\n    HPUX: 'HPUX',\n    AIX: 'AIX',\n    SOLARIS: 'SOLARIS',\n    ZOS: 'ZOS',\n};\n//# sourceMappingURL=os.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL29zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy90cmFjZS9vcy5qcz80ZjdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3BlcmF0aW5nU3lzdGVtVmFsdWVzID0gZXhwb3J0cy5PcGVyYXRpbmdTeXN0ZW0gPSB2b2lkIDA7XG4vKipcbiAqIFRoZSBvcGVyYXRpbmcgc3lzdGVtIChPUykgb24gd2hpY2ggdGhlIHByb2Nlc3MgcmVwcmVzZW50ZWQgYnkgdGhpcyByZXNvdXJjZSBpcyBydW5uaW5nLlxuICpcbiAqIEluIGNhc2Ugb2YgdmlydHVhbGl6ZWQgZW52aXJvbm1lbnRzLCB0aGlzIGlzIHRoZSBvcGVyYXRpbmcgc3lzdGVtIGFzIGl0XG4gKiBpcyBvYnNlcnZlZCBieSB0aGUgcHJvY2VzcywgaS5lLiwgdGhlIHZpcnR1YWxpemVkIGd1ZXN0IHJhdGhlciB0aGFuIHRoZVxuICogdW5kZXJseWluZyBob3N0LlxuICogaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktc3BlY2lmaWNhdGlvbi9ibG9iL21hc3Rlci9zcGVjaWZpY2F0aW9uL3Jlc291cmNlL3NlbWFudGljX2NvbnZlbnRpb25zL29zLm1kXG4gKi9cbmV4cG9ydHMuT3BlcmF0aW5nU3lzdGVtID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSBvcGVyYXRpbmcgc3lzdGVtIHR5cGUuXG4gICAgICogVGhpcyBzaG91bGQgYmUgc2V0IHRvIG9uZSBvZiB7QGxpbmsgT3BlcmF0aW5nU3lzdGVtVmFsdWVzfVxuICAgICAqIEUuZy4sIFwiV0lORE9XU1wiXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIFJlcXVpcmVkLlxuICAgICAqL1xuICAgIFRZUEU6ICdvcy50eXBlJyxcbiAgICAvKipcbiAgICAgKiBIdW1hbiByZWFkYWJsZSAobm90IGludGVuZGVkIHRvIGJlIHBhcnNlZCkgT1MgdmVyc2lvbiBpbmZvcm1hdGlvbi5cbiAgICAgKiBFLmcuLCBcIk1pY3Jvc29mdCBXaW5kb3dzIFtWZXJzaW9uIDEwLjAuMTgzNjMuNzc4XVwiXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIFJlcXVpcmVkIGlmIGFwcGxpY2FibGUuXG4gICAgICovXG4gICAgREVTQ1JJUFRJT046ICdvcy5kZXNjcmlwdGlvbicsXG59O1xuLyoqXG4gKiB7QGxpbmsgT3BlcmF0aW5nU3lzdGVtLlRZUEV9IFNIT1VMRCBiZSBzZXQgdG8gb25lIG9mIHRoZSB2YWx1ZXNcbiAqIGxpc3RlZCBiZWxvdy5cbiAqIElmIG5vbmUgb2YgdGhlIGxpc3RlZCB2YWx1ZXMgYXBwbHksIGEgY3VzdG9tIHZhbHVlIGJlc3QgZGVzY3JpYmluZ1xuICogdGhlIGZhbWlseSB0aGUgb3BlcmF0aW5nIHN5c3RlbSBiZWxvbmdzIHRvIENBTiBiZSB1c2VkLlxuICovXG5leHBvcnRzLk9wZXJhdGluZ1N5c3RlbVZhbHVlcyA9IHtcbiAgICBXSU5ET1dTOiAnV0lORE9XUycsXG4gICAgTElOVVg6ICdMSU5VWCcsXG4gICAgREFSV0lOOiAnREFSV0lOJyxcbiAgICBGUkVFQlNEOiAnRlJFRUJTRCcsXG4gICAgTkVUQlNEOiAnTkVUQlNEJyxcbiAgICBPUEVOQlNEOiAnT1BFTkJTRCcsXG4gICAgRFJBR09ORkxZQlNEOiAnRFJBR09ORkxZQlNEJyxcbiAgICBIUFVYOiAnSFBVWCcsXG4gICAgQUlYOiAnQUlYJyxcbiAgICBTT0xBUklTOiAnU09MQVJJUycsXG4gICAgWk9TOiAnWk9TJyxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/os.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/rpc.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/rpc.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcAttribute = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.RpcAttribute = {\n    RPC_SERVICE: 'rpc.service',\n    // GRPC (no spec)\n    GRPC_KIND: 'grpc.kind',\n    GRPC_METHOD: 'grpc.method',\n    GRPC_STATUS_CODE: 'grpc.status_code',\n    GRPC_ERROR_NAME: 'grpc.error_name',\n    GRPC_ERROR_MESSAGE: 'grpc.error_message',\n};\n//# sourceMappingURL=rpc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL3JwYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9ucy9idWlsZC9zcmMvdHJhY2UvcnBjLmpzP2I4MTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJwY0F0dHJpYnV0ZSA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnRzLlJwY0F0dHJpYnV0ZSA9IHtcbiAgICBSUENfU0VSVklDRTogJ3JwYy5zZXJ2aWNlJyxcbiAgICAvLyBHUlBDIChubyBzcGVjKVxuICAgIEdSUENfS0lORDogJ2dycGMua2luZCcsXG4gICAgR1JQQ19NRVRIT0Q6ICdncnBjLm1ldGhvZCcsXG4gICAgR1JQQ19TVEFUVVNfQ09ERTogJ2dycGMuc3RhdHVzX2NvZGUnLFxuICAgIEdSUENfRVJST1JfTkFNRTogJ2dycGMuZXJyb3JfbmFtZScsXG4gICAgR1JQQ19FUlJPUl9NRVNTQUdFOiAnZ3JwYy5lcnJvcl9tZXNzYWdlJyxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ycGMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/rpc.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicTracerProvider = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/tracing/build/src/config.js\");\nconst MultiSpanProcessor_1 = __webpack_require__(/*! ./MultiSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js\");\nconst NoopSpanProcessor_1 = __webpack_require__(/*! ./NoopSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nclass BasicTracerProvider {\n    constructor(config = {}) {\n        var _a, _b;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        this.activeSpanProcessor = new NoopSpanProcessor_1.NoopSpanProcessor();\n        const mergedConfig = merge({}, config_1.DEFAULT_CONFIG, config);\n        this.logger = (_a = mergedConfig.logger) !== null && _a !== void 0 ? _a : new core_1.ConsoleLogger(mergedConfig.logLevel);\n        this.resource = (_b = mergedConfig.resource) !== null && _b !== void 0 ? _b : resources_1.Resource.createTelemetrySDKResource();\n        this._config = Object.assign({}, mergedConfig, {\n            logger: this.logger,\n            resource: this.resource,\n        });\n    }\n    getTracer(name, version, config) {\n        const key = `${name}@${version || ''}`;\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new _1.Tracer({ name, version }, config || this._config, this));\n        }\n        return this._tracers.get(key);\n    }\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    addSpanProcessor(spanProcessor) {\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor_1.MultiSpanProcessor(this._registeredSpanProcessors);\n    }\n    getActiveSpanProcessor() {\n        return this.activeSpanProcessor;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        api.trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = new core_1.CompositePropagator({\n                propagators: [new core_1.HttpBaggage(), new core_1.HttpTraceContext()],\n            });\n        }\n        if (config.contextManager) {\n            api.context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            api.propagation.setGlobalPropagator(config.propagator);\n        }\n    }\n    shutdown() {\n        return this.activeSpanProcessor.shutdown();\n    }\n}\nexports.BasicTracerProvider = BasicTracerProvider;\n//# sourceMappingURL=BasicTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvQmFzaWNUcmFjZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9CYXNpY1RyYWNlclByb3ZpZGVyLmpzPzg5NWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNpY1RyYWNlclByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuY29uc3QgcmVzb3VyY2VzXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzXCIpO1xuY29uc3QgXzEgPSByZXF1aXJlKFwiLlwiKTtcbmNvbnN0IGNvbmZpZ18xID0gcmVxdWlyZShcIi4vY29uZmlnXCIpO1xuY29uc3QgTXVsdGlTcGFuUHJvY2Vzc29yXzEgPSByZXF1aXJlKFwiLi9NdWx0aVNwYW5Qcm9jZXNzb3JcIik7XG5jb25zdCBOb29wU3BhblByb2Nlc3Nvcl8xID0gcmVxdWlyZShcIi4vTm9vcFNwYW5Qcm9jZXNzb3JcIik7XG5jb25zdCBtZXJnZSA9IHJlcXVpcmUoXCJsb2Rhc2gubWVyZ2VcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhIGJhc2ljIHRyYWNlciBwcm92aWRlciB3aGljaCBwbGF0Zm9ybSBsaWJyYXJpZXMgY2FuIGV4dGVuZFxuICovXG5jbGFzcyBCYXNpY1RyYWNlclByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB0aGlzLl9yZWdpc3RlcmVkU3BhblByb2Nlc3NvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5fdHJhY2VycyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5hY3RpdmVTcGFuUHJvY2Vzc29yID0gbmV3IE5vb3BTcGFuUHJvY2Vzc29yXzEuTm9vcFNwYW5Qcm9jZXNzb3IoKTtcbiAgICAgICAgY29uc3QgbWVyZ2VkQ29uZmlnID0gbWVyZ2Uoe30sIGNvbmZpZ18xLkRFRkFVTFRfQ09ORklHLCBjb25maWcpO1xuICAgICAgICB0aGlzLmxvZ2dlciA9IChfYSA9IG1lcmdlZENvbmZpZy5sb2dnZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBjb3JlXzEuQ29uc29sZUxvZ2dlcihtZXJnZWRDb25maWcubG9nTGV2ZWwpO1xuICAgICAgICB0aGlzLnJlc291cmNlID0gKF9iID0gbWVyZ2VkQ29uZmlnLnJlc291cmNlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiByZXNvdXJjZXNfMS5SZXNvdXJjZS5jcmVhdGVUZWxlbWV0cnlTREtSZXNvdXJjZSgpO1xuICAgICAgICB0aGlzLl9jb25maWcgPSBPYmplY3QuYXNzaWduKHt9LCBtZXJnZWRDb25maWcsIHtcbiAgICAgICAgICAgIGxvZ2dlcjogdGhpcy5sb2dnZXIsXG4gICAgICAgICAgICByZXNvdXJjZTogdGhpcy5yZXNvdXJjZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldFRyYWNlcihuYW1lLCB2ZXJzaW9uLCBjb25maWcpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gYCR7bmFtZX1AJHt2ZXJzaW9uIHx8ICcnfWA7XG4gICAgICAgIGlmICghdGhpcy5fdHJhY2Vycy5oYXMoa2V5KSkge1xuICAgICAgICAgICAgdGhpcy5fdHJhY2Vycy5zZXQoa2V5LCBuZXcgXzEuVHJhY2VyKHsgbmFtZSwgdmVyc2lvbiB9LCBjb25maWcgfHwgdGhpcy5fY29uZmlnLCB0aGlzKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYWNlcnMuZ2V0KGtleSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgYSBuZXcge0BsaW5rIFNwYW5Qcm9jZXNzb3J9IHRvIHRoaXMgdHJhY2VyLlxuICAgICAqIEBwYXJhbSBzcGFuUHJvY2Vzc29yIHRoZSBuZXcgU3BhblByb2Nlc3NvciB0byBiZSBhZGRlZC5cbiAgICAgKi9cbiAgICBhZGRTcGFuUHJvY2Vzc29yKHNwYW5Qcm9jZXNzb3IpIHtcbiAgICAgICAgdGhpcy5fcmVnaXN0ZXJlZFNwYW5Qcm9jZXNzb3JzLnB1c2goc3BhblByb2Nlc3Nvcik7XG4gICAgICAgIHRoaXMuYWN0aXZlU3BhblByb2Nlc3NvciA9IG5ldyBNdWx0aVNwYW5Qcm9jZXNzb3JfMS5NdWx0aVNwYW5Qcm9jZXNzb3IodGhpcy5fcmVnaXN0ZXJlZFNwYW5Qcm9jZXNzb3JzKTtcbiAgICB9XG4gICAgZ2V0QWN0aXZlU3BhblByb2Nlc3NvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlU3BhblByb2Nlc3NvcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXIgdGhpcyBUcmFjZXJQcm92aWRlciBmb3IgdXNlIHdpdGggdGhlIE9wZW5UZWxlbWV0cnkgQVBJLlxuICAgICAqIFVuZGVmaW5lZCB2YWx1ZXMgbWF5IGJlIHJlcGxhY2VkIHdpdGggZGVmYXVsdHMsIGFuZFxuICAgICAqIG51bGwgdmFsdWVzIHdpbGwgYmUgc2tpcHBlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb25maWcgQ29uZmlndXJhdGlvbiBvYmplY3QgZm9yIFNESyByZWdpc3RyYXRpb25cbiAgICAgKi9cbiAgICByZWdpc3Rlcihjb25maWcgPSB7fSkge1xuICAgICAgICBhcGkudHJhY2Uuc2V0R2xvYmFsVHJhY2VyUHJvdmlkZXIodGhpcyk7XG4gICAgICAgIGlmIChjb25maWcucHJvcGFnYXRvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25maWcucHJvcGFnYXRvciA9IG5ldyBjb3JlXzEuQ29tcG9zaXRlUHJvcGFnYXRvcih7XG4gICAgICAgICAgICAgICAgcHJvcGFnYXRvcnM6IFtuZXcgY29yZV8xLkh0dHBCYWdnYWdlKCksIG5ldyBjb3JlXzEuSHR0cFRyYWNlQ29udGV4dCgpXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuY29udGV4dE1hbmFnZXIpIHtcbiAgICAgICAgICAgIGFwaS5jb250ZXh0LnNldEdsb2JhbENvbnRleHRNYW5hZ2VyKGNvbmZpZy5jb250ZXh0TWFuYWdlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5wcm9wYWdhdG9yKSB7XG4gICAgICAgICAgICBhcGkucHJvcGFnYXRpb24uc2V0R2xvYmFsUHJvcGFnYXRvcihjb25maWcucHJvcGFnYXRvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZVNwYW5Qcm9jZXNzb3Iuc2h1dGRvd24oKTtcbiAgICB9XG59XG5leHBvcnRzLkJhc2ljVHJhY2VyUHJvdmlkZXIgPSBCYXNpY1RyYWNlclByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzaWNUcmFjZXJQcm92aWRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiSpanProcessor = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nclass MultiSpanProcessor {\n    constructor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    forceFlush() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(resolve => {\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(error => {\n                core_1.globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    }\n    onStart(span, context) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onStart(span, context);\n        }\n    }\n    onEnd(span) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onEnd(span);\n        }\n    }\n    shutdown() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise((resolve, reject) => {\n            Promise.all(promises).then(() => {\n                resolve();\n            }, reject);\n        });\n    }\n}\nexports.MultiSpanProcessor = MultiSpanProcessor;\n//# sourceMappingURL=MultiSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvTXVsdGlTcGFuUHJvY2Vzc29yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL011bHRpU3BhblByb2Nlc3Nvci5qcz8yZmEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlTcGFuUHJvY2Vzc29yID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIEltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgU3BhblByb2Nlc3Nvcn0gdGhhdCBzaW1wbHkgZm9yd2FyZHMgYWxsXG4gKiByZWNlaXZlZCBldmVudHMgdG8gYSBsaXN0IG9mIHtAbGluayBTcGFuUHJvY2Vzc29yfXMuXG4gKi9cbmNsYXNzIE11bHRpU3BhblByb2Nlc3NvciB7XG4gICAgY29uc3RydWN0b3IoX3NwYW5Qcm9jZXNzb3JzKSB7XG4gICAgICAgIHRoaXMuX3NwYW5Qcm9jZXNzb3JzID0gX3NwYW5Qcm9jZXNzb3JzO1xuICAgIH1cbiAgICBmb3JjZUZsdXNoKCkge1xuICAgICAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHNwYW5Qcm9jZXNzb3Igb2YgdGhpcy5fc3BhblByb2Nlc3NvcnMpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2goc3BhblByb2Nlc3Nvci5mb3JjZUZsdXNoKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIFByb21pc2UuYWxsKHByb21pc2VzKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgY29yZV8xLmdsb2JhbEVycm9ySGFuZGxlcihlcnJvciB8fCBuZXcgRXJyb3IoJ011bHRpU3BhblByb2Nlc3NvcjogZm9yY2VGbHVzaCBmYWlsZWQnKSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvblN0YXJ0KHNwYW4sIGNvbnRleHQpIHtcbiAgICAgICAgZm9yIChjb25zdCBzcGFuUHJvY2Vzc29yIG9mIHRoaXMuX3NwYW5Qcm9jZXNzb3JzKSB7XG4gICAgICAgICAgICBzcGFuUHJvY2Vzc29yLm9uU3RhcnQoc3BhbiwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25FbmQoc3Bhbikge1xuICAgICAgICBmb3IgKGNvbnN0IHNwYW5Qcm9jZXNzb3Igb2YgdGhpcy5fc3BhblByb2Nlc3NvcnMpIHtcbiAgICAgICAgICAgIHNwYW5Qcm9jZXNzb3Iub25FbmQoc3Bhbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgICAgIGZvciAoY29uc3Qgc3BhblByb2Nlc3NvciBvZiB0aGlzLl9zcGFuUHJvY2Vzc29ycykge1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaChzcGFuUHJvY2Vzc29yLnNodXRkb3duKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5NdWx0aVNwYW5Qcm9jZXNzb3IgPSBNdWx0aVNwYW5Qcm9jZXNzb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NdWx0aVNwYW5Qcm9jZXNzb3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopSpanProcessor = void 0;\n/** No-op implementation of SpanProcessor */\nclass NoopSpanProcessor {\n    onStart(_span, _context) { }\n    onEnd(_span) { }\n    shutdown() {\n        return Promise.resolve();\n    }\n    forceFlush() {\n        return Promise.resolve();\n    }\n}\nexports.NoopSpanProcessor = NoopSpanProcessor;\n//# sourceMappingURL=NoopSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvTm9vcFNwYW5Qcm9jZXNzb3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvTm9vcFNwYW5Qcm9jZXNzb3IuanM/Y2E3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vb3BTcGFuUHJvY2Vzc29yID0gdm9pZCAwO1xuLyoqIE5vLW9wIGltcGxlbWVudGF0aW9uIG9mIFNwYW5Qcm9jZXNzb3IgKi9cbmNsYXNzIE5vb3BTcGFuUHJvY2Vzc29yIHtcbiAgICBvblN0YXJ0KF9zcGFuLCBfY29udGV4dCkgeyB9XG4gICAgb25FbmQoX3NwYW4pIHsgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIGZvcmNlRmx1c2goKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG5leHBvcnRzLk5vb3BTcGFuUHJvY2Vzc29yID0gTm9vcFNwYW5Qcm9jZXNzb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wU3BhblByb2Nlc3Nvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/Span.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/Span.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Span = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\n/**\n * This class represents a span.\n */\nclass Span {\n    /** Constructs a new Span instance. */\n    constructor(parentTracer, context, spanName, spanContext, kind, parentSpanId, links = [], startTime = core_1.hrTime()) {\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.StatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this.spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = core_1.timeInputToHrTime(startTime);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._logger = parentTracer.logger;\n        this._traceParams = parentTracer.getActiveTraceParams();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n    }\n    context() {\n        return this.spanContext;\n    }\n    setAttribute(key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            this._logger.warn(`Invalid attribute key: ${key}`);\n            return this;\n        }\n        if (!core_1.isAttributeValue(value)) {\n            this._logger.warn(`Invalid attribute value set for key: ${key}`);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._traceParams.numberOfAttributesPerSpan &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = value;\n        return this;\n    }\n    setAttributes(attributes) {\n        for (const [k, v] of Object.entries(attributes)) {\n            this.setAttribute(k, v);\n        }\n        return this;\n    }\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    addEvent(name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this.events.length >= this._traceParams.numberOfEventsPerSpan) {\n            this._logger.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (core_1.isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = core_1.hrTime();\n        }\n        this.events.push({\n            name,\n            attributes: attributesOrStartTime,\n            time: core_1.timeInputToHrTime(startTime),\n        });\n        return this;\n    }\n    setStatus(status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    }\n    updateName(name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    }\n    end(endTime = core_1.hrTime()) {\n        if (this._isSpanEnded()) {\n            this._logger.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = core_1.timeInputToHrTime(endTime);\n        this._duration = core_1.hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            this._logger.warn('Inconsistent start and end time, startTime > endTime', this.startTime, this.endTime);\n        }\n        this._spanProcessor.onEnd(this);\n    }\n    isRecording() {\n        return this._ended === false;\n    }\n    recordException(exception, time = core_1.hrTime()) {\n        const attributes = {};\n        if (typeof exception === 'string') {\n            attributes[semantic_conventions_1.ExceptionAttribute.MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[semantic_conventions_1.ExceptionAttribute.TYPE] = exception.code;\n            }\n            else if (exception.name) {\n                attributes[semantic_conventions_1.ExceptionAttribute.TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[semantic_conventions_1.ExceptionAttribute.MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[semantic_conventions_1.ExceptionAttribute.STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[semantic_conventions_1.ExceptionAttribute.TYPE] ||\n            attributes[semantic_conventions_1.ExceptionAttribute.MESSAGE]) {\n            this.addEvent(semantic_conventions_1.ExceptionEventName, attributes, time);\n        }\n        else {\n            this._logger.warn(`Failed to record an exception ${exception}`);\n        }\n    }\n    get duration() {\n        return this._duration;\n    }\n    get ended() {\n        return this._ended;\n    }\n    _isSpanEnded() {\n        if (this._ended) {\n            this._logger.warn('Can not execute the operation on ended Span {traceId: %s, spanId: %s}', this.spanContext.traceId, this.spanContext.spanId);\n        }\n        return this._ended;\n    }\n}\nexports.Span = Span;\n//# sourceMappingURL=Span.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/Span.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvU3BhblByb2Nlc3Nvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9TcGFuUHJvY2Vzc29yLmpzP2YxMGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BhblByb2Nlc3Nvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/Tracer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/Tracer.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst Span_1 = __webpack_require__(/*! ./Span */ \"./node_modules/@opentelemetry/tracing/build/src/Span.js\");\nconst utility_1 = __webpack_require__(/*! ./utility */ \"./node_modules/@opentelemetry/tracing/build/src/utility.js\");\n/**\n * This class represents a basic tracer.\n */\nclass Tracer {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    constructor(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        const localConfig = utility_1.mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._traceParams = localConfig.traceParams;\n        this._idGenerator = config.idGenerator || new core_1.RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n        this.logger = config.logger || new core_1.ConsoleLogger(config.logLevel);\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    startSpan(name, options = {}, context = api.context.active()) {\n        var _a, _b;\n        if (api.isInstrumentationSuppressed(context)) {\n            this.logger.debug('Instrumentation suppressed, returning Noop Span');\n            return api.NOOP_SPAN;\n        }\n        const parentContext = getParent(options, context);\n        const spanId = this._idGenerator.generateSpanId();\n        let traceId;\n        let traceState;\n        if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentContext.traceId;\n            traceState = parentContext.traceState;\n        }\n        const spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        const links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n        const attributes = core_1.sanitizeAttributes(options.attributes);\n        // make sampling decision\n        const samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        const traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        const spanContext = { traceId, spanId, traceFlags, traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            this.logger.debug('Recording is off, starting no recording span');\n            return new core_1.NoRecordingSpan(spanContext);\n        }\n        const span = new Span_1.Span(this, context, name, spanContext, spanKind, parentContext ? parentContext.spanId : undefined, links, options.startTime);\n        // Set default attributes\n        span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n        return span;\n    }\n    /** Returns the active {@link TraceParams}. */\n    getActiveTraceParams() {\n        return this._traceParams;\n    }\n    getActiveSpanProcessor() {\n        return this._tracerProvider.getActiveSpanProcessor();\n    }\n}\nexports.Tracer = Tracer;\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n    if (options.root)\n        return undefined;\n    return api.getSpanContext(context);\n}\n//# sourceMappingURL=Tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvVHJhY2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL1RyYWNlci5qcz8wYWI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhY2VyID0gdm9pZCAwO1xuY29uc3QgYXBpID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuY29uc3QgU3Bhbl8xID0gcmVxdWlyZShcIi4vU3BhblwiKTtcbmNvbnN0IHV0aWxpdHlfMSA9IHJlcXVpcmUoXCIuL3V0aWxpdHlcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhIGJhc2ljIHRyYWNlci5cbiAqL1xuY2xhc3MgVHJhY2VyIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGEgbmV3IFRyYWNlciBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihpbnN0cnVtZW50YXRpb25MaWJyYXJ5LCBjb25maWcsIF90cmFjZXJQcm92aWRlcikge1xuICAgICAgICB0aGlzLl90cmFjZXJQcm92aWRlciA9IF90cmFjZXJQcm92aWRlcjtcbiAgICAgICAgY29uc3QgbG9jYWxDb25maWcgPSB1dGlsaXR5XzEubWVyZ2VDb25maWcoY29uZmlnKTtcbiAgICAgICAgdGhpcy5fc2FtcGxlciA9IGxvY2FsQ29uZmlnLnNhbXBsZXI7XG4gICAgICAgIHRoaXMuX3RyYWNlUGFyYW1zID0gbG9jYWxDb25maWcudHJhY2VQYXJhbXM7XG4gICAgICAgIHRoaXMuX2lkR2VuZXJhdG9yID0gY29uZmlnLmlkR2VuZXJhdG9yIHx8IG5ldyBjb3JlXzEuUmFuZG9tSWRHZW5lcmF0b3IoKTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IF90cmFjZXJQcm92aWRlci5yZXNvdXJjZTtcbiAgICAgICAgdGhpcy5pbnN0cnVtZW50YXRpb25MaWJyYXJ5ID0gaW5zdHJ1bWVudGF0aW9uTGlicmFyeTtcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBjb25maWcubG9nZ2VyIHx8IG5ldyBjb3JlXzEuQ29uc29sZUxvZ2dlcihjb25maWcubG9nTGV2ZWwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdGFydHMgYSBuZXcgU3BhbiBvciByZXR1cm5zIHRoZSBkZWZhdWx0IE5vb3BTcGFuIGJhc2VkIG9uIHRoZSBzYW1wbGluZ1xuICAgICAqIGRlY2lzaW9uLlxuICAgICAqL1xuICAgIHN0YXJ0U3BhbihuYW1lLCBvcHRpb25zID0ge30sIGNvbnRleHQgPSBhcGkuY29udGV4dC5hY3RpdmUoKSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAoYXBpLmlzSW5zdHJ1bWVudGF0aW9uU3VwcHJlc3NlZChjb250ZXh0KSkge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIuZGVidWcoJ0luc3RydW1lbnRhdGlvbiBzdXBwcmVzc2VkLCByZXR1cm5pbmcgTm9vcCBTcGFuJyk7XG4gICAgICAgICAgICByZXR1cm4gYXBpLk5PT1BfU1BBTjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXJlbnRDb250ZXh0ID0gZ2V0UGFyZW50KG9wdGlvbnMsIGNvbnRleHQpO1xuICAgICAgICBjb25zdCBzcGFuSWQgPSB0aGlzLl9pZEdlbmVyYXRvci5nZW5lcmF0ZVNwYW5JZCgpO1xuICAgICAgICBsZXQgdHJhY2VJZDtcbiAgICAgICAgbGV0IHRyYWNlU3RhdGU7XG4gICAgICAgIGlmICghcGFyZW50Q29udGV4dCB8fCAhYXBpLnRyYWNlLmlzU3BhbkNvbnRleHRWYWxpZChwYXJlbnRDb250ZXh0KSkge1xuICAgICAgICAgICAgLy8gTmV3IHJvb3Qgc3Bhbi5cbiAgICAgICAgICAgIHRyYWNlSWQgPSB0aGlzLl9pZEdlbmVyYXRvci5nZW5lcmF0ZVRyYWNlSWQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIE5ldyBjaGlsZCBzcGFuLlxuICAgICAgICAgICAgdHJhY2VJZCA9IHBhcmVudENvbnRleHQudHJhY2VJZDtcbiAgICAgICAgICAgIHRyYWNlU3RhdGUgPSBwYXJlbnRDb250ZXh0LnRyYWNlU3RhdGU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3BhbktpbmQgPSAoX2EgPSBvcHRpb25zLmtpbmQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGFwaS5TcGFuS2luZC5JTlRFUk5BTDtcbiAgICAgICAgY29uc3QgbGlua3MgPSAoX2IgPSBvcHRpb25zLmxpbmtzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXTtcbiAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IGNvcmVfMS5zYW5pdGl6ZUF0dHJpYnV0ZXMob3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgICAgICAgLy8gbWFrZSBzYW1wbGluZyBkZWNpc2lvblxuICAgICAgICBjb25zdCBzYW1wbGluZ1Jlc3VsdCA9IHRoaXMuX3NhbXBsZXIuc2hvdWxkU2FtcGxlKGNvbnRleHQsIHRyYWNlSWQsIG5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgICAgIGNvbnN0IHRyYWNlRmxhZ3MgPSBzYW1wbGluZ1Jlc3VsdC5kZWNpc2lvbiA9PT0gYXBpLlNhbXBsaW5nRGVjaXNpb24uUkVDT1JEX0FORF9TQU1QTEVEXG4gICAgICAgICAgICA/IGFwaS5UcmFjZUZsYWdzLlNBTVBMRURcbiAgICAgICAgICAgIDogYXBpLlRyYWNlRmxhZ3MuTk9ORTtcbiAgICAgICAgY29uc3Qgc3BhbkNvbnRleHQgPSB7IHRyYWNlSWQsIHNwYW5JZCwgdHJhY2VGbGFncywgdHJhY2VTdGF0ZSB9O1xuICAgICAgICBpZiAoc2FtcGxpbmdSZXN1bHQuZGVjaXNpb24gPT09IGFwaS5TYW1wbGluZ0RlY2lzaW9uLk5PVF9SRUNPUkQpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdSZWNvcmRpbmcgaXMgb2ZmLCBzdGFydGluZyBubyByZWNvcmRpbmcgc3BhbicpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBjb3JlXzEuTm9SZWNvcmRpbmdTcGFuKHNwYW5Db250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzcGFuID0gbmV3IFNwYW5fMS5TcGFuKHRoaXMsIGNvbnRleHQsIG5hbWUsIHNwYW5Db250ZXh0LCBzcGFuS2luZCwgcGFyZW50Q29udGV4dCA/IHBhcmVudENvbnRleHQuc3BhbklkIDogdW5kZWZpbmVkLCBsaW5rcywgb3B0aW9ucy5zdGFydFRpbWUpO1xuICAgICAgICAvLyBTZXQgZGVmYXVsdCBhdHRyaWJ1dGVzXG4gICAgICAgIHNwYW4uc2V0QXR0cmlidXRlcyhPYmplY3QuYXNzaWduKGF0dHJpYnV0ZXMsIHNhbXBsaW5nUmVzdWx0LmF0dHJpYnV0ZXMpKTtcbiAgICAgICAgcmV0dXJuIHNwYW47XG4gICAgfVxuICAgIC8qKiBSZXR1cm5zIHRoZSBhY3RpdmUge0BsaW5rIFRyYWNlUGFyYW1zfS4gKi9cbiAgICBnZXRBY3RpdmVUcmFjZVBhcmFtcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYWNlUGFyYW1zO1xuICAgIH1cbiAgICBnZXRBY3RpdmVTcGFuUHJvY2Vzc29yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2VyUHJvdmlkZXIuZ2V0QWN0aXZlU3BhblByb2Nlc3NvcigpO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhY2VyID0gVHJhY2VyO1xuLyoqXG4gKiBHZXQgdGhlIHBhcmVudCB0byBhc3NpZ24gdG8gYSBzdGFydGVkIHNwYW4uIElmIG9wdGlvbnMucGFyZW50IGlzIG51bGwsXG4gKiBkbyBub3QgYXNzaWduIGEgcGFyZW50LlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIHNwYW4gb3B0aW9uc1xuICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBjaGVjayBmb3IgcGFyZW50XG4gKi9cbmZ1bmN0aW9uIGdldFBhcmVudChvcHRpb25zLCBjb250ZXh0KSB7XG4gICAgaWYgKG9wdGlvbnMucm9vdClcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICByZXR1cm4gYXBpLmdldFNwYW5Db250ZXh0KGNvbnRleHQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhY2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/Tracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/config.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/config.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_CONFIG = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `traceParams`), the user-provided value will be\n * used to extend the default value.\n */\nexports.DEFAULT_CONFIG = {\n    logLevel: core_1.getEnv().OTEL_LOG_LEVEL,\n    sampler: new core_1.AlwaysOnSampler(),\n    traceParams: {\n        numberOfAttributesPerSpan: core_1.getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n        numberOfLinksPerSpan: core_1.getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n        numberOfEventsPerSpan: core_1.getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n};\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvY29uZmlnLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL2NvbmZpZy5qcz9iNmZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9DT05GSUcgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogRGVmYXVsdCBjb25maWd1cmF0aW9uLiBGb3IgZmllbGRzIHdpdGggcHJpbWl0aXZlIHZhbHVlcywgYW55IHVzZXItcHJvdmlkZWRcbiAqIHZhbHVlIHdpbGwgb3ZlcnJpZGUgdGhlIGNvcnJlc3BvbmRpbmcgZGVmYXVsdCB2YWx1ZS4gRm9yIGZpZWxkcyB3aXRoXG4gKiBub24tcHJpbWl0aXZlIHZhbHVlcyAobGlrZSBgdHJhY2VQYXJhbXNgKSwgdGhlIHVzZXItcHJvdmlkZWQgdmFsdWUgd2lsbCBiZVxuICogdXNlZCB0byBleHRlbmQgdGhlIGRlZmF1bHQgdmFsdWUuXG4gKi9cbmV4cG9ydHMuREVGQVVMVF9DT05GSUcgPSB7XG4gICAgbG9nTGV2ZWw6IGNvcmVfMS5nZXRFbnYoKS5PVEVMX0xPR19MRVZFTCxcbiAgICBzYW1wbGVyOiBuZXcgY29yZV8xLkFsd2F5c09uU2FtcGxlcigpLFxuICAgIHRyYWNlUGFyYW1zOiB7XG4gICAgICAgIG51bWJlck9mQXR0cmlidXRlc1BlclNwYW46IGNvcmVfMS5nZXRFbnYoKS5PVEVMX1NQQU5fQVRUUklCVVRFX0NPVU5UX0xJTUlULFxuICAgICAgICBudW1iZXJPZkxpbmtzUGVyU3BhbjogY29yZV8xLmdldEVudigpLk9URUxfU1BBTl9MSU5LX0NPVU5UX0xJTUlULFxuICAgICAgICBudW1iZXJPZkV2ZW50c1BlclNwYW46IGNvcmVfMS5nZXRFbnYoKS5PVEVMX1NQQU5fRVZFTlRfQ09VTlRfTElNSVQsXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/config.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchSpanProcessor = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nclass BatchSpanProcessor {\n    constructor(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        const env = core_1.getEnv();\n        this._bufferSize =\n            config && config.bufferSize\n                ? config.bufferSize\n                : env.OTEL_BSP_MAX_BATCH_SIZE;\n        this._bufferTimeout =\n            config && typeof config.bufferTimeout === 'number'\n                ? config.bufferTimeout\n                : env.OTEL_BSP_SCHEDULE_DELAY_MILLIS;\n    }\n    forceFlush() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        return this._flush();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        this._addToBuffer(span);\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._flush();\n            })\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n    /** Add a span in the buffer. */\n    _addToBuffer(span) {\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n        if (this._finishedSpans.length > this._bufferSize) {\n            this._flush().catch(e => {\n                core_1.globalErrorHandler(e);\n            });\n        }\n    }\n    /** Send the span data list to exporter */\n    _flush() {\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            // prevent downstream exporter calls from generating spans\n            api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                this._exporter.export(this._finishedSpans.splice(0), result => {\n                    var _a;\n                    if (result.code === core_1.ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    }\n    _maybeStartTimer() {\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(() => {\n            this._flush().catch(e => {\n                core_1.globalErrorHandler(e);\n            });\n        }, this._bufferTimeout);\n        core_1.unrefTimer(this._timer);\n    }\n    _clearTimer() {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    }\n}\nexports.BatchSpanProcessor = BatchSpanProcessor;\n//# sourceMappingURL=BatchSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0JhdGNoU3BhblByb2Nlc3Nvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9leHBvcnQvQmF0Y2hTcGFuUHJvY2Vzc29yLmpzP2YwOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXRjaFNwYW5Qcm9jZXNzb3IgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgdGhlIHtAbGluayBTcGFuUHJvY2Vzc29yfSB0aGF0IGJhdGNoZXMgc3BhbnMgZXhwb3J0ZWQgYnlcbiAqIHRoZSBTREsgdGhlbiBwdXNoZXMgdGhlbSB0byB0aGUgZXhwb3J0ZXIgcGlwZWxpbmUuXG4gKi9cbmNsYXNzIEJhdGNoU3BhblByb2Nlc3NvciB7XG4gICAgY29uc3RydWN0b3IoX2V4cG9ydGVyLCBjb25maWcpIHtcbiAgICAgICAgdGhpcy5fZXhwb3J0ZXIgPSBfZXhwb3J0ZXI7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMgPSBbXTtcbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgIGNvbnN0IGVudiA9IGNvcmVfMS5nZXRFbnYoKTtcbiAgICAgICAgdGhpcy5fYnVmZmVyU2l6ZSA9XG4gICAgICAgICAgICBjb25maWcgJiYgY29uZmlnLmJ1ZmZlclNpemVcbiAgICAgICAgICAgICAgICA/IGNvbmZpZy5idWZmZXJTaXplXG4gICAgICAgICAgICAgICAgOiBlbnYuT1RFTF9CU1BfTUFYX0JBVENIX1NJWkU7XG4gICAgICAgIHRoaXMuX2J1ZmZlclRpbWVvdXQgPVxuICAgICAgICAgICAgY29uZmlnICYmIHR5cGVvZiBjb25maWcuYnVmZmVyVGltZW91dCA9PT0gJ251bWJlcidcbiAgICAgICAgICAgICAgICA/IGNvbmZpZy5idWZmZXJUaW1lb3V0XG4gICAgICAgICAgICAgICAgOiBlbnYuT1RFTF9CU1BfU0NIRURVTEVfREVMQVlfTUlMTElTO1xuICAgIH1cbiAgICBmb3JjZUZsdXNoKCkge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZsdXNoKCk7XG4gICAgfVxuICAgIC8vIGRvZXMgbm90aGluZy5cbiAgICBvblN0YXJ0KF9zcGFuKSB7IH1cbiAgICBvbkVuZChzcGFuKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NodXRkb3duKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYWRkVG9CdWZmZXIoc3Bhbik7XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IHRydWU7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZmx1c2goKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9leHBvcnRlci5zaHV0ZG93bigpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbihyZXNvbHZlKVxuICAgICAgICAgICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlO1xuICAgIH1cbiAgICAvKiogQWRkIGEgc3BhbiBpbiB0aGUgYnVmZmVyLiAqL1xuICAgIF9hZGRUb0J1ZmZlcihzcGFuKSB7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMucHVzaChzcGFuKTtcbiAgICAgICAgdGhpcy5fbWF5YmVTdGFydFRpbWVyKCk7XG4gICAgICAgIGlmICh0aGlzLl9maW5pc2hlZFNwYW5zLmxlbmd0aCA+IHRoaXMuX2J1ZmZlclNpemUpIHtcbiAgICAgICAgICAgIHRoaXMuX2ZsdXNoKCkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICAgICAgY29yZV8xLmdsb2JhbEVycm9ySGFuZGxlcihlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKiBTZW5kIHRoZSBzcGFuIGRhdGEgbGlzdCB0byBleHBvcnRlciAqL1xuICAgIF9mbHVzaCgpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJUaW1lcigpO1xuICAgICAgICBpZiAodGhpcy5fZmluaXNoZWRTcGFucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgLy8gcHJldmVudCBkb3duc3RyZWFtIGV4cG9ydGVyIGNhbGxzIGZyb20gZ2VuZXJhdGluZyBzcGFuc1xuICAgICAgICAgICAgYXBpXzEuY29udGV4dC53aXRoKGFwaV8xLnN1cHByZXNzSW5zdHJ1bWVudGF0aW9uKGFwaV8xLmNvbnRleHQuYWN0aXZlKCkpLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gUmVzZXQgdGhlIGZpbmlzaGVkIHNwYW5zIGJ1ZmZlciBoZXJlIGJlY2F1c2UgdGhlIG5leHQgaW52b2NhdGlvbnMgb2YgdGhlIF9mbHVzaCBtZXRob2RcbiAgICAgICAgICAgICAgICAvLyBjb3VsZCBwYXNzIHRoZSBzYW1lIGZpbmlzaGVkIHNwYW5zIHRvIHRoZSBleHBvcnRlciBpZiB0aGUgYnVmZmVyIGlzIGNsZWFyZWRcbiAgICAgICAgICAgICAgICAvLyBvdXRzaWRlIG9mIHRoZSBleGVjdXRpb24gb2YgdGhpcyBjYWxsYmFjay5cbiAgICAgICAgICAgICAgICB0aGlzLl9leHBvcnRlci5leHBvcnQodGhpcy5fZmluaXNoZWRTcGFucy5zcGxpY2UoMCksIHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09PSBjb3JlXzEuRXhwb3J0UmVzdWx0Q29kZS5TVUNDRVNTKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoKF9hID0gcmVzdWx0LmVycm9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgRXJyb3IoJ0JhdGNoU3BhblByb2Nlc3Nvcjogc3BhbiBleHBvcnQgZmFpbGVkJykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9tYXliZVN0YXJ0VGltZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLl90aW1lciAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fZmx1c2goKS5jYXRjaChlID0+IHtcbiAgICAgICAgICAgICAgICBjb3JlXzEuZ2xvYmFsRXJyb3JIYW5kbGVyKGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIHRoaXMuX2J1ZmZlclRpbWVvdXQpO1xuICAgICAgICBjb3JlXzEudW5yZWZUaW1lcih0aGlzLl90aW1lcik7XG4gICAgfVxuICAgIF9jbGVhclRpbWVyKCkge1xuICAgICAgICBpZiAodGhpcy5fdGltZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5CYXRjaFNwYW5Qcm9jZXNzb3IgPSBCYXRjaFNwYW5Qcm9jZXNzb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXRjaFNwYW5Qcm9jZXNzb3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleSpanExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\nclass ConsoleSpanExporter {\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    export(spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    }\n    /**\n     * Shutdown the exporter.\n     */\n    shutdown() {\n        this._sendSpans([]);\n        return Promise.resolve();\n    }\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    _exportInfo(span) {\n        return {\n            traceId: span.spanContext.traceId,\n            parentId: span.parentSpanId,\n            name: span.name,\n            id: span.spanContext.spanId,\n            kind: span.kind,\n            timestamp: core_1.hrTimeToMicroseconds(span.startTime),\n            duration: core_1.hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n        };\n    }\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    _sendSpans(spans, done) {\n        for (const span of spans) {\n            console.log(this._exportInfo(span));\n        }\n        if (done) {\n            return done({ code: core_1.ExportResultCode.SUCCESS });\n        }\n    }\n}\nexports.ConsoleSpanExporter = ConsoleSpanExporter;\n//# sourceMappingURL=ConsoleSpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0NvbnNvbGVTcGFuRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0NvbnNvbGVTcGFuRXhwb3J0ZXIuanM/OGU0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnNvbGVTcGFuRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogVGhpcyBpcyBpbXBsZW1lbnRhdGlvbiBvZiB7QGxpbmsgU3BhbkV4cG9ydGVyfSB0aGF0IHByaW50cyBzcGFucyB0byB0aGVcbiAqIGNvbnNvbGUuIFRoaXMgY2xhc3MgY2FuIGJlIHVzZWQgZm9yIGRpYWdub3N0aWMgcHVycG9zZXMuXG4gKi9cbmNsYXNzIENvbnNvbGVTcGFuRXhwb3J0ZXIge1xuICAgIC8qKlxuICAgICAqIEV4cG9ydCBzcGFucy5cbiAgICAgKiBAcGFyYW0gc3BhbnNcbiAgICAgKiBAcGFyYW0gcmVzdWx0Q2FsbGJhY2tcbiAgICAgKi9cbiAgICBleHBvcnQoc3BhbnMsIHJlc3VsdENhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zZW5kU3BhbnMoc3BhbnMsIHJlc3VsdENhbGxiYWNrKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2h1dGRvd24gdGhlIGV4cG9ydGVyLlxuICAgICAqL1xuICAgIHNodXRkb3duKCkge1xuICAgICAgICB0aGlzLl9zZW5kU3BhbnMoW10pO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGNvbnZlcnRzIHNwYW4gaW5mbyBpbnRvIG1vcmUgcmVhZGFibGUgZm9ybWF0XG4gICAgICogQHBhcmFtIHNwYW5cbiAgICAgKi9cbiAgICBfZXhwb3J0SW5mbyhzcGFuKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0cmFjZUlkOiBzcGFuLnNwYW5Db250ZXh0LnRyYWNlSWQsXG4gICAgICAgICAgICBwYXJlbnRJZDogc3Bhbi5wYXJlbnRTcGFuSWQsXG4gICAgICAgICAgICBuYW1lOiBzcGFuLm5hbWUsXG4gICAgICAgICAgICBpZDogc3Bhbi5zcGFuQ29udGV4dC5zcGFuSWQsXG4gICAgICAgICAgICBraW5kOiBzcGFuLmtpbmQsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IGNvcmVfMS5oclRpbWVUb01pY3Jvc2Vjb25kcyhzcGFuLnN0YXJ0VGltZSksXG4gICAgICAgICAgICBkdXJhdGlvbjogY29yZV8xLmhyVGltZVRvTWljcm9zZWNvbmRzKHNwYW4uZHVyYXRpb24pLFxuICAgICAgICAgICAgYXR0cmlidXRlczogc3Bhbi5hdHRyaWJ1dGVzLFxuICAgICAgICAgICAgc3RhdHVzOiBzcGFuLnN0YXR1cyxcbiAgICAgICAgICAgIGV2ZW50czogc3Bhbi5ldmVudHMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNob3dpbmcgc3BhbnMgaW4gY29uc29sZVxuICAgICAqIEBwYXJhbSBzcGFuc1xuICAgICAqIEBwYXJhbSBkb25lXG4gICAgICovXG4gICAgX3NlbmRTcGFucyhzcGFucywgZG9uZSkge1xuICAgICAgICBmb3IgKGNvbnN0IHNwYW4gb2Ygc3BhbnMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuX2V4cG9ydEluZm8oc3BhbikpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICByZXR1cm4gZG9uZSh7IGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLlNVQ0NFU1MgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkNvbnNvbGVTcGFuRXhwb3J0ZXIgPSBDb25zb2xlU3BhbkV4cG9ydGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uc29sZVNwYW5FeHBvcnRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySpanExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nclass InMemorySpanExporter {\n    constructor() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    export(spans, resultCallback) {\n        if (this._stopped)\n            return resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        this._finishedSpans.push(...spans);\n        setTimeout(() => resultCallback({ code: core_1.ExportResultCode.SUCCESS }), 0);\n    }\n    shutdown() {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    }\n    reset() {\n        this._finishedSpans = [];\n    }\n    getFinishedSpans() {\n        return this._finishedSpans;\n    }\n}\nexports.InMemorySpanExporter = InMemorySpanExporter;\n//# sourceMappingURL=InMemorySpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0luTWVtb3J5U3BhbkV4cG9ydGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL2V4cG9ydC9Jbk1lbW9yeVNwYW5FeHBvcnRlci5qcz9mZTU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlTcGFuRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyBjYW4gYmUgdXNlZCBmb3IgdGVzdGluZyBwdXJwb3Nlcy4gSXQgc3RvcmVzIHRoZSBleHBvcnRlZCBzcGFuc1xuICogaW4gYSBsaXN0IGluIG1lbW9yeSB0aGF0IGNhbiBiZSByZXRyaWV2ZWQgdXNpbmcgdGhlIGBnZXRGaW5pc2hlZFNwYW5zKClgXG4gKiBtZXRob2QuXG4gKi9cbmNsYXNzIEluTWVtb3J5U3BhbkV4cG9ydGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fZmluaXNoZWRTcGFucyA9IFtdO1xuICAgICAgICAvKipcbiAgICAgICAgICogSW5kaWNhdGVzIGlmIHRoZSBleHBvcnRlciBoYXMgYmVlbiBcInNodXRkb3duLlwiXG4gICAgICAgICAqIFdoZW4gZmFsc2UsIGV4cG9ydGVkIHNwYW5zIHdpbGwgbm90IGJlIHN0b3JlZCBpbi1tZW1vcnkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9zdG9wcGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGV4cG9ydChzcGFucywgcmVzdWx0Q2FsbGJhY2spIHtcbiAgICAgICAgaWYgKHRoaXMuX3N0b3BwZWQpXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0Q2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IEVycm9yKCdFeHBvcnRlciBoYXMgYmVlbiBzdG9wcGVkJyksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fZmluaXNoZWRTcGFucy5wdXNoKC4uLnNwYW5zKTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiByZXN1bHRDYWxsYmFjayh7IGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLlNVQ0NFU1MgfSksIDApO1xuICAgIH1cbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgdGhpcy5fc3RvcHBlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMgPSBbXTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fZmluaXNoZWRTcGFucyA9IFtdO1xuICAgIH1cbiAgICBnZXRGaW5pc2hlZFNwYW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmluaXNoZWRTcGFucztcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5U3BhbkV4cG9ydGVyID0gSW5NZW1vcnlTcGFuRXhwb3J0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Jbk1lbW9yeVNwYW5FeHBvcnRlci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ReadableSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1JlYWRhYmxlU3Bhbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9leHBvcnQvUmVhZGFibGVTcGFuLmpzPzEzN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVhZGFibGVTcGFuLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleSpanProcessor = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nclass SimpleSpanProcessor {\n    constructor(_exporter) {\n        this._exporter = _exporter;\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n    }\n    forceFlush() {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        // prevent downstream exporter calls from generating spans\n        api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n            this._exporter.export([span], result => {\n                var _a;\n                if (result.code !== core_1.ExportResultCode.SUCCESS) {\n                    core_1.globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(`SimpleSpanProcessor: span export failed (status ${result})`));\n                }\n            });\n        });\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.SimpleSpanProcessor = SimpleSpanProcessor;\n//# sourceMappingURL=SimpleSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NpbXBsZVNwYW5Qcm9jZXNzb3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NpbXBsZVNwYW5Qcm9jZXNzb3IuanM/MmM2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpbXBsZVNwYW5Qcm9jZXNzb3IgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogQW4gaW1wbGVtZW50YXRpb24gb2YgdGhlIHtAbGluayBTcGFuUHJvY2Vzc29yfSB0aGF0IGNvbnZlcnRzIHRoZSB7QGxpbmsgU3Bhbn1cbiAqIHRvIHtAbGluayBSZWFkYWJsZVNwYW59IGFuZCBwYXNzZXMgaXQgdG8gdGhlIGNvbmZpZ3VyZWQgZXhwb3J0ZXIuXG4gKlxuICogT25seSBzcGFucyB0aGF0IGFyZSBzYW1wbGVkIGFyZSBjb252ZXJ0ZWQuXG4gKi9cbmNsYXNzIFNpbXBsZVNwYW5Qcm9jZXNzb3Ige1xuICAgIGNvbnN0cnVjdG9yKF9leHBvcnRlcikge1xuICAgICAgICB0aGlzLl9leHBvcnRlciA9IF9leHBvcnRlcjtcbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIGZvcmNlRmx1c2goKSB7XG4gICAgICAgIC8vIGRvIG5vdGhpbmcgYXMgYWxsIHNwYW5zIGFyZSBiZWluZyBleHBvcnRlZCB3aXRob3V0IHdhaXRpbmdcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICAvLyBkb2VzIG5vdGhpbmcuXG4gICAgb25TdGFydChfc3BhbikgeyB9XG4gICAgb25FbmQoc3Bhbikge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIHByZXZlbnQgZG93bnN0cmVhbSBleHBvcnRlciBjYWxscyBmcm9tIGdlbmVyYXRpbmcgc3BhbnNcbiAgICAgICAgYXBpXzEuY29udGV4dC53aXRoKGFwaV8xLnN1cHByZXNzSW5zdHJ1bWVudGF0aW9uKGFwaV8xLmNvbnRleHQuYWN0aXZlKCkpLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9leHBvcnRlci5leHBvcnQoW3NwYW5dLCByZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgIT09IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLlNVQ0NFU1MpIHtcbiAgICAgICAgICAgICAgICAgICAgY29yZV8xLmdsb2JhbEVycm9ySGFuZGxlcigoX2EgPSByZXN1bHQuZXJyb3IpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBFcnJvcihgU2ltcGxlU3BhblByb2Nlc3Nvcjogc3BhbiBleHBvcnQgZmFpbGVkIChzdGF0dXMgJHtyZXN1bHR9KWApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IHRydWU7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZXhwb3J0ZXIuc2h1dGRvd24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZTtcbiAgICB9XG59XG5leHBvcnRzLlNpbXBsZVNwYW5Qcm9jZXNzb3IgPSBTaW1wbGVTcGFuUHJvY2Vzc29yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2ltcGxlU3BhblByb2Nlc3Nvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NwYW5FeHBvcnRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9leHBvcnQvU3BhbkV4cG9ydGVyLmpzP2FmZWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BhbkV4cG9ydGVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Tracer */ \"./node_modules/@opentelemetry/tracing/build/src/Tracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BasicTracerProvider */ \"./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ConsoleSpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/BatchSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/InMemorySpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ReadableSpan */ \"./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/SimpleSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/SpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Span */ \"./node_modules/@opentelemetry/tracing/build/src/Span.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/tracing/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvaW5kZXguanM/NjcxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVHJhY2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CYXNpY1RyYWNlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvQ29uc29sZVNwYW5FeHBvcnRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L0JhdGNoU3BhblByb2Nlc3NvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L0luTWVtb3J5U3BhbkV4cG9ydGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvUmVhZGFibGVTcGFuXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvU2ltcGxlU3BhblByb2Nlc3NvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L1NwYW5FeHBvcnRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3BhblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3BhblByb2Nlc3NvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/types.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdHlwZXMuanM/ZTM5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/utility.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/utility.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeConfig = void 0;\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/tracing/build/src/config.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nfunction mergeConfig(userConfig) {\n    const otelSamplingProbability = core_1.getEnv().OTEL_SAMPLING_PROBABILITY;\n    const target = Object.assign({}, config_1.DEFAULT_CONFIG, \n    // use default AlwaysOnSampler if otelSamplingProbability is 1\n    otelSamplingProbability !== undefined && otelSamplingProbability < 1\n        ? {\n            sampler: new core_1.ParentBasedSampler({\n                root: new core_1.TraceIdRatioBasedSampler(otelSamplingProbability),\n            }),\n        }\n        : {}, userConfig);\n    target.traceParams = Object.assign({}, config_1.DEFAULT_CONFIG.traceParams, userConfig.traceParams || {});\n    return target;\n}\nexports.mergeConfig = mergeConfig;\n//# sourceMappingURL=utility.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdXRpbGl0eS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy91dGlsaXR5LmpzPzU0OTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZUNvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IGNvbmZpZ18xID0gcmVxdWlyZShcIi4vY29uZmlnXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIEZ1bmN0aW9uIHRvIG1lcmdlIERlZmF1bHQgY29uZmlndXJhdGlvbiAoYXMgc3BlY2lmaWVkIGluICcuL2NvbmZpZycpIHdpdGhcbiAqIHVzZXIgcHJvdmlkZWQgY29uZmlndXJhdGlvbnMuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlQ29uZmlnKHVzZXJDb25maWcpIHtcbiAgICBjb25zdCBvdGVsU2FtcGxpbmdQcm9iYWJpbGl0eSA9IGNvcmVfMS5nZXRFbnYoKS5PVEVMX1NBTVBMSU5HX1BST0JBQklMSVRZO1xuICAgIGNvbnN0IHRhcmdldCA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZ18xLkRFRkFVTFRfQ09ORklHLCBcbiAgICAvLyB1c2UgZGVmYXVsdCBBbHdheXNPblNhbXBsZXIgaWYgb3RlbFNhbXBsaW5nUHJvYmFiaWxpdHkgaXMgMVxuICAgIG90ZWxTYW1wbGluZ1Byb2JhYmlsaXR5ICE9PSB1bmRlZmluZWQgJiYgb3RlbFNhbXBsaW5nUHJvYmFiaWxpdHkgPCAxXG4gICAgICAgID8ge1xuICAgICAgICAgICAgc2FtcGxlcjogbmV3IGNvcmVfMS5QYXJlbnRCYXNlZFNhbXBsZXIoe1xuICAgICAgICAgICAgICAgIHJvb3Q6IG5ldyBjb3JlXzEuVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyKG90ZWxTYW1wbGluZ1Byb2JhYmlsaXR5KSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9XG4gICAgICAgIDoge30sIHVzZXJDb25maWcpO1xuICAgIHRhcmdldC50cmFjZVBhcmFtcyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZ18xLkRFRkFVTFRfQ09ORklHLnRyYWNlUGFyYW1zLCB1c2VyQ29uZmlnLnRyYWNlUGFyYW1zIHx8IHt9KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0cy5tZXJnZUNvbmZpZyA9IG1lcmdlQ29uZmlnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbGl0eS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/utility.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/StackContextManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/StackContextManager.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StackContextManager = void 0;\nconst context_base_1 = __webpack_require__(/*! @opentelemetry/context-base */ \"./node_modules/@opentelemetry/context-base/build/src/index.js\");\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nclass StackContextManager {\n    constructor() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = context_base_1.ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param target Function to be executed within the context\n     * @param context\n     */\n    _bindFunction(target, context = context_base_1.ROOT_CONTEXT) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        return this._currentContext;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param target\n     * @param context\n     */\n    bind(target, context = context_base_1.ROOT_CONTEXT) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(target, context);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    disable() {\n        this._currentContext = context_base_1.ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = context_base_1.ROOT_CONTEXT;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     */\n    with(context, fn) {\n        const previousContext = this._currentContext;\n        this._currentContext = context || context_base_1.ROOT_CONTEXT;\n        try {\n            return fn();\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    }\n}\nexports.StackContextManager = StackContextManager;\n//# sourceMappingURL=StackContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9TdGFja0NvbnRleHRNYW5hZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3dlYi9idWlsZC9zcmMvU3RhY2tDb250ZXh0TWFuYWdlci5qcz9iMDYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RhY2tDb250ZXh0TWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IGNvbnRleHRfYmFzZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvbnRleHQtYmFzZVwiKTtcbi8qKlxuICogU3RhY2sgQ29udGV4dCBNYW5hZ2VyIGZvciBtYW5hZ2luZyB0aGUgc3RhdGUgaW4gd2ViXG4gKiBpdCBkb2Vzbid0IGZ1bGx5IHN1cHBvcnQgdGhlIGFzeW5jIGNhbGxzIHRob3VnaFxuICovXG5jbGFzcyBTdGFja0NvbnRleHRNYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHdoZXRoZXIgdGhlIGNvbnRleHQgbWFuYWdlciBpcyBlbmFibGVkIG9yIG5vdFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5fZW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogS2VlcHMgdGhlIHJlZmVyZW5jZSB0byBjdXJyZW50IGNvbnRleHRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuX2N1cnJlbnRDb250ZXh0ID0gY29udGV4dF9iYXNlXzEuUk9PVF9DT05URVhUO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0YXJnZXQgRnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgd2l0aGluIHRoZSBjb250ZXh0XG4gICAgICogQHBhcmFtIGNvbnRleHRcbiAgICAgKi9cbiAgICBfYmluZEZ1bmN0aW9uKHRhcmdldCwgY29udGV4dCA9IGNvbnRleHRfYmFzZV8xLlJPT1RfQ09OVEVYVCkge1xuICAgICAgICBjb25zdCBtYW5hZ2VyID0gdGhpcztcbiAgICAgICAgY29uc3QgY29udGV4dFdyYXBwZXIgPSBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIG1hbmFnZXIud2l0aChjb250ZXh0LCAoKSA9PiB0YXJnZXQuYXBwbHkodGhpcywgYXJncykpO1xuICAgICAgICB9O1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udGV4dFdyYXBwZXIsICdsZW5ndGgnLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiB0YXJnZXQubGVuZ3RoLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGNvbnRleHRXcmFwcGVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBhY3RpdmUgY29udGV4dFxuICAgICAqL1xuICAgIGFjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRDb250ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBCaW5kcyBhIHRoZSBjZXJ0YWluIGNvbnRleHQgb3IgdGhlIGFjdGl2ZSBvbmUgdG8gdGhlIHRhcmdldCBmdW5jdGlvbiBhbmQgdGhlbiByZXR1cm5zIHRoZSB0YXJnZXRcbiAgICAgKiBAcGFyYW0gdGFyZ2V0XG4gICAgICogQHBhcmFtIGNvbnRleHRcbiAgICAgKi9cbiAgICBiaW5kKHRhcmdldCwgY29udGV4dCA9IGNvbnRleHRfYmFzZV8xLlJPT1RfQ09OVEVYVCkge1xuICAgICAgICAvLyBpZiBubyBzcGVjaWZpYyBjb250ZXh0IHRvIHByb3BhZ2F0ZSBpcyBnaXZlbiwgd2UgdXNlIHRoZSBjdXJyZW50IG9uZVxuICAgICAgICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb250ZXh0ID0gdGhpcy5hY3RpdmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2JpbmRGdW5jdGlvbih0YXJnZXQsIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc2FibGUgdGhlIGNvbnRleHQgbWFuYWdlciAoY2xlYXJzIHRoZSBjdXJyZW50IGNvbnRleHQpXG4gICAgICovXG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhpcy5fY3VycmVudENvbnRleHQgPSBjb250ZXh0X2Jhc2VfMS5ST09UX0NPTlRFWFQ7XG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuYWJsZXMgdGhlIGNvbnRleHQgbWFuYWdlciBhbmQgY3JlYXRlcyBhIGRlZmF1bHQocm9vdCkgY29udGV4dFxuICAgICAqL1xuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2VuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IGNvbnRleHRfYmFzZV8xLlJPT1RfQ09OVEVYVDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGxzIHRoZSBjYWxsYmFjayBmdW5jdGlvbiBbZm5dIHdpdGggdGhlIHByb3ZpZGVkIFtjb250ZXh0XS4gSWYgW2NvbnRleHRdIGlzIHVuZGVmaW5lZCB0aGVuIGl0IHdpbGwgdXNlIHRoZSB3aW5kb3cuXG4gICAgICogVGhlIGNvbnRleHQgd2lsbCBiZSBzZXQgYXMgYWN0aXZlXG4gICAgICogQHBhcmFtIGNvbnRleHRcbiAgICAgKiBAcGFyYW0gZm4gQ2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgKi9cbiAgICB3aXRoKGNvbnRleHQsIGZuKSB7XG4gICAgICAgIGNvbnN0IHByZXZpb3VzQ29udGV4dCA9IHRoaXMuX2N1cnJlbnRDb250ZXh0O1xuICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IGNvbnRleHQgfHwgY29udGV4dF9iYXNlXzEuUk9PVF9DT05URVhUO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuKCk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IHByZXZpb3VzQ29udGV4dDtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuU3RhY2tDb250ZXh0TWFuYWdlciA9IFN0YWNrQ29udGV4dE1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGFja0NvbnRleHRNYW5hZ2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/StackContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebTracerProvider = void 0;\nconst tracing_1 = __webpack_require__(/*! @opentelemetry/tracing */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\nconst StackContextManager_1 = __webpack_require__(/*! ./StackContextManager */ \"./node_modules/@opentelemetry/web/build/src/StackContextManager.js\");\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nclass WebTracerProvider extends tracing_1.BasicTracerProvider {\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    constructor(config = {}) {\n        if (typeof config.plugins === 'undefined') {\n            config.plugins = [];\n        }\n        super(config);\n        for (const plugin of config.plugins) {\n            const instrumentation = plugin;\n            if (typeof instrumentation.setTracerProvider === 'function') {\n                instrumentation.setTracerProvider(this);\n                instrumentation.enable();\n            }\n            else {\n                plugin.enable([], this, this.logger);\n            }\n        }\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager_1.StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        super.register(config);\n    }\n}\nexports.WebTracerProvider = WebTracerProvider;\n//# sourceMappingURL=WebTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9XZWJUcmFjZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL1dlYlRyYWNlclByb3ZpZGVyLmpzPzVhMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XZWJUcmFjZXJQcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IHRyYWNpbmdfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS90cmFjaW5nXCIpO1xuY29uc3QgU3RhY2tDb250ZXh0TWFuYWdlcl8xID0gcmVxdWlyZShcIi4vU3RhY2tDb250ZXh0TWFuYWdlclwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyByZXByZXNlbnRzIGEgd2ViIHRyYWNlciB3aXRoIHtAbGluayBTdGFja0NvbnRleHRNYW5hZ2VyfVxuICovXG5jbGFzcyBXZWJUcmFjZXJQcm92aWRlciBleHRlbmRzIHRyYWNpbmdfMS5CYXNpY1RyYWNlclByb3ZpZGVyIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGEgbmV3IFRyYWNlciBpbnN0YW5jZS5cbiAgICAgKiBAcGFyYW0gY29uZmlnIFdlYiBUcmFjZXIgY29uZmlnXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcucGx1Z2lucyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbmZpZy5wbHVnaW5zID0gW107XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgZm9yIChjb25zdCBwbHVnaW4gb2YgY29uZmlnLnBsdWdpbnMpIHtcbiAgICAgICAgICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHBsdWdpbjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaW5zdHJ1bWVudGF0aW9uLnNldFRyYWNlclByb3ZpZGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldFRyYWNlclByb3ZpZGVyKHRoaXMpO1xuICAgICAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbi5lbmFibGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHBsdWdpbi5lbmFibGUoW10sIHRoaXMsIHRoaXMubG9nZ2VyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoY29uZmlnLmNvbnRleHRNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aHJvdyAoJ2NvbnRleHRNYW5hZ2VyIHNob3VsZCBiZSBkZWZpbmVkIGluIHJlZ2lzdGVyIG1ldGhvZCBub3QgaW4nICtcbiAgICAgICAgICAgICAgICAnIGNvbnN0cnVjdG9yJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5wcm9wYWdhdG9yKSB7XG4gICAgICAgICAgICB0aHJvdyAncHJvcGFnYXRvciBzaG91bGQgYmUgZGVmaW5lZCBpbiByZWdpc3RlciBtZXRob2Qgbm90IGluIGNvbnN0cnVjdG9yJztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWdpc3RlciB0aGlzIFRyYWNlclByb3ZpZGVyIGZvciB1c2Ugd2l0aCB0aGUgT3BlblRlbGVtZXRyeSBBUEkuXG4gICAgICogVW5kZWZpbmVkIHZhbHVlcyBtYXkgYmUgcmVwbGFjZWQgd2l0aCBkZWZhdWx0cywgYW5kXG4gICAgICogbnVsbCB2YWx1ZXMgd2lsbCBiZSBza2lwcGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbmZpZyBDb25maWd1cmF0aW9uIG9iamVjdCBmb3IgU0RLIHJlZ2lzdHJhdGlvblxuICAgICAqL1xuICAgIHJlZ2lzdGVyKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIGlmIChjb25maWcuY29udGV4dE1hbmFnZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uZmlnLmNvbnRleHRNYW5hZ2VyID0gbmV3IFN0YWNrQ29udGV4dE1hbmFnZXJfMS5TdGFja0NvbnRleHRNYW5hZ2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5jb250ZXh0TWFuYWdlcikge1xuICAgICAgICAgICAgY29uZmlnLmNvbnRleHRNYW5hZ2VyLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLnJlZ2lzdGVyKGNvbmZpZyk7XG4gICAgfVxufVxuZXhwb3J0cy5XZWJUcmFjZXJQcm92aWRlciA9IFdlYlRyYWNlclByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViVHJhY2VyUHJvdmlkZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PerformanceTimingNames = void 0;\nvar PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames = exports.PerformanceTimingNames || (exports.PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9lbnVtcy9QZXJmb3JtYW5jZVRpbWluZ05hbWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3dlYi9idWlsZC9zcmMvZW51bXMvUGVyZm9ybWFuY2VUaW1pbmdOYW1lcy5qcz8zMGY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGVyZm9ybWFuY2VUaW1pbmdOYW1lcyA9IHZvaWQgMDtcbnZhciBQZXJmb3JtYW5jZVRpbWluZ05hbWVzO1xuKGZ1bmN0aW9uIChQZXJmb3JtYW5jZVRpbWluZ05hbWVzKSB7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkNPTk5FQ1RfRU5EXCJdID0gXCJjb25uZWN0RW5kXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkNPTk5FQ1RfU1RBUlRcIl0gPSBcImNvbm5lY3RTdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJET01fQ09NUExFVEVcIl0gPSBcImRvbUNvbXBsZXRlXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkRPTV9DT05URU5UX0xPQURFRF9FVkVOVF9FTkRcIl0gPSBcImRvbUNvbnRlbnRMb2FkZWRFdmVudEVuZFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJET01fQ09OVEVOVF9MT0FERURfRVZFTlRfU1RBUlRcIl0gPSBcImRvbUNvbnRlbnRMb2FkZWRFdmVudFN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkRPTV9JTlRFUkFDVElWRVwiXSA9IFwiZG9tSW50ZXJhY3RpdmVcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiRE9NQUlOX0xPT0tVUF9FTkRcIl0gPSBcImRvbWFpbkxvb2t1cEVuZFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJET01BSU5fTE9PS1VQX1NUQVJUXCJdID0gXCJkb21haW5Mb29rdXBTdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJFTkNPREVEX0JPRFlfU0laRVwiXSA9IFwiZW5jb2RlZEJvZHlTaXplXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkZFVENIX1NUQVJUXCJdID0gXCJmZXRjaFN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkxPQURfRVZFTlRfRU5EXCJdID0gXCJsb2FkRXZlbnRFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiTE9BRF9FVkVOVF9TVEFSVFwiXSA9IFwibG9hZEV2ZW50U3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiTkFWSUdBVElPTl9TVEFSVFwiXSA9IFwibmF2aWdhdGlvblN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlJFRElSRUNUX0VORFwiXSA9IFwicmVkaXJlY3RFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiUkVESVJFQ1RfU1RBUlRcIl0gPSBcInJlZGlyZWN0U3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiUkVRVUVTVF9TVEFSVFwiXSA9IFwicmVxdWVzdFN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlJFU1BPTlNFX0VORFwiXSA9IFwicmVzcG9uc2VFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiUkVTUE9OU0VfU1RBUlRcIl0gPSBcInJlc3BvbnNlU3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiU0VDVVJFX0NPTk5FQ1RJT05fU1RBUlRcIl0gPSBcInNlY3VyZUNvbm5lY3Rpb25TdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJVTkxPQURfRVZFTlRfRU5EXCJdID0gXCJ1bmxvYWRFdmVudEVuZFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJVTkxPQURfRVZFTlRfU1RBUlRcIl0gPSBcInVubG9hZEV2ZW50U3RhcnRcIjtcbn0pKFBlcmZvcm1hbmNlVGltaW5nTmFtZXMgPSBleHBvcnRzLlBlcmZvcm1hbmNlVGltaW5nTmFtZXMgfHwgKGV4cG9ydHMuUGVyZm9ybWFuY2VUaW1pbmdOYW1lcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QZXJmb3JtYW5jZVRpbWluZ05hbWVzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./WebTracerProvider */ \"./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./StackContextManager */ \"./node_modules/@opentelemetry/web/build/src/StackContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/web/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@opentelemetry/web/build/src/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL2luZGV4LmpzPzE5MzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1dlYlRyYWNlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TdGFja0NvbnRleHRNYW5hZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnVtcy9QZXJmb3JtYW5jZVRpbWluZ05hbWVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/types.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/types.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PerformanceTimingNames_1 = __webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\");\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL3R5cGVzLmpzP2RjMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuY29uc3QgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc18xID0gcmVxdWlyZShcIi4vZW51bXMvUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1wiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/utils.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldPropagateTraceHeaders = exports.getElementXPath = exports.parseUrl = exports.getResource = exports.sortResources = exports.addSpanNetworkEvents = exports.addSpanNetworkEvent = exports.hasKey = void 0;\nconst PerformanceTimingNames_1 = __webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\n// Used to normalize relative URLs\nconst urlNormalizingA = document.createElement('a');\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasKey(obj, key) {\n    return key in obj;\n}\nexports.hasKey = hasKey;\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nfunction addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\nexports.addSpanNetworkEvent = addSpanNetworkEvent;\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nfunction addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END, resource);\n    const contentLength = resource[PerformanceTimingNames_1.PerformanceTimingNames.ENCODED_BODY_SIZE];\n    if (contentLength !== undefined) {\n        span.setAttribute(semantic_conventions_1.HttpAttribute.HTTP_RESPONSE_CONTENT_LENGTH, contentLength);\n    }\n}\nexports.addSpanNetworkEvents = addSpanNetworkEvents;\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nfunction sortResources(filteredResources) {\n    return filteredResources.slice().sort((a, b) => {\n        const valueA = a[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        const valueB = b[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\nexports.sortResources = sortResources;\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nfunction getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources = new WeakSet(), initiatorType) {\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    urlNormalizingA.href = spanUrl;\n    spanUrl = urlNormalizingA.href;\n    const filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    const sorted = sortResources(filteredResources.slice());\n    const parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin !== window.location.origin && sorted.length > 1) {\n        let corsPreFlightRequest = sorted[0];\n        let mainRequest = findMainRequest(sorted, corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END], endTimeHR);\n        const responseEnd = corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END];\n        const fetchStart = mainRequest[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest,\n            mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\nexports.getResource = getResource;\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    const spanEndTime = core_1.hrTimeToNanoseconds(spanEndTimeHR);\n    const minTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(corsPreFlightRequestEndTime));\n    let mainRequest = resources[1];\n    let bestGap;\n    const length = resources.length;\n    for (let i = 1; i < length; i++) {\n        const resource = resources[i];\n        const resourceStartTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));\n        const resourceEndTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));\n        const currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    const startTime = core_1.hrTimeToNanoseconds(startTimeHR);\n    const endTime = core_1.hrTimeToNanoseconds(endTimeHR);\n    let filteredResources = resources.filter(resource => {\n        const resourceStartTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));\n        const resourceEndTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(resource => {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using anchor element\n * @param url\n */\nfunction parseUrl(url) {\n    const a = document.createElement('a');\n    a.href = url;\n    return a;\n}\nexports.parseUrl = parseUrl;\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    const targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    let xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\nexports.getElementXPath = getElementXPath;\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    const allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    let elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter((element) => {\n        const localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    const nodeType = target.nodeType;\n    const index = getNodeIndex(target);\n    let nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        const id = target.getAttribute('id');\n        if (optimised && id) {\n            return `//*[@id=\"${id}\"]`;\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return `/${nodeValue}[${index}]`;\n    }\n    return `/${nodeValue}`;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nfunction shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    const parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === window.location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl => core_1.urlMatches(spanUrl, propagateTraceHeaderUrl));\n    }\n}\nexports.shouldPropagateTraceHeaders = shouldPropagateTraceHeaders;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/utils.js\n");

/***/ }),

/***/ "./node_modules/lodash.merge/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.merge/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lodash.merge/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/shimmer/index.js":
/*!***************************************!*\
  !*** ./node_modules/shimmer/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hpbW1lci9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zaGltbWVyL2luZGV4LmpzPzc3NmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24gKGZ1bmt0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgZnVua3Rpb24gPT09ICdmdW5jdGlvbidcbn1cblxuLy8gRGVmYXVsdCB0byBjb21wbGFpbmluZyBsb3VkbHkgd2hlbiB0aGluZ3MgZG9uJ3QgZ28gYWNjb3JkaW5nIHRvIHBsYW4uXG52YXIgbG9nZ2VyID0gY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpXG5cbi8vIFNldHMgYSBwcm9wZXJ0eSBvbiBhbiBvYmplY3QsIHByZXNlcnZpbmcgaXRzIGVudW1lcmFiaWxpdHkuXG4vLyBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgcHJvcGVydHkgaXMgYWxyZWFkeSB3cml0YWJsZS5cbmZ1bmN0aW9uIGRlZmluZVByb3BlcnR5IChvYmosIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBlbnVtZXJhYmxlID0gISFvYmpbbmFtZV0gJiYgb2JqLnByb3BlcnR5SXNFbnVtZXJhYmxlKG5hbWUpXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIG5hbWUsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZW51bWVyYWJsZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfSlcbn1cblxuLy8gS2VlcCBpbml0aWFsaXphdGlvbiBpZGVtcG90ZW50LlxuZnVuY3Rpb24gc2hpbW1lciAob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmxvZ2dlcikge1xuICAgIGlmICghaXNGdW5jdGlvbihvcHRpb25zLmxvZ2dlcikpIGxvZ2dlcihcIm5ldyBsb2dnZXIgaXNuJ3QgYSBmdW5jdGlvbiwgbm90IHJlcGxhY2luZ1wiKVxuICAgIGVsc2UgbG9nZ2VyID0gb3B0aW9ucy5sb2dnZXJcbiAgfVxufVxuXG5mdW5jdGlvbiB3cmFwIChub2R1bGUsIG5hbWUsIHdyYXBwZXIpIHtcbiAgaWYgKCFub2R1bGUgfHwgIW5vZHVsZVtuYW1lXSkge1xuICAgIGxvZ2dlcignbm8gb3JpZ2luYWwgZnVuY3Rpb24gJyArIG5hbWUgKyAnIHRvIHdyYXAnKVxuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCF3cmFwcGVyKSB7XG4gICAgbG9nZ2VyKCdubyB3cmFwcGVyIGZ1bmN0aW9uJylcbiAgICBsb2dnZXIoKG5ldyBFcnJvcigpKS5zdGFjaylcbiAgICByZXR1cm5cbiAgfVxuXG4gIGlmICghaXNGdW5jdGlvbihub2R1bGVbbmFtZV0pIHx8ICFpc0Z1bmN0aW9uKHdyYXBwZXIpKSB7XG4gICAgbG9nZ2VyKCdvcmlnaW5hbCBvYmplY3QgYW5kIHdyYXBwZXIgbXVzdCBiZSBmdW5jdGlvbnMnKVxuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIG9yaWdpbmFsID0gbm9kdWxlW25hbWVdXG4gIHZhciB3cmFwcGVkID0gd3JhcHBlcihvcmlnaW5hbCwgbmFtZSlcblxuICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX19vcmlnaW5hbCcsIG9yaWdpbmFsKVxuICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX191bndyYXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKG5vZHVsZVtuYW1lXSA9PT0gd3JhcHBlZCkgZGVmaW5lUHJvcGVydHkobm9kdWxlLCBuYW1lLCBvcmlnaW5hbClcbiAgfSlcbiAgZGVmaW5lUHJvcGVydHkod3JhcHBlZCwgJ19fd3JhcHBlZCcsIHRydWUpXG5cbiAgZGVmaW5lUHJvcGVydHkobm9kdWxlLCBuYW1lLCB3cmFwcGVkKVxuICByZXR1cm4gd3JhcHBlZFxufVxuXG5mdW5jdGlvbiBtYXNzV3JhcCAobm9kdWxlcywgbmFtZXMsIHdyYXBwZXIpIHtcbiAgaWYgKCFub2R1bGVzKSB7XG4gICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgbW9kdWxlcyB0byBwYXRjaCcpXG4gICAgbG9nZ2VyKChuZXcgRXJyb3IoKSkuc3RhY2spXG4gICAgcmV0dXJuXG4gIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkobm9kdWxlcykpIHtcbiAgICBub2R1bGVzID0gW25vZHVsZXNdXG4gIH1cblxuICBpZiAoIShuYW1lcyAmJiBBcnJheS5pc0FycmF5KG5hbWVzKSkpIHtcbiAgICBsb2dnZXIoJ211c3QgcHJvdmlkZSBvbmUgb3IgbW9yZSBmdW5jdGlvbnMgdG8gd3JhcCBvbiBtb2R1bGVzJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIG5vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kdWxlKSB7XG4gICAgbmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgd3JhcChub2R1bGUsIG5hbWUsIHdyYXBwZXIpXG4gICAgfSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdW53cmFwIChub2R1bGUsIG5hbWUpIHtcbiAgaWYgKCFub2R1bGUgfHwgIW5vZHVsZVtuYW1lXSkge1xuICAgIGxvZ2dlcignbm8gZnVuY3Rpb24gdG8gdW53cmFwLicpXG4gICAgbG9nZ2VyKChuZXcgRXJyb3IoKSkuc3RhY2spXG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAoIW5vZHVsZVtuYW1lXS5fX3Vud3JhcCkge1xuICAgIGxvZ2dlcignbm8gb3JpZ2luYWwgdG8gdW53cmFwIHRvIC0tIGhhcyAnICsgbmFtZSArICcgYWxyZWFkeSBiZWVuIHVud3JhcHBlZD8nKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBub2R1bGVbbmFtZV0uX191bndyYXAoKVxuICB9XG59XG5cbmZ1bmN0aW9uIG1hc3NVbndyYXAgKG5vZHVsZXMsIG5hbWVzKSB7XG4gIGlmICghbm9kdWxlcykge1xuICAgIGxvZ2dlcignbXVzdCBwcm92aWRlIG9uZSBvciBtb3JlIG1vZHVsZXMgdG8gcGF0Y2gnKVxuICAgIGxvZ2dlcigobmV3IEVycm9yKCkpLnN0YWNrKVxuICAgIHJldHVyblxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KG5vZHVsZXMpKSB7XG4gICAgbm9kdWxlcyA9IFtub2R1bGVzXVxuICB9XG5cbiAgaWYgKCEobmFtZXMgJiYgQXJyYXkuaXNBcnJheShuYW1lcykpKSB7XG4gICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgZnVuY3Rpb25zIHRvIHVud3JhcCBvbiBtb2R1bGVzJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIG5vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kdWxlKSB7XG4gICAgbmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdW53cmFwKG5vZHVsZSwgbmFtZSlcbiAgICB9KVxuICB9KVxufVxuXG5zaGltbWVyLndyYXAgPSB3cmFwXG5zaGltbWVyLm1hc3NXcmFwID0gbWFzc1dyYXBcbnNoaW1tZXIudW53cmFwID0gdW53cmFwXG5zaGltbWVyLm1hc3NVbndyYXAgPSBtYXNzVW53cmFwXG5cbm1vZHVsZS5leHBvcnRzID0gc2hpbW1lclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/shimmer/index.js\n");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzPzUxMTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./node_modules/zone.js/fesm2015/zone.js":
/*!***********************************************!*\
  !*** ./node_modules/zone.js/fesm2015/zone.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n* @license Angular v11.0.0-next.6+162.sha-170af07\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                if (checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/zone.js/fesm2015/zone.js\n");

/***/ }),

/***/ "./tracer.js":
/*!*******************!*\
  !*** ./tracer.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/tracing */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\n/* harmony import */ var _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/exporter-collector */ \"./node_modules/@opentelemetry/exporter-collector/build/src/index.js\");\n/* harmony import */ var _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _opentelemetry_web__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @opentelemetry/web */ \"./node_modules/@opentelemetry/web/build/src/index.js\");\n/* harmony import */ var _opentelemetry_web__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_web__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @opentelemetry/instrumentation-fetch */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js\");\n/* harmony import */ var _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _opentelemetry_instrumentation_xml_http_request__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @opentelemetry/instrumentation-xml-http-request */ \"./node_modules/@opentelemetry/instrumentation-xml-http-request/build/src/index.js\");\n/* harmony import */ var _opentelemetry_instrumentation_xml_http_request__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_instrumentation_xml_http_request__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @opentelemetry/context-zone */ \"./node_modules/@opentelemetry/context-zone/build/src/index.js\");\n/* harmony import */ var _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _opentelemetry_propagator_b3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @opentelemetry/propagator-b3 */ \"./node_modules/@opentelemetry/propagator-b3/build/src/index.js\");\n/* harmony import */ var _opentelemetry_propagator_b3__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_propagator_b3__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @opentelemetry/instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/index.js\");\n/* harmony import */ var _opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\nconst provider = new _opentelemetry_web__WEBPACK_IMPORTED_MODULE_3__[\"WebTracerProvider\"]();\nObject(_opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_8__[\"registerInstrumentations\"])({\n  instrumentations: [new _opentelemetry_instrumentation_xml_http_request__WEBPACK_IMPORTED_MODULE_5__[\"XMLHttpRequestInstrumentation\"]({\n    ignoreUrls: [/localhost:8090\\/sockjs-node/],\n    propagateTraceHeaderCorsUrls: ['https://httpbin.org/get']\n  }), new _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_4__[\"FetchInstrumentation\"]({\n    ignoreUrls: [/localhost:8090\\/sockjs-node/],\n    propagateTraceHeaderCorsUrls: ['https://httpbin.org/get'],\n    clearTimingResources: true\n  })],\n  tracerProvider: provider\n});\nprovider.addSpanProcessor(new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1__[\"SimpleSpanProcessor\"](new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1__[\"ConsoleSpanExporter\"]()));\nprovider.addSpanProcessor(new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_1__[\"SimpleSpanProcessor\"](new _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__[\"CollectorTraceExporter\"]({\n  url: 'https://ingest.lightstep.com:443/traces/otlp/v0.6',\n  serviceName: window.LS_SERVICE_NAME || 'browser',\n  headers: {\n    'Lightstep-Access-Token': window.LS_ACCESS_TOKEN\n  }\n})));\nprovider.register({\n  contextManager: new _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_6__[\"ZoneContextManager\"](),\n  propagator: new _opentelemetry_propagator_b3__WEBPACK_IMPORTED_MODULE_7__[\"B3Propagator\"]()\n});\nwindow._traceProvider = provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cmFjZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90cmFjZXIuanM/YWY1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb250ZXh0LCBnZXRTcGFuLCBzZXRTcGFuIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmltcG9ydCB7IENvbnNvbGVTcGFuRXhwb3J0ZXIsIFNpbXBsZVNwYW5Qcm9jZXNzb3IgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS90cmFjaW5nJztcbmltcG9ydCB7IENvbGxlY3RvclRyYWNlRXhwb3J0ZXIgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3InO1xuaW1wb3J0IHsgV2ViVHJhY2VyUHJvdmlkZXIgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS93ZWInO1xuaW1wb3J0IHsgRmV0Y2hJbnN0cnVtZW50YXRpb24gfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZmV0Y2gnO1xuaW1wb3J0IHsgWE1MSHR0cFJlcXVlc3RJbnN0cnVtZW50YXRpb24gfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24teG1sLWh0dHAtcmVxdWVzdCc7XG5pbXBvcnQgeyBab25lQ29udGV4dE1hbmFnZXIgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9jb250ZXh0LXpvbmUnO1xuaW1wb3J0IHsgQjNQcm9wYWdhdG9yIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvcHJvcGFnYXRvci1iMyc7XG5pbXBvcnQgeyByZWdpc3Rlckluc3RydW1lbnRhdGlvbnMgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24nO1xuXG5jb25zdCBwcm92aWRlciA9IG5ldyBXZWJUcmFjZXJQcm92aWRlcigpO1xuXG5yZWdpc3Rlckluc3RydW1lbnRhdGlvbnMoe1xuICBpbnN0cnVtZW50YXRpb25zOiBbXG4gICAgbmV3IFhNTEh0dHBSZXF1ZXN0SW5zdHJ1bWVudGF0aW9uKHtcbiAgICAgIGlnbm9yZVVybHM6IFsvbG9jYWxob3N0OjgwOTBcXC9zb2NranMtbm9kZS9dLFxuICAgICAgcHJvcGFnYXRlVHJhY2VIZWFkZXJDb3JzVXJsczogW1xuICAgICAgICAnaHR0cHM6Ly9odHRwYmluLm9yZy9nZXQnLFxuICAgICAgXSxcbiAgICB9KSxcbiAgICBuZXcgRmV0Y2hJbnN0cnVtZW50YXRpb24oe1xuICAgICAgaWdub3JlVXJsczogWy9sb2NhbGhvc3Q6ODA5MFxcL3NvY2tqcy1ub2RlL10sXG4gICAgICBwcm9wYWdhdGVUcmFjZUhlYWRlckNvcnNVcmxzOiBbXG4gICAgICAgICdodHRwczovL2h0dHBiaW4ub3JnL2dldCcsXG4gICAgICBdLFxuICAgICAgY2xlYXJUaW1pbmdSZXNvdXJjZXM6IHRydWVcbiAgICB9KSxcbiAgXSxcbiAgdHJhY2VyUHJvdmlkZXI6IHByb3ZpZGVyLFxufSk7XG5cbnByb3ZpZGVyLmFkZFNwYW5Qcm9jZXNzb3IobmV3IFNpbXBsZVNwYW5Qcm9jZXNzb3IobmV3IENvbnNvbGVTcGFuRXhwb3J0ZXIoKSkpO1xucHJvdmlkZXIuYWRkU3BhblByb2Nlc3NvcihcbiAgbmV3IFNpbXBsZVNwYW5Qcm9jZXNzb3IoXG4gICAgbmV3IENvbGxlY3RvclRyYWNlRXhwb3J0ZXIoe1xuICAgICAgdXJsOiAnaHR0cHM6Ly9pbmdlc3QubGlnaHRzdGVwLmNvbTo0NDMvdHJhY2VzL290bHAvdjAuNicsXG4gICAgICBzZXJ2aWNlTmFtZTogd2luZG93LkxTX1NFUlZJQ0VfTkFNRSB8fCAnYnJvd3NlcicsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdMaWdodHN0ZXAtQWNjZXNzLVRva2VuJzogd2luZG93LkxTX0FDQ0VTU19UT0tFTlxuICAgICAgfVxuICAgIH0pXG4gIClcbik7XG5cbnByb3ZpZGVyLnJlZ2lzdGVyKHtcbiAgY29udGV4dE1hbmFnZXI6IG5ldyBab25lQ29udGV4dE1hbmFnZXIoKSxcbiAgcHJvcGFnYXRvcjogbmV3IEIzUHJvcGFnYXRvcigpLFxufSk7XG5cbndpbmRvdy5fdHJhY2VQcm92aWRlciA9IHByb3ZpZGVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRkE7QUFPQTtBQUNBO0FBR0E7QUFMQTtBQVFBO0FBaEJBO0FBbUJBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBSEE7QUFVQTtBQUNBO0FBQ0E7QUFGQTtBQUtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./tracer.js\n");

/***/ })

/******/ });